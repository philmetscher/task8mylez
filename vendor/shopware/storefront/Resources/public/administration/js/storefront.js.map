{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-list/sw-theme-manager-list.scss","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/extension/sw-sales-channel/view/sw-sales-channel-detail-theme/sw-sales-channel-detail-theme.scss","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/acl/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-modal/sw-theme-modal.scss","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-list/sw-theme-manager-list.html.twig","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/extension/sw-sales-channel/view/sw-sales-channel-detail-theme/sw-sales-channel-detail-theme.html.twig","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-detail/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-list/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-list-item/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-modal/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/extension/sw-sales-channel/page/sw-sales-channel-detail/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/extension/sw-sales-channel/view/sw-sales-channel-detail-theme/index.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/core/service/api/theme.api.service.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/init/api-service.init.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-modal/sw-theme-modal.html.twig","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/mixin/sw-theme.mixin.js","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/extension/sw-sales-channel/page/sw-sales-channel-detail/sw-sales-channel-detail.html.twig","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-list-item/sw-theme-list-item.scss","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-detail/sw-theme-manager-detail.scss","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/component/sw-theme-list-item/sw-theme-list-item.html.twig","webpack:////builds/shopware/6/product/production/repos/storefront/Resources/app/administration/src/modules/sw-theme-manager/page/sw-theme-manager-detail/sw-theme-manager-detail.html.twig"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","content","locals","add","default","Shopware","Service","addPrivilegeMappingEntry","category","parent","roles","viewer","privileges","getPrivileges","dependencies","editor","creator","deleter","Component","Mixin","Criteria","Data","Utils","getObjectDiff","cloneDeep","isArray","types","register","template","inject","mixins","getByName","data","theme","parentTheme","defaultMediaFolderId","structuredThemeFields","themeConfig","currentThemeConfig","showResetModal","showSaveModal","errorModalMessage","baseThemeConfig","currentThemeConfigInitial","inheritanceChanged","isLoading","isSaveSuccessful","mappedFields","color","fontFamily","defaultTheme","themeCompatibleSalesChannels","salesChannelsWithTheme","newAssignedSalesChannels","overwrittenSalesChannelAssignments","removedSalesChannels","metaInfo","title","this","$createTitle","themeName","computed","isDerived","technicalName","baseConfig","configInheritance","includes","mediaRepository","repositoryFactory","defaultFolderRepository","salesChannelRepository","previewMedia","id","url","defaultThemeAsset","Context","api","assetsPath","deleteDisabledToolTip","showDelay","message","$tc","disabled","salesChannels","length","themeId","$route","params","shouldShowContent","values","hasMoreThanOneTab","tabs","isDefaultTheme","created","createdComponent","watch","getTheme","methods","setPageContext","criteria","addAssociation","themeRepository","then","response","getThemeConfig","parentThemeId","getParentTheme","checkInheritance","themeService","getStructuredFields","fields","getConfiguration","config","currentFields","baseThemeFields","getDefaultTheme","getDefaultFolderId","folderId","getThemeCompatibleSalesChannels","ids","getSalesChannelsWithTheme","openMediaSidebar","$refs","mediaSidebarItem","openContent","onAddMediaToTheme","mediaItem","context","setMediaItem","onDropMedia","dragData","successfulUpload","targetId","media","removeMediaItem","field","updateCurrentValue","isInherited","removeInheritance","restoreMediaInheritance","currentValue","onReset","acl","can","configValues","onCloseResetModal","onCloseErrorModal","onConfirmThemeReset","resetTheme","onSave","findChangedSalesChannels","onSaveTheme","onSaveClean","onCloseSaveModal","onConfirmThemeSave","clean","Promise","all","saveSalesChannels","saveThemeConfig","catch","error","actions","errorObject","errors","code","push","label","method","detail","createNotificationError","toString","autoClose","promises","forEach","salesChannelId","assignTheme","salesChannel","diff","getSyncChangeset","changeset","changes","findAddedSalesChannels","deletions","findRemovedSalesChannels","overwrittenSalesChannel","salesChannelName","translated","oldThemeName","extensions","themes","getOrigin","getCurrentChangeset","newValues","allValues","assign","filtered","entries","undefined","type","removeInheritedFromChangeset","wrapperIsVisible","updateTheme","saveFinish","onSearch","term","onChangeTab","item","startsWith","mapSwFieldTypes","addFilter","equalsAny","search","searchResult","getIds","not","equals","schema","entity","defaultFolder","first","folder","getBind","custom","selectionDisablingMethod","selection","has","isThemeCompatible","total","disableRouteParams","listMode","sortBy","sortDirection","limit","identifier","languageRepository","columnConfig","getColumnConfig","sortOptions","sortingConCat","lockToolTip","onRefresh","getList","page","addSorting","sort","setTerm","pages","resetList","updateRoute","onChangeLanguage","languageId","onListItemClick","$router","onSortingChanged","split","onPageChange","onListModeChange","onPreviewChange","showMediaModal","currentTheme","onPreviewImageRemove","previewMediaId","saveTheme","onModalClose","onPreviewImageChange","image","save","primary","sortable","Application","props","required","active","Boolean","componentClasses","isActive","onChangePreviewImage","$emit","onThemeClick","onRemovePreviewImage","onDelete","emitItemClick","selected","selectLayout","closeModal","selectItem","onSelection","Module","description","version","targetVersion","icon","favicon","routes","index","component","path","meta","privilege","parentPath","navigation","position","routeMiddleware","next","currentRoute","children","isChildren","override","getLoadSalesChannelCriteria","$super","showThemeSelectionModal","showChangeModal","newThemeId","deep","handler","openThemeModal","closeThemeModal","openInThemeManager","onChangeTheme","onCloseChangeModal","onConfirmChange","onThemeSelect","selectedThemeId","ApiService","Classes","ThemeApiService","httpClient","loginService","apiEndpoint","additionalParams","additionalHeaders","apiRoute","getApiBasePath","post","headers","getBasicHeaders","handleResponse","patch","State","container","initContainer","getContainer","ThemeService","listToStyles","parentId","list","styles","newStyles","part","css","sourceMap","parts","hasDocument","document","DEBUG","Error","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","obj","update","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","replacement","filter","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","showDeleteModal","showRenameModal","showDuplicateModal","newThemeName","modalTheme","onDeleteTheme","onCloseDeleteModal","onConfirmThemeDelete","deleteTheme","titleDeleteError","messageDeleteError","delete","onDuplicateTheme","onCloseDuplicateModal","onConfirmThemeDuplicate","duplicateTheme","themeDuplicate","author","labels","helpTexts","customFields","onRenameTheme","onCloseRenameModal","onConfirmThemeRename","RenameTheme"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,uBAIjBlC,EAAoBA,EAAoBmC,EAAI,Q,yBC/ErD,IAAIC,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACjC,EAAOC,EAAIgC,EAAS,MAC7DA,EAAQC,SAAQlC,EAAOD,QAAUkC,EAAQC,SAG/BC,EADH,EAAQ,QAAgIC,SACjI,WAAYH,GAAS,EAAM,K,uBCL5C,IAAIA,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACjC,EAAOC,EAAIgC,EAAS,MAC7DA,EAAQC,SAAQlC,EAAOD,QAAUkC,EAAQC,SAG/BC,EADH,EAAQ,QAAgIC,SACjI,WAAYH,GAAS,EAAM,K,qBCR5CI,SAASC,QAAQ,cACZC,yBAAyB,CACtBC,SAAU,cACVC,OAAQ,UACRjB,IAAK,QACLkB,MAAO,CACHC,OAAQ,CACJC,WAAY,CACR,aACA,mBACA,qBACAP,SAASC,QAAQ,cAAcO,cAAc,iBAEjDC,aAAc,IAElBC,OAAQ,CACJH,WAAY,CACR,eACA,qBACA,WACA,qBACA,eACA,gBACA,4BACA,2BACA,qBACA,4BACA,YACA,sBACA,uBACA,wBACA,oBACA,iCACAP,SAASC,QAAQ,cAAcO,cAAc,kBAEjDC,aAAc,CACV,iBAGRE,QAAS,CACLJ,WAAY,CACR,eACA,sBAEJE,aAAc,CACV,eACA,iBAGRG,QAAS,CACLL,WAAY,CACR,eACA,sBAEJE,aAAc,CACV,qB,uBCpDpB,IAAIb,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACjC,EAAOC,EAAIgC,EAAS,MAC7DA,EAAQC,SAAQlC,EAAOD,QAAUkC,EAAQC,SAG/BC,EADH,EAAQ,QAAgIC,SACjI,WAAYH,GAAS,EAAM,K,mBCR5CjC,EAAOD,QAAU,mo2B,mBCAjBC,EAAOD,QAAU,+yL,8hCCGjB,MAA6BsC,SAArBa,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACbC,EAAWf,SAASgB,KAAKD,SAC/B,EAAqCf,SAASiB,MAAM3B,OAA5C4B,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,UACfC,EAAYpB,SAASiB,MAAMI,MAA3BD,QAERP,EAAUS,SAAS,0BAA2B,CAC1CC,aAEAC,OAAQ,CAAC,MAAO,WAEhBC,OAAQ,CACJX,EAAMY,UAAU,SAChBZ,EAAMY,UAAU,iBAGpBC,KAV0C,WAWtC,MAAO,CACHC,MAAO,KACPC,aAAa,EACbC,qBAAsB,KACtBC,sBAAuB,GACvBC,YAAa,GACbC,mBAAoB,GACpBC,gBAAgB,EAChBC,eAAe,EACfC,kBAAmB,KACnBC,gBAAiB,GACjBC,0BAA2B,GAC3BC,mBAAoB,GACpBC,WAAW,EACXC,kBAAkB,EAClBC,aAAc,CACVC,MAAO,cACPC,WAAY,QAEhBC,aAAc,KACdC,6BAA8B,GAC9BC,uBAAwB,KACxBC,yBAA0B,GAC1BC,mCAAoC,GACpCC,qBAAsB,KAI9BC,SAvC0C,WAwCtC,MAAO,CACHC,MAAOC,KAAKC,aAAaD,KAAKE,aAItCC,SAAU,CACND,UADM,WAEF,OAAIF,KAAKzB,MACEyB,KAAKzB,MAAMzD,KAGf,IAGXsF,UATM,WASO,IAAD,IACR,QAAKJ,KAAKzB,QAGuB,eAA7ByB,KAAKzB,MAAM8B,kBAGXL,KAAKxB,eAILT,EAAO,UAACiC,KAAKzB,aAAN,iBAAC,EAAY+B,kBAAb,aAAC,EAAwBC,qBAC/BP,KAAKzB,MAAM+B,WAAWC,kBAAkBC,SAAS,mBAO1DC,gBA5BM,WA6BF,OAAOT,KAAKU,kBAAkB7E,OAAO,UAGzC8E,wBAhCM,WAiCF,OAAOX,KAAKU,kBAAkB7E,OAAO,yBAGzC+E,uBApCM,WAqCF,OAAOZ,KAAKU,kBAAkB7E,OAAO,kBAGzCgF,aAxCM,WAyCF,OAAIb,KAAKzB,OAASyB,KAAKzB,MAAMsC,cAAgBb,KAAKzB,MAAMsC,aAAaC,IAAMd,KAAKzB,MAAMsC,aAAaE,IACxF,CACH,mBAAmB,QAAnB,OAA4Bf,KAAKzB,MAAMsC,aAAaE,IAApD,MACA,kBAAmB,SAIpB,CACH,mBAAoBf,KAAKgB,oBAIjCA,kBArDM,WAsDF,MAAM,QAAN,OAAerE,SAASsE,QAAQC,IAAIC,WAApC,iEAGJC,sBAzDM,WA0DF,MAAO,CACHC,UAAW,IACXC,QAAStB,KAAKuB,IAAI,kDAClBC,SAA8C,IAApCxB,KAAKzB,MAAMkD,cAAcC,SAI3CC,QAjEM,WAkEF,OAAO3B,KAAK4B,OAAOC,OAAOf,IAG9BgB,kBArEM,WAsEF,OAAO7G,OAAO8G,OAAO/B,KAAKtB,uBAAuBgD,OAAS,IAAM1B,KAAKb,WAGzE6C,kBAzEM,WA0EF,OAAO/G,OAAO8G,OAAO/B,KAAKtB,sBAAsBuD,MAAMP,OAAS,GAGnEQ,eA7EM,WA8EF,OAAOlC,KAAKzB,MAAMuC,KAAOd,KAAKR,aAAasB,KAInDqB,QA/H0C,WAgItCnC,KAAKoC,oBAGTC,MAAO,CACHV,QADG,WAEC3B,KAAKsC,aAIbC,QAAS,CACLH,iBADK,WAEDpC,KAAKsC,WACLtC,KAAKwC,kBAGTF,SANK,WAMO,IAAD,OACP,GAAKtC,KAAK2B,QAAV,CAIA3B,KAAKb,WAAY,EAEjB,IAAMsD,EAAW,IAAI/E,EACrB+E,EAASC,eAAe,gBACxBD,EAASC,eAAe,iBAExB1C,KAAK2C,gBAAgBvH,IAAI4E,KAAK2B,QAAShF,SAASsE,QAAQC,IAAKuB,GAAUG,MAAK,SAACC,GACzE,EAAKtE,MAAQsE,EACb,EAAKC,iBAED,EAAKvE,MAAMwE,eACX,EAAKC,iBAGT,EAAK7D,WAAY,OAIzB8D,iBA7BK,SA6BYzH,GACb,OAAQA,GAGZsH,eAjCK,WAiCa,IAAD,OACb9C,KAAKb,WAAY,EAEZa,KAAKzB,OAAUyB,KAAK2B,UAIzB3B,KAAKtB,sBAAwB,GAC7BsB,KAAKpB,mBAAqB,GAC1BoB,KAAKrB,YAAc,GACnBqB,KAAKhB,gBAAkB,GACvBgB,KAAKf,0BAA4B,GAEjCe,KAAKkD,aAAaC,oBAAoBnD,KAAK2B,SAASiB,MAAK,SAACQ,GACtD,EAAK1E,sBAAwB0E,KAGjCpD,KAAKkD,aAAaG,iBAAiBrD,KAAK2B,SAASiB,MAAK,SAACU,GACnD,EAAK1E,mBAAqB0E,EAAOC,cACjC,EAAKtE,0BAA4BnB,EAAU,EAAKc,oBAChD,EAAKD,YAAc2E,EAAOF,OAC1B,EAAKpE,gBAAkBlB,EAAUwF,EAAOE,iBACxC,EAAKrE,WAAY,OAIzBqD,eA3DK,WA2Da,IAAD,OACbxC,KAAKyD,kBAAkBb,MAAK,SAACpD,GACzB,EAAKA,aAAeA,KAGxBQ,KAAK0D,qBAAqBd,MAAK,SAACe,GAC5B,EAAKlF,qBAAuBkF,KAGhC3D,KAAK4D,kCAAkChB,MAAK,SAACiB,GACzC,EAAKpE,6BAA+BoE,KAGxC7D,KAAK8D,4BAA4BlB,MAAK,SAACnB,GACnC,EAAK/B,uBAAyB+B,MAItCuB,eA7EK,WA6Ea,IAAD,OACbhD,KAAK2C,gBAAgBvH,IAAI4E,KAAKzB,MAAMwE,cAAepG,SAASsE,QAAQC,KAAK0B,MAAK,SAACpE,GAC3E,EAAKA,YAAcA,MAI3BuF,iBAnFK,WAoFD/D,KAAKgE,MAAMC,iBAAiBC,eAGhCC,kBAvFK,SAuFaC,EAAWC,GACzBrE,KAAKsE,aAAaF,EAAWC,IAGjCE,YA3FK,SA2FOC,EAAUH,GAClBrE,KAAKsE,aAAaE,EAAUH,IAGhCC,aA/FK,SA+FQF,EAAWC,GACpBA,EAAQ7I,MAAQ4I,EAAUtD,IAG9B2D,iBAnGK,SAmGYL,EAAWC,GAAU,IAAD,OACjCrE,KAAKS,gBACArF,IAAIgJ,EAAUM,SAAU/H,SAASsE,QAAQC,KACzC0B,MAAK,SAAC+B,GAEH,OADA,EAAKL,aAAaK,EAAON,IAClB,MAInBO,gBA5GK,SA4GWC,EAAOC,EAAoBC,EAAaC,GACpDhF,KAAKpB,mBAAmBiG,GAAOrJ,MAAQ,KACvCwE,KAAKrB,YAAYkG,GAAOrJ,MAAQ,KAC5BuJ,EACAD,EAAmB,MAEnBE,EAAkB,MAEtBhF,KAAKf,0BAA0B4F,GAAOrJ,OAAQ,GAGlDyJ,wBAvHK,SAuHmBC,EAAc1J,GAClC,OAAO0J,GAGXC,QA3HK,WA4HInF,KAAKoF,IAAIC,IAAI,iBAIc,OAA5BrF,KAAKzB,MAAM+G,eAIftF,KAAKnB,gBAAiB,IAG1B0G,kBAvIK,WAwIDvF,KAAKnB,gBAAiB,GAG1B2G,kBA3IK,WA4IDxF,KAAKjB,kBAAoB,MAG7B0G,oBA/IK,WA+IkB,IAAD,OACbzF,KAAKoF,IAAIC,IAAI,kBAIlBrF,KAAKkD,aAAawC,WAAW1F,KAAK2B,SAASiB,MAAK,WAC5C,EAAKN,cAGTtC,KAAKnB,gBAAiB,IAG1B8G,OA3JK,WA8JD,GAFA3F,KAAK4F,6BAED5F,KAAKzB,MAAMkD,cAAcC,OAAS,GAAK1B,KAAKH,qBAAqB6B,OAAS,GAM9E,OAAO1B,KAAK6F,cALR7F,KAAKlB,eAAgB,GAQ7BgH,YAvKK,WA0KD,GAFA9F,KAAK4F,6BAED5F,KAAKzB,MAAMkD,cAAcC,OAAS,GAAK1B,KAAKH,qBAAqB6B,OAAS,GAM9E,OAAO1B,KAAK6F,aAAY,GALpB7F,KAAKlB,eAAgB,GAQ7BiH,iBAnLK,WAoLD/F,KAAKlB,eAAgB,GAGzBkH,mBAvLK,WAwLDhG,KAAK6F,cACL7F,KAAKlB,eAAgB,GAGzB+G,YA5LK,WA4LuB,IAAD,OAAfI,EAAe,wDACvB,GAAKjG,KAAKoF,IAAIC,IAAI,gBAOlB,OAHArF,KAAKZ,kBAAmB,EACxBY,KAAKb,WAAY,EAEV+G,QAAQC,IAAI,CAACnG,KAAKoG,oBAAqBpG,KAAKqG,gBAAgBJ,KAASrD,MAAK,WAC7E,EAAKN,cACNgE,OAAM,SAACC,GACN,EAAKpH,WAAY,EAEjB,IAAMqH,EAAU,GAEVC,EAAcF,EAAM1D,SAASvE,KAAKoI,OAAO,GACtB,2BAArBD,EAAYE,MACZH,EAAQI,KAAK,CACTC,MAAO,EAAKtF,IAAI,yCAChBuF,OAAQ,WACJ9G,KAAKjB,kBAAoB0H,EAAYM,QACvChL,KAAK,KAIf,EAAKiL,wBAAwB,CACzBjH,MAAO,EAAKwB,IAAI,wBAChBD,QAASiF,EAAMU,WACfC,WAAW,EACXV,QAAQ,GAAD,OAAMA,SAKzBJ,kBA9NK,WA8NgB,IAAD,OACVe,EAAW,GAcjB,OAZInH,KAAKL,yBAAyB+B,OAAS,GACvC1B,KAAKL,yBAAyByH,SAAQ,SAACC,GACnCF,EAASP,KAAK,EAAK1D,aAAaoE,YAAY,EAAK3F,QAAS0F,OAI9DrH,KAAKH,qBAAqB6B,OAAS,GACnC1B,KAAKH,qBAAqBuH,SAAQ,SAACG,GAC/BJ,EAASP,KAAK,EAAK1D,aAAaoE,YAAY,EAAK9H,aAAasB,GAAIyG,EAAazG,QAIhFoF,QAAQC,IAAIgB,IAGvBvB,yBAhPK,WAiPD5F,KAAKL,yBAA2B,GAChCK,KAAKH,qBAAuB,GAC5BG,KAAKJ,mCAAqC,GAE1C,IAAM4H,EAAOxH,KAAK2C,gBAAgB8E,iBAAiB,CAACzH,KAAKzB,QAErDiJ,EAAKE,UAAUhG,OAAS,GAAK8F,EAAKE,UAAU,GAAGC,QAAQvL,eAAe,kBACtE4D,KAAK4H,uBAAuBJ,EAAKE,UAAU,GAAGC,QAAQlG,eAGtD+F,EAAKK,UAAUnG,OAAS,GACxB1B,KAAK8H,yBAAyBN,EAAKK,YAI3CD,uBAhQK,SAgQkBnG,GAAgB,IAAD,OAClCA,EAAc2F,SAAQ,SAACG,GACnB,EAAK5H,yBAAyBiH,KAAKW,EAAazG,IAEhD,IAAMiH,EAA0B,EAAKrI,uBAAuBtE,IAAImM,EAAazG,IAC7C,OAA5BiH,GACA,EAAKnI,mCAAmCgH,KAAK,CACzC9F,GAAIyG,EAAazG,GACjBkH,iBAAkB,EAAKzJ,MAAMkD,cAAcrG,IAAImM,EAAazG,IAAImH,WAAWnN,KAC3EoN,aAAcH,EAAwBI,WAAWC,OAAO,GAAGtN,WAM3EgN,yBA/QK,SA+QoBrG,GAAgB,IAAD,OACpCA,EAAc2F,SAAQ,SAACG,GACnB,EAAK1H,qBAAqB+G,KAAK,CAC3B9F,GAAIyG,EAAazL,IACjBhB,KAAM,EAAKyD,MAAM8J,YAAY5G,cAAcrG,IAAImM,EAAazL,KAAKmM,WAAWnN,WAKxFwN,oBAxRK,WAwR+B,IAAD,EAAfrC,EAAe,wDAEzBsC,EAAY1K,EAAcmC,KAAKf,0BAA2Be,KAAKpB,oBAC/D4J,EAAS,UAAGxI,KAAKzB,MAAM+G,oBAAd,QAA8B,GAE7C,GADArK,OAAOwN,OAAOD,EAAWD,IACpBtC,EACD,OAAOuC,EAKX,IADA,IAAME,EAAW,GACjB,MAA2BzN,OAAO0N,QAAQH,GAA1C,eAAsD,CAAjD,gBAAO1M,EAAP,KAAYN,EAAZ,UAE6BoN,IAA1B5I,KAAKrB,YAAY7C,SACiB8M,IAA/B5I,KAAKrB,YAAY7C,GAAK+M,MACS,OAA/B7I,KAAKrB,YAAY7C,GAAK+M,OAI7BH,EAAS5M,GAAON,GAGpB,OAAOkN,GAGXI,6BAjTK,SAiTwBN,GACzB,cAA2BvN,OAAO0N,QAAQH,GAA1C,eAAsD,CAAjD,gBAAO1M,EAAP,UAEGkE,KAAK+I,iBAAiBjN,IACnBkE,KAAKgE,MAAL,kBAAsBlI,IAAO,GAAGiJ,mBAG3ByD,EAAU,GAAD,OAAI1M,IAIpBkE,KAAK+I,iBAAiBjN,SAC0B8M,IAA9C5I,KAAKd,mBAAL,kBAAmCpD,MACW,IAA9CkE,KAAKd,mBAAL,kBAAmCpD,YAE9B0M,EAAU,GAAD,OAAI1M,MAKjCiN,iBArUK,SAqUYjN,GACb,YAAwC8M,IAAjC5I,KAAKgE,MAAL,kBAAsBlI,KAC1BiC,EAAQiC,KAAKgE,MAAL,kBAAsBlI,WACM8M,IAApC5I,KAAKgE,MAAL,kBAAsBlI,IAAO,IAGpCuK,gBA3UK,WA2U2B,IAAD,OAAfJ,EAAe,wDACrBuC,EAAYxI,KAAKsI,oBAAoBrC,GAK3C,OAHAjG,KAAK8I,6BAA6BN,GAG3BxI,KAAKkD,aAAawC,WAAW1F,KAAK2B,SAASiB,MAAK,WACnD,OAAO,EAAKM,aAAa8F,YAAY,EAAKrH,QAAS,CAAE2B,OAAQkF,QAIrES,WAtVK,WAuVDjJ,KAAKZ,kBAAmB,GAG5B8J,SA1VK,WA0VmB,IAAf1N,EAAc,uDAAN,MACRA,EAAMkG,QAAUlG,EAAMkG,QAAU,EACjC1B,KAAKmJ,KAAO,KAEZnJ,KAAKmJ,KAAO3N,GAIpB4N,YAlWK,WAmWD,cAA0BnO,OAAO0N,QAAQ3I,KAAKgE,OAA9C,eAAsD,CAAjD,gBAAOlI,EAAP,KAAYuN,EAAZ,KAEGvN,EAAIwN,WAAW,kBACHV,IAATS,GACAtL,EAAQsL,SACIT,IAAZS,EAAK,KAERrJ,KAAKd,mBAAmBpD,GAAOuN,EAAK,GAAGtE,eAKnDwE,gBA/WK,SA+WW1E,GACZ,OAAQ7E,KAAKX,aAAawF,GAAgB7E,KAAKX,aAAawF,GAAzB,MAGvCjB,gCAnXK,WAoXD,IAAMnB,EAAW,IAAI/E,EAIrB,OAHA+E,EAASC,eAAe,QACxBD,EAAS+G,UAAU9L,EAAS+L,UAAU,YAAa,CAAC,aAAc,cAE3DzJ,KAAKY,uBAAuB8I,OAAOjH,EAAU9F,SAASsE,QAAQC,KAAK0B,MAAK,SAAC+G,GAC5E,OAAOA,EAAaC,aAI5B9F,0BA7XK,WA8XD,IAAMrB,EAAW,IAAI/E,EAMrB,OALA+E,EAASC,eAAe,UACxBD,EAAS+G,UAAU9L,EAASmM,IAAI,KAAM,CAClCnM,EAASoM,OAAO,YAAa,SAG1B9J,KAAKY,uBAAuB8I,OAAOjH,EAAU9F,SAASsE,QAAQC,KAAK0B,MAAK,SAAC+G,GAC5E,OAAOA,MAIfjG,mBAzYK,WA0YD,IAAMjB,EAAW,IAAI/E,EAAS,EAAG,GAIjC,OAHA+E,EAASC,eAAe,UACxBD,EAAS+G,UAAU9L,EAASoM,OAAO,SAAU9J,KAAK2C,gBAAgBoH,OAAOC,SAElEhK,KAAKW,wBAAwB+I,OAAOjH,EAAU9F,SAASsE,QAAQC,KAAK0B,MAAK,SAAC+G,GAC7E,IAAMM,EAAgBN,EAAaO,QACnC,OAAID,EAAcE,OAAOrJ,GACdmJ,EAAcE,OAAOrJ,GAGzB,SAIf2C,gBAxZK,WAyZD,IAAMhB,EAAW,IAAI/E,EAGrB,OAFA+E,EAAS+G,UAAU9L,EAASoM,OAAO,gBAAiB,eAE7C9J,KAAK2C,gBAAgB+G,OAAOjH,EAAU9F,SAASsE,QAAQC,KAAK0B,MAAK,SAACC,GACtE,OAAOA,EAASqH,YAWvBE,QAxaK,SAwaGvF,GACJ,IAAMvB,EAASrI,OAAOwN,OAAO,GAAI5D,GAOjC,cALOvB,EAAOuF,KAEd5N,OAAOwN,OAAOnF,EAAQA,EAAO+G,eACtB/G,EAAO+G,OACd/G,EAAOuD,MAAQ,GACR,CAAEgC,KAAMhE,EAAMgE,KAAMvF,OAAQA,IAGvCgH,yBAnbK,SAmboBC,GACrB,QAAKvK,KAAKkC,gBAIHlC,KAAKzB,MAAM8J,YAAY5G,cAAc+I,IAAID,EAAUzJ,KAG9D2J,kBA3bK,SA2bapB,GACd,OAAOrJ,KAAKP,6BAA6Be,SAAS6I,EAAKvI,Q,2+BC1kBnE,MAA6BnE,SAArBa,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACbC,EAAWf,SAASgB,KAAKD,SAE/BF,EAAUS,SAAS,wBAAyB,CACxCC,aAEAC,OAAQ,CAAC,OAETC,OAAQ,CACJX,EAAMY,UAAU,gBAChBZ,EAAMY,UAAU,WAChBZ,EAAMY,UAAU,UAGpBC,KAXwC,WAYpC,MAAO,CACH8J,OAAQ,GACRjJ,WAAW,EACXuL,MAAO,EACPC,oBAAoB,EACpBtD,eAAgBrH,KAAK4B,OAAOC,OAAOf,GACnC8J,SAAU,OACVC,OAAQ,YACRC,cAAe,OACfC,MAAO,EACP5B,KAAM,OAIdrJ,SA1BwC,WA2BpC,MAAO,CACHC,MAAOC,KAAKC,aAAaD,KAAKgL,cAItC7K,SAAU,CACN8K,mBADM,WAEF,OAAOjL,KAAKU,kBAAkB7E,OAAO,aAGzCqP,aALM,WAMF,OAAOlL,KAAKmL,mBAGhBC,YATM,WAUF,MAAO,CACH,CAAE5P,MAAO,iBAAkBV,KAAMkF,KAAKuB,IAAI,mDAC1C,CAAE/F,MAAO,gBAAiBV,KAAMkF,KAAKuB,IAAI,mDACzC,CAAE/F,MAAO,iBAAkBV,KAAMkF,KAAKuB,IAAI,mDAC1C,CAAE/F,MAAO,gBAAiBV,KAAMkF,KAAKuB,IAAI,qDAIjD8J,cAlBM,WAmBF,MAAM,GAAN,OAAUrL,KAAK6K,OAAf,YAAyB7K,KAAK8K,gBAGlCQ,YAtBM,WAuBF,MAAO,CACHjK,UAAW,IACXC,QAAStB,KAAKuB,IAAI,6CAK9BgB,QAAS,CACLgJ,UADK,WAEDvL,KAAKwL,WAGTA,QALK,WAKM,IAAD,OACNxL,KAAKb,WAAY,EAEjB,IAAMsD,EAAW,IAAI/E,EAASsC,KAAKyL,KAAMzL,KAAK+K,OAU9C,OATAtI,EAASC,eAAe,gBACxBD,EAASC,eAAe,iBACxBD,EAASiJ,WAAWhO,EAASiO,KAAK3L,KAAK6K,OAAQ7K,KAAK8K,gBACpDrI,EAAS+G,UAAU9L,EAASoM,OAAO,UAAU,IAE3B,OAAd9J,KAAKmJ,MACL1G,EAASmJ,QAAQ5L,KAAKmJ,MAGnBnJ,KAAK2C,gBAAgB+G,OAAOjH,EAAU9F,SAASsE,QAAQC,KAAK0B,MAAK,SAAC+G,GAKrE,OAJA,EAAKe,MAAQf,EAAae,MAC1B,EAAKtC,OAASuB,EACd,EAAKxK,WAAY,EAEV,EAAK0M,SACbvF,OAAM,WACL,EAAKnH,WAAY,MAIzB2M,UA7BK,WA8BD9L,KAAKyL,KAAO,EACZzL,KAAKoI,OAAS,GACdpI,KAAK+L,YAAY,CACbN,KAAMzL,KAAKyL,KACXV,MAAO/K,KAAK+K,MACZ5B,KAAMnJ,KAAKmJ,KACX0B,OAAQ7K,KAAK6K,OACbC,cAAe9K,KAAK8K,gBAGxB9K,KAAKwL,WAGTQ,iBA3CK,SA2CYC,GACbtP,SAASsE,QAAQC,IAAI+K,WAAaA,EAClCjM,KAAK8L,aAGTI,gBAhDK,SAgDW3N,GACZyB,KAAKmM,QAAQvF,KAAK,CAAE9L,KAAM,0BAA2B+G,OAAQ,CAAEf,GAAIvC,EAAMuC,OAG7EsL,iBApDK,SAoDY5Q,GAAQ,IAAD,IACgBA,EAAM6Q,MAAM,KAD5B,GACnBrM,KAAK6K,OADc,KACN7K,KAAK8K,cADC,KAEpB9K,KAAK8L,aAGT5C,SAzDK,WAyDmB,IAAf1N,EAAc,uDAAN,KACbwE,KAAKmJ,KAAO3N,EAAMkG,OAAS,EAAIlG,EAAQ,KAEvCwE,KAAK8L,aAGTQ,aA/DK,YA+D0B,IAAhBb,EAAe,EAAfA,KAAMV,EAAS,EAATA,MACjB/K,KAAKyL,KAAOA,EACZzL,KAAK+K,MAAQA,EAEb/K,KAAKwL,UACLxL,KAAK+L,YAAY,CACbN,KAAMzL,KAAKyL,KACXV,MAAO/K,KAAK+K,SAIpBwB,iBA1EK,WA2EDvM,KAAK4K,SAA8B,SAAlB5K,KAAK4K,SAAuB,OAAS,OACtD5K,KAAK+K,MAA2B,SAAlB/K,KAAK4K,SAAuB,EAAI,GAE9C5K,KAAK8L,aAGTU,gBAjFK,SAiFWjO,GACPyB,KAAKoF,IAAIC,IAAI,kBAIlBrF,KAAKyM,gBAAiB,EACtBzM,KAAK0M,aAAenO,IAGxBoO,qBA1FK,SA0FgBpO,GACZyB,KAAKoF,IAAIC,IAAI,kBAIlB9G,EAAMqO,eAAiB,KACvBrO,EAAMsC,aAAe,KACrBb,KAAK6M,UAAUtO,KAGnBuO,aApGK,WAqGD9M,KAAKyM,gBAAiB,EACtBzM,KAAK0M,aAAe,MAGxBK,qBAzGK,YAyG0B,IAATC,EAAQ,UAC1BhN,KAAK0M,aAAaE,eAAiBI,EAAMlM,GACzCd,KAAK6M,UAAU7M,KAAK0M,cACpB1M,KAAK0M,aAAa7L,aAAemM,GAGrCH,UA/GK,SA+GKtO,GAAQ,IAAD,OAEb,OADAyB,KAAKb,WAAY,EACVa,KAAK2C,gBAAgBsK,KAAK1O,EAAO5B,SAASsE,QAAQC,KAAK0B,MAAK,WAC/D,EAAKzD,WAAY,KAClBmH,OAAM,WACL,EAAKnH,WAAY,MAIzBgM,gBAxHK,WAyHD,MAAO,CAAC,CACJjP,SAAU,OACV2K,MAAO7G,KAAKuB,IAAI,wCAChB2L,SAAS,GAEb,CACIhR,SAAU,uBACV2K,MAAO7G,KAAKuB,IAAI,8CAChB4L,UAAU,GAEd,CACIjR,SAAU,YACV2K,MAAO7G,KAAKuB,IAAI,8CAIxBH,sBAzIK,SAyIiB7C,GAClB,MAAO,CACH8C,UAAW,IACXC,QAAStB,KAAKuB,IAAI,kDAClBC,SAAyC,IAA/BjD,EAAMkD,cAAcC,Y,yBC9M9C,G,UAAmC/E,UAA3Ba,EAAR,EAAQA,UAAR,EAAmB4P,YAEnB5P,EAAUS,SAAS,qBAAsB,CACrCC,aAEAmP,MAAO,CACH9O,MAAO,CACHsK,KAAM5N,OACNqS,UAAU,EACV5Q,QAAS,MAGb6Q,OAAQ,CACJ1E,KAAM2E,QACNF,UAAU,EACV5Q,SAAS,GAGb8E,SAAU,CACNqH,KAAM2E,QACNF,UAAU,EACV5Q,SAAS,IAIjByD,SAAU,CACNU,aADM,WAEF,OAAIb,KAAKzB,MAAMsC,cAAgBb,KAAKzB,MAAMsC,aAAaC,IAAMd,KAAKzB,MAAMsC,aAAaE,IAC1E,CACH,mBAAmB,QAAnB,OAA4Bf,KAAKzB,MAAMsC,aAAaE,IAApD,MACA,kBAAmB,SAIpB,CACH,mBAAoBf,KAAKgB,oBAIjCA,kBAdM,WAeF,MAAM,QAAN,OAAerE,SAASsE,QAAQC,IAAIC,WAApC,iEAGJmK,YAlBM,WAmBF,MAAO,CACHjK,UAAW,IACXC,QAAStB,KAAKuB,IAAI,4CAI1BkM,iBAzBM,WA0BF,MAAO,CACH,aAAczN,KAAK0N,WACnB,eAAgB1N,KAAKwB,YAKjCe,QAAS,CACLmL,SADK,WAED,OAAO1N,KAAKzB,OAASyB,KAAKzB,MAAMkD,eAAiBzB,KAAKzB,MAAMkD,cAAcC,OAAS,GAAK1B,KAAKuN,QAGjGI,qBALK,SAKgBpP,GACbyB,KAAKwB,UAITxB,KAAK4N,MAAM,uBAAwBrP,IAGvCsP,aAbK,WAcG7N,KAAKwB,UAITxB,KAAK4N,MAAM,aAAc5N,KAAKzB,QAGlCuP,qBArBK,SAqBgBvP,GACjBA,EAAMqO,eAAiB,KACvBrO,EAAM0O,OACN1O,EAAMsC,aAAe,MAGzBkN,SA3BK,SA2BIxP,GACDyB,KAAKwB,UAITxB,KAAK4N,MAAM,eAAgBrP,IAG/ByP,cAnCK,SAmCS3E,GACNrJ,KAAKwB,UAITxB,KAAK4N,MAAM,aAAcvE,O,yBClGrC,G,UAA6B1M,UAArBa,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACbC,EAAWf,SAASgB,KAAKD,SAE/BF,EAAUS,SAAS,iBAAkB,CACjCC,aAEAC,OAAQ,CAAC,qBAETC,OAAQ,CACJX,EAAMY,UAAU,YAGpBC,KATiC,WAU7B,MAAO,CACH2P,SAAU,KACV9O,WAAW,EACX0L,OAAQ,YACRC,cAAe,OACf3B,KAAM,KACNuB,MAAO,KACPtC,OAAQ,KAIhBjI,SAAU,CACNwC,gBADM,WAEF,OAAO3C,KAAKU,kBAAkB7E,OAAO,WAI7C0G,QAAS,CACLiJ,QADK,WACM,IAAD,OACNxL,KAAKb,WAAY,EACjB,IAAMsD,EAAW,IAAI/E,EAASsC,KAAKyL,KAAMzL,KAAK+K,OAW9C,OAVAtI,EAASC,eAAe,gBACxBD,EAASC,eAAe,iBACxBD,EAAS+G,UAAU9L,EAASoM,OAAO,UAAU,IAE7CrH,EAASiJ,WAAWhO,EAASiO,KAAK3L,KAAK6K,OAAQ7K,KAAK8K,gBAElC,OAAd9K,KAAKmJ,MACL1G,EAASmJ,QAAQ5L,KAAKmJ,MAGnBnJ,KAAK2C,gBAAgB+G,OAAOjH,EAAU9F,SAASsE,QAAQC,KAAK0B,MAAK,SAAC+G,GAKrE,OAJA,EAAKe,MAAQf,EAAae,MAC1B,EAAKtC,OAASuB,EACd,EAAKxK,WAAY,EAEV,EAAKiJ,UACb9B,OAAM,WACL,EAAKnH,WAAY,MAIzB+O,aAzBK,WA0BDlO,KAAK4N,MAAM,qBAAsB5N,KAAKiO,UACtCjO,KAAKmO,cAGTC,WA9BK,SA8BMzM,GACP3B,KAAKiO,SAAWtM,GAGpBuH,SAlCK,SAkCI1N,GACLwE,KAAKmJ,KAAO3N,EAAMkG,OAAS,EAAIlG,EAAMkG,OAAS,KAE9C1B,KAAKyL,KAAO,EACZzL,KAAKwL,WAGT6C,YAzCK,SAyCO1M,GACR3B,KAAKiO,SAAWtM,GAGpBwM,WA7CK,WA8CDnO,KAAK4N,MAAM,eACX5N,KAAKiO,SAAW,KAChBjO,KAAKmJ,KAAO,S,UC1ELxM,SAAX2R,OAEDrQ,SAAS,mBAAoB,CAChC4K,KAAM,OACN9I,MAAO,+CACPwO,YAAa,iDACbC,QAAS,QACTC,cAAe,QACfnP,MAAO,UACPoP,KAAM,yBACNC,QAAS,0BACT3E,OAAQ,QAER4E,OAAQ,CACJC,MAAO,CACHC,UAAW,wBACXC,KAAM,QACNC,KAAM,CACFC,UAAW,iBAGnBlI,OAAQ,CACJ+H,UAAW,0BACXC,KAAM,aACNC,KAAM,CACFE,WAAY,yBACZD,UAAW,kBAKvBE,WAAY,CAAC,CACTrO,GAAI,mBACJ+F,MAAO,+CACPvH,MAAO,UACPoP,KAAM,uBACNK,KAAM,yBACNE,UAAW,eACXG,SAAU,GACVrS,OAAQ,eAIZsS,gBAzCgC,SAyChBC,EAAMC,GACQ,4BAAtBA,EAAazU,MACbyU,EAAaC,SAAS5I,KAAK,CACvBkI,UAAW,gCACXhU,KAAM,gCACN2U,YAAY,EACZV,KAAM,qCACNC,KAAM,CACFC,UAAW,0BAKvBK,EAAKC,M,yBC7DS5S,SAAda,UAEEkS,SAAS,0BAA2B,CAC1CxR,aAEAqE,QAAS,CACLoN,4BADK,WAED,IAAMlN,EAAWzC,KAAK4P,OAAO,+BAI7B,OAFAnN,EAASC,eAAe,UAEjBD,M,yBCVnB,G,UAA6B9F,UAArBa,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MACbC,EAAWf,SAASgB,KAAKD,S,m+DAE/BF,EAAUS,SAAS,gCAAiC,CAChDC,aAEAE,OAAQ,CACJX,EAAMY,UAAU,gBAChBZ,EAAMY,UAAU,gBAGpBF,OAAQ,CACJ,oBACA,eACA,OAGJkP,MAAO,CACH9F,aAAc,CACV+F,UAAU,IAIlBhP,KApBgD,WAqB5C,MAAO,CACHC,MAAO,KACPsR,yBAAyB,EACzBC,iBAAiB,EACjBC,WAAY,KACZ5Q,WAAW,IAInBgB,SAAU,CACNwC,gBADM,WAEF,OAAO3C,KAAKU,kBAAkB7E,OAAO,WAI7CwG,MAAO,CACH,iCAAkC,CAC9B2N,MAAM,EACNC,QAF8B,YAGrBjQ,KAAKuH,eAAiBvH,KAAKuH,aAAaY,YAAcnI,KAAKuH,aAAaY,WAAWC,OAAO1G,OAAS,IAIxG1B,KAAKzB,MAAQyB,KAAKuH,aAAaY,WAAWC,OAAO,GAEjDpI,KAAKsC,SAAStC,KAAKzB,MAAMuC,QAKrCqB,QAnDgD,WAoD5CnC,KAAKoC,oBAGTG,QAAS,CACLH,iBADK,YAEIpC,KAAKuH,eACLvH,KAAKuH,aAAaY,YACnBnI,KAAKuH,aAAaY,WAAWC,OAAO1G,OAAS,IAIjD1B,KAAKzB,MAAQyB,KAAKuH,aAAaY,WAAWC,OAAO,GACjDpI,KAAKsC,SAAStC,KAAKzB,MAAMuC,MAG7BwB,SAZK,SAYIX,GAAU,IAAD,OACd,GAAgB,OAAZA,EAAJ,CAIA,IAAMc,EAAW,IAAI/E,EACrB+E,EAASC,eAAe,gBAExB1C,KAAK2C,gBAAgBvH,IAAIuG,EAAShF,SAASsE,QAAQC,IAAKuB,GAAUG,MAAK,SAACrE,GACpE,EAAKA,MAAQA,OAIrB2R,eAzBK,WA0BIlQ,KAAKoF,IAAIC,IAAI,0BAIlBrF,KAAK6P,yBAA0B,IAGnCM,gBAjCK,WAkCDnQ,KAAK6P,yBAA0B,GAGnCO,mBArCK,WAsCIpQ,KAAKzB,MAGNyB,KAAKmM,QAAQvF,KAAK,CAAE9L,KAAM,0BAA2B+G,OAAQ,CAAEf,GAAId,KAAKzB,MAAMuC,MAF9Ed,KAAKmM,QAAQvF,KAAK,CAAE9L,KAAM,4BAMlCuV,cA7CK,SA6CS1O,GACV3B,KAAK6P,yBAA0B,EAE/B7P,KAAK+P,WAAapO,EAClB3B,KAAK8P,iBAAkB,GAG3BQ,mBApDK,WAqDDtQ,KAAK8P,iBAAkB,EACvB9P,KAAK+P,WAAa,MAGtBQ,gBAzDK,WA0DGvQ,KAAK+P,YACL/P,KAAKwQ,cAAcxQ,KAAK+P,YAG5B/P,KAAK8P,iBAAkB,EACvB9P,KAAK+P,WAAa,MAGtBS,cAlEK,SAkESC,GAAkB,IAAD,OAC3BzQ,KAAKb,WAAY,EACjBa,KAAKsC,SAASmO,GACdzQ,KAAKkD,aAAaoE,YAAYmJ,EAAiBzQ,KAAKuH,aAAazG,IAAI8B,MAAK,WACtE,EAAKzD,WAAY,KAClBmH,OAAM,WACL,EAAKU,wBAAwB,CACzBjH,MAAO,EAAKwB,IAAI,uCAChBD,QAAS,EAAKC,IAAI,+CAEtB,EAAKpC,WAAY,SCzIjC,IAAMuR,EAAa/T,SAASgU,QAAQD,WA6FrBE,E,sQArFX,WAAYC,EAAYC,GAAsC,IAAD,EAAvBC,EAAuB,uDAAT,QAAS,kBACzD,cAAMF,EAAYC,EAAcC,IAC3BjW,KAAO,eAF6C,E,wCAK7D,SAAY6G,EAAS0F,GAAgE,IAAhD2J,EAA+C,uDAA5B,GAAIC,EAAwB,uDAAJ,GACtEC,EAAQ,mBAAelR,KAAKmR,iBAApB,YAAwCxP,EAAxC,mBAA0D0F,GAExE,OAAOrH,KAAK6Q,WAAWO,KACnBF,EACA,GACA,CACIrP,OAAO,EAAD,GAAOmP,GACbK,QAASrR,KAAKsR,gBAAgBL,KAEpCrO,MAAK,SAACC,GACJ,OAAO6N,EAAWa,eAAe1O,Q,yBAIzC,SAAYlB,EAASrD,GAAsD,IAAhD0S,EAA+C,uDAA5B,GAAIC,EAAwB,uDAAJ,GAC5DC,EAAQ,mBAAelR,KAAKmR,iBAApB,YAAwCxP,GAEtD,OAAO3B,KAAK6Q,WAAWW,MACnBN,EACA5S,EACA,CACIuD,OAAO,EAAD,GAAOmP,GACbK,QAASrR,KAAKsR,gBAAgBL,KAEpCrO,MAAK,SAACC,GACJ,OAAO6N,EAAWa,eAAe1O,Q,wBAIzC,SAAWlB,GAAyD,IAAhDqP,EAA+C,uDAA5B,GAAIC,EAAwB,uDAAJ,GACrDC,EAAQ,mBAAelR,KAAKmR,iBAApB,YAAwCxP,EAAxC,UAEd,OAAO3B,KAAK6Q,WAAWW,MACnBN,EACA,GACA,CACIrP,OAAO,EAAD,GAAOmP,GACbK,QAASrR,KAAKsR,gBAAgBL,KAEpCrO,MAAK,SAACC,GACJ,OAAO6N,EAAWa,eAAe1O,Q,8BAIzC,SAAiBlB,GACb,IAAMuP,EAAQ,mBAAelR,KAAKmR,iBAApB,YAAwCxP,EAAxC,kBAERsP,EAAoB,CACtB,iBAAkBtU,SAAS8U,MAAMrW,IAAI,WAAW6Q,YAGpD,OAAOjM,KAAK6Q,WAAWzV,IACnB8V,EACA,CACIG,QAASrR,KAAKsR,gBAAgBL,KAEpCrO,MAAK,SAACC,GACJ,OAAO6N,EAAWa,eAAe1O,Q,iCAIzC,SAAoBlB,GAChB,IAAMuP,EAAQ,mBAAelR,KAAKmR,iBAApB,YAAwCxP,EAAxC,sBAERsP,EAAoB,CACtB,iBAAkBtU,SAAS8U,MAAMrW,IAAI,WAAW6Q,YAGpD,OAAOjM,KAAK6Q,WAAWzV,IACnB8V,EACA,CACIG,QAASrR,KAAKsR,gBAAgBL,KAEpCrO,MAAK,SAACC,GACJ,OAAO6N,EAAWa,eAAe1O,W,8BAjFf6N,GCLtBtD,EAAgBzQ,SAAhByQ,YAERzQ,SAASC,UAAUqB,SAAS,gBAAgB,SAACyT,GACzC,IAAMC,EAAgBvE,EAAYwE,aAAa,QAC/C,OAAO,IAAIC,EAAaF,EAAcd,WAAYa,EAAUZ,kB,mBCNhExW,EAAOD,QAAU,+kG,kCCIF,SAASyX,EAAcC,EAAUC,GAG9C,IAFA,IAAIC,EAAS,GACTC,EAAY,GACP3X,EAAI,EAAGA,EAAIyX,EAAKtQ,OAAQnH,IAAK,CACpC,IAAI8O,EAAO2I,EAAKzX,GACZuG,EAAKuI,EAAK,GAIV8I,EAAO,CACTrR,GAAIiR,EAAW,IAAMxX,EACrB6X,IALQ/I,EAAK,GAMb1E,MALU0E,EAAK,GAMfgJ,UALchJ,EAAK,IAOhB6I,EAAUpR,GAGboR,EAAUpR,GAAIwR,MAAM1L,KAAKuL,GAFzBF,EAAOrL,KAAKsL,EAAUpR,GAAM,CAAEA,GAAIA,EAAIwR,MAAO,CAACH,KAKlD,OAAOF,E,+CCjBT,IAAIM,EAAkC,oBAAbC,SAEzB,GAAqB,oBAAVC,OAAyBA,QAC7BF,EACH,MAAM,IAAIG,MACV,2JAkBJ,IAAIC,EAAc,GAQdC,EAAOL,IAAgBC,SAASI,MAAQJ,SAASK,qBAAqB,QAAQ,IAC9EC,EAAmB,KACnBC,EAAmB,EACnBC,GAAe,EACfC,EAAO,aACPC,EAAU,KACVC,EAAW,kBAIXC,EAA+B,oBAAdC,WAA6B,eAAeC,KAAKD,UAAUE,UAAUC,eAE3E,SAASC,EAAiB1B,EAAUC,EAAM0B,EAAeC,GACtEX,EAAeU,EAEfR,EAAUS,GAAY,GAEtB,IAAI1B,EAASH,EAAaC,EAAUC,GAGpC,OAFA4B,EAAe3B,GAER,SAAiB4B,GAEtB,IADA,IAAIC,EAAY,GACPvZ,EAAI,EAAGA,EAAI0X,EAAOvQ,OAAQnH,IAAK,CACtC,IAAI8O,EAAO4I,EAAO1X,IACdwZ,EAAWpB,EAAYtJ,EAAKvI,KACvBkT,OACTF,EAAUlN,KAAKmN,GAEbF,EAEFD,EADA3B,EAASH,EAAaC,EAAU8B,IAGhC5B,EAAS,GAEX,IAAS1X,EAAI,EAAGA,EAAIuZ,EAAUpS,OAAQnH,IAAK,CACzC,IAAIwZ,EACJ,GAAsB,KADlBA,EAAWD,EAAUvZ,IACZyZ,KAAY,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASzB,MAAM5Q,OAAQuS,IACzCF,EAASzB,MAAM2B,YAEVtB,EAAYoB,EAASjT,OAMpC,SAAS8S,EAAgB3B,GACvB,IAAK,IAAI1X,EAAI,EAAGA,EAAI0X,EAAOvQ,OAAQnH,IAAK,CACtC,IAAI8O,EAAO4I,EAAO1X,GACdwZ,EAAWpB,EAAYtJ,EAAKvI,IAChC,GAAIiT,EAAU,CACZA,EAASC,OACT,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASzB,MAAM5Q,OAAQuS,IACzCF,EAASzB,MAAM2B,GAAG5K,EAAKiJ,MAAM2B,IAE/B,KAAOA,EAAI5K,EAAKiJ,MAAM5Q,OAAQuS,IAC5BF,EAASzB,MAAM1L,KAAKsN,EAAS7K,EAAKiJ,MAAM2B,KAEtCF,EAASzB,MAAM5Q,OAAS2H,EAAKiJ,MAAM5Q,SACrCqS,EAASzB,MAAM5Q,OAAS2H,EAAKiJ,MAAM5Q,YAEhC,CACL,IAAI4Q,EAAQ,GACZ,IAAS2B,EAAI,EAAGA,EAAI5K,EAAKiJ,MAAM5Q,OAAQuS,IACrC3B,EAAM1L,KAAKsN,EAAS7K,EAAKiJ,MAAM2B,KAEjCtB,EAAYtJ,EAAKvI,IAAM,CAAEA,GAAIuI,EAAKvI,GAAIkT,KAAM,EAAG1B,MAAOA,KAK5D,SAAS6B,IACP,IAAIC,EAAe5B,SAAS6B,cAAc,SAG1C,OAFAD,EAAavL,KAAO,WACpB+J,EAAK0B,YAAYF,GACVA,EAGT,SAASF,EAAUK,GACjB,IAAIC,EAAQC,EACRL,EAAe5B,SAASkC,cAAc,SAAWvB,EAAW,MAAQoB,EAAIzT,GAAK,MAEjF,GAAIsT,EAAc,CAChB,GAAIpB,EAGF,OAAOC,EAOPmB,EAAaO,WAAWC,YAAYR,GAIxC,GAAIhB,EAAS,CAEX,IAAIyB,EAAa9B,IACjBqB,EAAetB,IAAqBA,EAAmBqB,KACvDK,EAASM,EAAoB/Y,KAAK,KAAMqY,EAAcS,GAAY,GAClEJ,EAASK,EAAoB/Y,KAAK,KAAMqY,EAAcS,GAAY,QAGlET,EAAeD,IACfK,EAASO,EAAWhZ,KAAK,KAAMqY,GAC/BK,EAAS,WACPL,EAAaO,WAAWC,YAAYR,IAMxC,OAFAI,EAAOD,GAEA,SAAsBS,GAC3B,GAAIA,EAAQ,CACV,GAAIA,EAAO5C,MAAQmC,EAAInC,KACnB4C,EAAOrQ,QAAU4P,EAAI5P,OACrBqQ,EAAO3C,YAAckC,EAAIlC,UAC3B,OAEFmC,EAAOD,EAAMS,QAEbP,KAKN,IACMQ,EADFC,GACED,EAAY,GAET,SAAUpG,EAAOsG,GAEtB,OADAF,EAAUpG,GAASsG,EACZF,EAAUG,OAAO5H,SAAS6H,KAAK,QAI1C,SAASP,EAAqBV,EAAcvF,EAAO4F,EAAQF,GACzD,IAAInC,EAAMqC,EAAS,GAAKF,EAAInC,IAE5B,GAAIgC,EAAakB,WACflB,EAAakB,WAAWC,QAAUL,EAAYrG,EAAOuD,OAChD,CACL,IAAIoD,EAAUhD,SAASiD,eAAerD,GAClCsD,EAAatB,EAAasB,WAC1BA,EAAW7G,IAAQuF,EAAaQ,YAAYc,EAAW7G,IACvD6G,EAAWhU,OACb0S,EAAauB,aAAaH,EAASE,EAAW7G,IAE9CuF,EAAaE,YAAYkB,IAK/B,SAAST,EAAYX,EAAcG,GACjC,IAAInC,EAAMmC,EAAInC,IACVzN,EAAQ4P,EAAI5P,MACZ0N,EAAYkC,EAAIlC,UAiBpB,GAfI1N,GACFyP,EAAawB,aAAa,QAASjR,GAEjCuO,EAAQ2C,OACVzB,EAAawB,aAAazC,EAAUoB,EAAIzT,IAGtCuR,IAGFD,GAAO,mBAAqBC,EAAUyD,QAAQ,GAAK,MAEnD1D,GAAO,uDAAyD2D,KAAKC,SAASC,mBAAmBC,KAAKC,UAAU9D,MAAgB,OAG9H+B,EAAakB,WACflB,EAAakB,WAAWC,QAAUnD,MAC7B,CACL,KAAOgC,EAAagC,YAClBhC,EAAaQ,YAAYR,EAAagC,YAExChC,EAAaE,YAAY9B,SAASiD,eAAerD,O,mBC3NnCzV,SAAVc,MAEFQ,SAAS,QAAS,CACpBE,OAAQ,CACJ,oBACA,eACA,OAGJG,KAPoB,WAQhB,MAAO,CACH+X,iBAAiB,EACjB5J,gBAAgB,EAChB6J,iBAAiB,EACjBC,oBAAoB,EACpBC,aAAc,GACdC,WAAY,OAIpBtW,SAAU,CACNwC,gBADM,WAEF,OAAO3C,KAAKU,kBAAkB7E,OAAO,WAI7C0G,QAAS,CACLmU,cADK,SACSnY,GACLyB,KAAKoF,IAAIC,IAAI,mBAIlBrF,KAAKyW,WAAalY,EAClByB,KAAKqW,iBAAkB,IAG3BM,mBAVK,WAWD3W,KAAKqW,iBAAkB,EACvBrW,KAAKyW,WAAa,MAGtBG,qBAfK,WAgBD5W,KAAK6W,YAAY7W,KAAKyW,YAEtBzW,KAAKqW,iBAAkB,EACvBrW,KAAKyW,WAAa,MAGtBI,YAtBK,SAsBOtY,GAAQ,IAAD,OACTuY,EAAmB9W,KAAKuB,IAAI,0EAC5BwV,EAAqB/W,KAAKuB,IAAI,4EAEpCvB,KAAKb,WAAY,EACjBa,KAAK2C,gBAAgBqU,OAAOzY,EAAMuC,GAAInE,SAASsE,QAAQC,KAAK0B,MAAK,WACzD,EAAK4I,QACL,EAAKA,UAIT,EAAKW,QAAQvF,KAAK,CAAE9L,KAAM,8BAC3BwL,OAAM,WACL,EAAKnH,WAAY,EACjB,EAAK6H,wBAAwB,CACzBjH,MAAO+W,EACPxV,QAASyV,QAKrBE,iBA3CK,SA2CY1Y,GACRyB,KAAKoF,IAAIC,IAAI,mBAIlBrF,KAAKyW,WAAalY,EAClByB,KAAKuW,oBAAqB,IAG9BW,sBApDK,WAqDDlX,KAAKuW,oBAAqB,EAC1BvW,KAAKyW,WAAa,KAClBzW,KAAKwW,aAAe,IAGxBW,wBA1DK,WA2DDnX,KAAKoX,eAAepX,KAAKyW,WAAYzW,KAAKwW,cAE1CxW,KAAKuW,oBAAqB,EAC1BvW,KAAKyW,WAAa,KAClBzW,KAAKwW,aAAe,IAGxBY,eAlEK,SAkEU5Y,EAAa1D,GAAO,IAAD,OACxBuc,EAAiBrX,KAAK2C,gBAAgB9G,OAAOc,SAASsE,QAAQC,KAEpEmW,EAAevc,KAAOA,EACtBuc,EAAetU,cAAgBvE,EAAYsC,GAC3CuW,EAAeC,OAAS9Y,EAAY8Y,OACpCD,EAAe9I,YAAc/P,EAAY+P,YACzC8I,EAAeE,OAAS/Y,EAAY+Y,OACpCF,EAAeG,UAAYhZ,EAAYgZ,UACvCH,EAAeI,aAAejZ,EAAYiZ,aAC1CJ,EAAe/W,WAAa,KAC5B+W,EAAe/R,aAAe,KAC9B+R,EAAezK,eAAiBpO,EAAYoO,eAC5CyK,EAAe9J,QAAS,EAExBvN,KAAK2C,gBAAgBsK,KAAKoK,EAAgB1a,SAASsE,QAAQC,KAAK0B,MAAK,WACjE,EAAKuJ,QAAQvF,KAAK,CAAE9L,KAAM,0BAA2B+G,OAAQ,CAAEf,GAAIuW,EAAevW,UAI1F4W,cAtFK,SAsFSnZ,GACLyB,KAAKoF,IAAIC,IAAI,kBAIlBrF,KAAKyW,WAAalY,EAClByB,KAAKwW,aAAexW,KAAKyW,WAAW3b,KACpCkF,KAAKsW,iBAAkB,IAG3BqB,mBAhGK,WAiGD3X,KAAKsW,iBAAkB,EACvBtW,KAAKyW,WAAa,KAClBzW,KAAKwW,aAAe,IAGxBoB,qBAtGK,WAuGD5X,KAAK6X,YAAY7X,KAAKyW,WAAYzW,KAAKwW,cAEvCxW,KAAKsW,iBAAkB,EACvBtW,KAAKyW,WAAa,KAClBzW,KAAKwW,aAAe,IAGxBqB,YA9GK,SA8GOtZ,EAAOzD,GACXA,IACAyD,EAAMzD,KAAOA,GAGjBkF,KAAK2C,gBAAgBsK,KAAK1O,EAAO5B,SAASsE,QAAQC,U,mBC7I9D5G,EAAOD,QAAU,2Y,uBCGjB,IAAIkC,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACjC,EAAOC,EAAIgC,EAAS,MAC7DA,EAAQC,SAAQlC,EAAOD,QAAUkC,EAAQC,SAG/BC,EADH,EAAQ,QAAgIC,SACjI,WAAYH,GAAS,EAAM,K,qBCL5C,IAAIA,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACjC,EAAOC,EAAIgC,EAAS,MAC7DA,EAAQC,SAAQlC,EAAOD,QAAUkC,EAAQC,SAG/BC,EADH,EAAQ,QAAgIC,SACjI,WAAYH,GAAS,EAAM,K,sICR5CjC,EAAOD,QAAU,2yC,mBCAjBC,EAAOD,QAAU","file":"static/js/storefront.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/storefront/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"L9KI\");\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-theme-manager-list.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"427a179f\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-sales-channel-detail-theme.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"26501a18\", content, true, {});","Shopware.Service('privileges')\n    .addPrivilegeMappingEntry({\n        category: 'permissions',\n        parent: 'content',\n        key: 'theme',\n        roles: {\n            viewer: {\n                privileges: [\n                    'theme:read',\n                    'theme_child:read',\n                    'sales_channel:read',\n                    Shopware.Service('privileges').getPrivileges('media.viewer')\n                ],\n                dependencies: []\n            },\n            editor: {\n                privileges: [\n                    'theme:update',\n                    'theme_child:update',\n                    'tag:read',\n                    'product_media:read',\n                    'product:read',\n                    'category:read',\n                    'product_manufacturer:read',\n                    'mail_template_media:read',\n                    'mail_template:read',\n                    'document_base_config:read',\n                    'user:read',\n                    'payment_method:read',\n                    'shipping_method:read',\n                    'custom_field_set:read',\n                    'custom_field:read',\n                    'custom_field_set_relation:read',\n                    Shopware.Service('privileges').getPrivileges('media.creator')\n                ],\n                dependencies: [\n                    'theme.viewer'\n                ]\n            },\n            creator: {\n                privileges: [\n                    'theme:create',\n                    'theme_child:create'\n                ],\n                dependencies: [\n                    'theme.viewer',\n                    'theme.editor'\n                ]\n            },\n            deleter: {\n                privileges: [\n                    'theme:delete',\n                    'theme_child:delete'\n                ],\n                dependencies: [\n                    'theme.viewer'\n                ]\n            }\n        }\n    });\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-theme-modal.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3ba43fca\", content, true, {});","module.exports = \"{% block sw_theme_manager_list %}\\n    <sw-page class=\\\"sw-theme-list\\\">\\n\\n        {% block sw_theme_manager_list_search_bar %}\\n            <template slot=\\\"search-bar\\\">\\n                <sw-search-bar :placeholder=\\\"$tc('sw-theme-manager.general.placeholderSearchBar')\\\"\\n                               :initialSearchType=\\\"$tc('sw-theme-manager.general.mainMenuItemGeneral')\\\"\\n                               @search=\\\"onSearch\\\">\\n                </sw-search-bar>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_list_toolbar %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2> {{ $tc('sw-theme-manager.general.mainMenuItemGeneral') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_list_card_view %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_themes_list_listing %}\\n                    <div class=\\\"sw-theme-list__content\\\">\\n\\n                        {% block sw_theme_list_listing_actions %}\\n                            <div class=\\\"sw-theme-list__actions\\\">\\n\\n                                {% block sw_theme_list_listing_title %}\\n                                    <h3>{{ $tc('sw-theme-manager.general.mainMenuHeader') }}</h3>\\n                                {% endblock %}\\n\\n                                {% block sw_theme_list_listing_actions_sorting %}\\n                                    <div class=\\\"sw-theme-list__actions-sorting\\\">\\n                                        <sw-field type=\\\"select\\\"\\n                                                  name=\\\"sortType\\\"\\n                                                  :label=\\\"$tc('sw-theme-manager.sorting.labelSort')\\\"\\n                                                  :value=\\\"sortingConCat\\\"\\n                                                  @change=\\\"onSortingChanged\\\"\\n                                                  aside>\\n\\n                                            {% block sw_theme_list_listing_actions_sorting_options %}\\n                                            <option v-for=\\\"sortOption in sortOptions\\\"\\n                                                    :value=\\\"sortOption.value\\\">\\n                                                {{ sortOption.name }}\\n                                            </option>\\n                                            {% endblock %}\\n                                        </sw-field>\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_theme_list_listing_actions_mode %}\\n                                    <div class=\\\"sw-theme-list__actions-mode\\\" @click=\\\"onListModeChange\\\">\\n                                        <sw-icon name=\\\"default-view-normal\\\" size=\\\"16\\\" v-if=\\\"listMode === 'grid'\\\"></sw-icon>\\n                                        <sw-icon name=\\\"default-view-grid\\\" size=\\\"16\\\" v-if=\\\"listMode === 'list'\\\"></sw-icon>\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_theme_list_listing_list %}\\n                            <div class=\\\"sw-theme-list__list\\\">\\n\\n                                {% block sw_theme_list_listing_list_card %}\\n                                    <sw-card class=\\\"sw-theme-list__list-card\\\" v-if=\\\"listMode === 'list'\\\">\\n                                        <template slot=\\\"grid\\\">\\n\\n                                            {% block sw_theme_list_listing_list_data_grid %}\\n                                                <sw-data-grid\\n                                                    class=\\\"sw-theme-list__list-data-grid\\\"\\n                                                    identifier=\\\"sw-theme-list\\\"\\n                                                    :isLoading=\\\"isLoading\\\"\\n                                                    :dataSource=\\\"themes\\\"\\n                                                    :columns=\\\"columnConfig\\\"\\n                                                    :skeletonItemAmount=\\\"limit\\\"\\n                                                    :sortBy=\\\"sortBy\\\"\\n                                                    :sortDirection=\\\"sortDirection\\\"\\n                                                    :allowInlineEdit=\\\"false\\\"\\n                                                    :allowColumnEdit=\\\"false\\\"\\n                                                    :showSettings=\\\"false\\\"\\n                                                    :showSelection=\\\"false\\\"\\n                                                    @column-sort=\\\"onSortColumn\\\">\\n\\n                                                    {% block sw_theme_list_listing_list_data_grid_column_name %}\\n                                                        <template #column-name=\\\"{ item }\\\">\\n                                                            <sw-icon\\n                                                                name=\\\"default-lock-closed\\\"\\n                                                                class=\\\"sw-theme-list__icon-lock\\\"\\n                                                                v-if=\\\"!item.parentThemeId\\\"\\n                                                                v-tooltip=\\\"lockToolTip\\\"\\n                                                                size=\\\"14\\\">\\n                                                            </sw-icon>\\n                                                            <router-link :to=\\\"{ name: 'sw.theme.manager.detail', params: { id: item.id } }\\\">\\n                                                                {{ item.name }}\\n                                                            </router-link>\\n                                                        </template>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_theme_list_listing_list_data_grid_column_assignment %}\\n                                                        <template #column-assignment=\\\"{ item }\\\">\\n                                                            {{ item.salesChannels.length }}\\n                                                        </template>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_theme_list_listing_list_data_grid_column_created %}\\n                                                        <template #column-createdAt=\\\"{ item }\\\">\\n                                                            {{ item.createdAt | date({ hour: '2-digit', minute: '2-digit' }) }}\\n                                                        </template>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_theme_list_listing_list_data_grid_actions %}\\n                                                        <template #actions=\\\"{ item }\\\">\\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_edit %}\\n                                                                <sw-context-menu-item\\n                                                                    class=\\\"sw-theme-list-item__option-edit\\\"\\n                                                                    :routerLink=\\\"{ name: 'sw.theme.manager.detail', params: { id: item.id } }\\\">\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.edit') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_rename %}\\n                                                                <sw-context-menu-item\\n                                                                    @click=\\\"onRenameTheme(item)\\\"\\n                                                                    class=\\\"sw-theme-list-item__option-rename\\\"\\n                                                                    :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.rename') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_delete %}\\n                                                                <sw-context-menu-item\\n                                                                    variant=\\\"danger\\\"\\n                                                                    class=\\\"sw-theme-list-item__option-delete\\\"\\n                                                                    :disabled=\\\"item.salesChannels.length > 0 || !acl.can('theme.deleter')\\\"\\n                                                                    v-tooltip=\\\"deleteDisabledToolTip(item)\\\"\\n                                                                    @click=\\\"onDeleteTheme(item)\\\"\\n                                                                    v-if=\\\"item.parentThemeId\\\">\\n\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.delete') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_create %}\\n                                                                <sw-context-menu-item\\n                                                                    v-if=\\\"!item.parentThemeId\\\"\\n                                                                    class=\\\"sw-theme-list-item__option-duplicate\\\"\\n                                                                    @click=\\\"onDuplicateTheme(item)\\\"\\n                                                                    :disabled=\\\"!acl.can('theme.creator')\\\">\\n                                                                    {{ $tc('sw-theme-manager.actions.duplicate') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_theme_list_listing_list_data_grid_pagination %}\\n                                                        <template #pagination>\\n                                                            <sw-pagination\\n                                                                :page=\\\"page\\\"\\n                                                                :limit=\\\"limit\\\"\\n                                                                :total=\\\"total\\\"\\n                                                                :steps=\\\"[5, 10, 25, 50]\\\"\\n                                                                @page-change=\\\"onPageChange\\\">\\n                                                            </sw-pagination>\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-data-grid>\\n                                            {% endblock %}\\n                                        </template>\\n                                    </sw-card>\\n                                {% endblock %}\\n\\n                                {% block sw_theme_list_listing_list_grid %}\\n                                    <div class=\\\"sw-theme-list__list-grid\\\" v-if=\\\"listMode === 'grid'\\\">\\n\\n                                        {% block sw_theme_list_listing_list_grid_content %}\\n                                            <div class=\\\"sw-theme-list__list-grid-content\\\">\\n                                                {% block sw_theme_list_listing_list_item %}\\n                                                    <template v-if=\\\"!isLoading\\\">\\n                                                        <sw-theme-list-item\\n                                                        v-for=\\\"theme in themes\\\"\\n                                                        :theme=\\\"theme\\\"\\n                                                        :key=\\\"theme.id\\\"\\n                                                        @preview-image-change=\\\"onPreviewChange\\\"\\n                                                        @item-click=\\\"onListItemClick\\\">\\n\\n                                                        <sw-context-button slot=\\\"contextMenu\\\"\\n                                                                           :zIndex=\\\"1100\\\"\\n                                                                           class=\\\"sw-theme-list-item__options\\\">\\n\\n                                                            {% block sw_theme_list_listing_list_item_option_add_preview %}\\n                                                                <sw-context-menu-item\\n                                                                    class=\\\"sw-theme-list-item__option-preview\\\"\\n                                                                    @click=\\\"onPreviewChange(theme)\\\"\\n                                                                    :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.addPreviewImage') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_item_option_remove_preview %}\\n                                                                <sw-context-menu-item\\n                                                                    class=\\\"sw-theme-list-item__option-preview sw-theme-list-item__option-preview-remove\\\"\\n                                                                    v-if=\\\"theme.previewMediaId\\\"\\n                                                                    variant=\\\"danger\\\"\\n                                                                    @click=\\\"onPreviewImageRemove(theme)\\\"\\n                                                                    :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.removePreviewImage') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_item_option_rename %}\\n                                                                <sw-context-menu-item\\n                                                                    @click=\\\"onRenameTheme(theme)\\\"\\n                                                                    class=\\\"sw-theme-list-item__option-rename\\\"\\n                                                                    :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.rename') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_item_option_create %}\\n                                                                <sw-context-menu-item\\n                                                                    v-if=\\\"!theme.parentThemeId\\\"\\n                                                                    class=\\\"sw-theme-list-item__option-duplicate\\\"\\n                                                                    @click=\\\"onDuplicateTheme(theme)\\\"\\n                                                                    :disabled=\\\"!acl.can('theme.creator')\\\">\\n                                                                    {{ $tc('sw-theme-manager.actions.duplicate') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_theme_list_listing_list_item_option_delete %}\\n                                                                <sw-context-menu-item\\n                                                                    v-if=\\\"theme.parentThemeId\\\"\\n                                                                    class=\\\"sw-theme-list-item__option-delete\\\"\\n                                                                    variant=\\\"danger\\\"\\n                                                                    :disabled=\\\"theme.salesChannels.length > 0 || !acl.can('theme.deleter')\\\"\\n                                                                    v-tooltip=\\\"deleteDisabledToolTip(theme)\\\"\\n                                                                    @click=\\\"onDeleteTheme(theme)\\\">\\n                                                                    {{ $tc('sw-theme-manager.themeListItem.delete') }}\\n                                                                </sw-context-menu-item>\\n                                                            {% endblock %}\\n                                                        </sw-context-button>\\n                                                    </sw-theme-list-item>\\n                                                    </template>\\n\\n                                                    <template v-else>\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                        <sw-skeleton variant=\\\"gallery\\\" />\\n                                                    </template>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block sw_theme_list_listing_pagination %}\\n                                        <sw-pagination class=\\\"sw-theme-list__list-pagination\\\"\\n                                                       v-if=\\\"!isLoading\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :steps=\\\"[9]\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {# @deprecated tag:v6.5.0 - Will be removed #}\\n                {% block sw_theme_list_listing_list_loader %}{% endblock %}\\n\\n                {% block sw_theme_list_media_modal %}\\n                    <sw-media-modal-v2\\n                        variant=\\\"regular\\\"\\n                        v-if=\\\"showMediaModal\\\"\\n                        :caption=\\\"$tc('sw-theme-manager.general.captionMediaUpload')\\\"\\n                        entityContext=\\\"theme\\\"\\n                        :allowMultiSelect=\\\"false\\\"\\n                        @media-modal-selection-change=\\\"onPreviewImageChange\\\"\\n                        @modal-close=\\\"onModalClose\\\">\\n                    </sw-media-modal-v2>\\n                {% endblock %}\\n\\n                {% block sw_theme_list_delete_modal %}\\n                    <sw-modal v-if=\\\"showDeleteModal\\\"\\n                              @modal-close=\\\"onCloseDeleteModal\\\"\\n                              :title=\\\"$tc('global.default.warning')\\\"\\n                              variant=\\\"small\\\">\\n\\n                        {% block sw_theme_list_delete_modal_info %}\\n                            <div class=\\\"sw_theme_manager__confirm-delete-text\\\">\\n                                {{ $tc('sw-theme-manager.modal.textDeleteInfo', 0,\\n                                { themeName: modalTheme.name }) }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_theme_list_delete_modal_footer %}\\n                            <template slot=\\\"modal-footer\\\">\\n                                {% block sw_theme_list_delete_modal_cancel %}\\n                                    <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                               size=\\\"small\\\">\\n                                        {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block sw_theme_list_delete_modal_confirm %}\\n                                    <sw-button @click=\\\"onConfirmThemeDelete\\\"\\n                                               variant=\\\"danger\\\"\\n                                               size=\\\"small\\\">\\n                                        {{ $tc('sw-theme-manager.modal.buttonDelete') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block sw_theme_list_duplicate_modal %}\\n                    <sw-modal v-if=\\\"showDuplicateModal\\\"\\n                              class=\\\"sw_theme_manager__duplicate-modal\\\"\\n                              @modal-close=\\\"onCloseDuplicateModal\\\"\\n                              :title=\\\"$tc('sw-theme-manager.modal.modalTitleDuplicate')\\\"\\n                              variant=\\\"small\\\">\\n\\n                        {% block sw_theme_list_duplicate__modal_name_input %}\\n                            <div class=\\\"sw_theme_manager__duplicate-info\\\">\\n                                {{ $tc('sw-theme-manager.modal.textDuplicateInfo') }}\\n                            </div>\\n\\n                            <sw-field v-model=\\\"newThemeName\\\"\\n                                      :label=\\\"$tc('sw-theme-manager.modal.labelDuplicateThemeName')\\\"\\n                                      :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderDuplicateThemeName')\\\"\\n                                      tpye=\\\"text\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_theme_list_duplicate_modal_footer %}\\n                            <template slot=\\\"modal-footer\\\">\\n                                {% block sw_theme_list_duplicate_modal_cancel %}\\n                                    <sw-button @click=\\\"onCloseDuplicateModal\\\"\\n                                               size=\\\"small\\\">\\n                                        {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block sw_theme_list_duplicate_modal_confirm %}\\n                                    <sw-button @click=\\\"onConfirmThemeDuplicate\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"newThemeName.length < 3\\\"\\n                                               size=\\\"small\\\">\\n                                        {{ $tc('sw-theme-manager.modal.buttonDuplicateTheme') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block sw_theme_list_rename_modal %}\\n                    <sw-modal v-if=\\\"showRenameModal\\\"\\n                              class=\\\"sw_theme_manager__rename-modal\\\"\\n                              @modal-close=\\\"onCloseRenameModal\\\"\\n                              :title=\\\"$tc('sw-theme-manager.modal.modalTitleRename')\\\"\\n                              variant=\\\"small\\\">\\n\\n                        {% block sw_theme_list_rename__modal_name_input %}\\n                            <div class=\\\"sw_theme_manager__rename-info\\\">\\n                                {{ $tc('sw-theme-manager.modal.textRenameInfo') }}\\n                            </div>\\n\\n                            <sw-field v-model=\\\"newThemeName\\\"\\n                                      :label=\\\"$tc('sw-theme-manager.modal.labelRenameThemeName')\\\"\\n                                      :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderRenameThemeName')\\\"\\n                                      tpye=\\\"text\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_theme_list_rename_modal_footer %}\\n                            <template slot=\\\"modal-footer\\\">\\n                                {% block sw_theme_list_rename_modal_cancel %}\\n                                    <sw-button @click=\\\"onCloseRenameModal\\\"\\n                                               size=\\\"small\\\">\\n                                        {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block sw_theme_list_rename_modal_confirm %}\\n                                    <sw-button @click=\\\"onConfirmThemeRename\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"newThemeName.length < 3\\\"\\n                                               size=\\\"small\\\">\\n                                        {{ $tc('sw-theme-manager.modal.buttonRenameTheme') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_sales_channel_detail_theme %}\\n    <sw-card :title=\\\"$tc('sales-channel-theme.title')\\\" :isLoading=\\\"isLoading\\\">\\n        <div class=\\\"sw-sales-channel-detail-theme\\\">\\n\\n            {% block sw_sales_channel_detail_theme_preview %}\\n                <div class=\\\"sw-sales-channel-detail-theme__preview\\\">\\n                    {% block sw_sales_channel_detail_theme_preview_item %}\\n                        <div @click=\\\"openThemeModal\\\">\\n                            <sw-theme-list-item\\n                                :theme=\\\"theme\\\"\\n                                :disabled=\\\"!acl.can('sales_channel.editor')\\\"\\n                                :active=\\\"!!theme\\\">\\n                            </sw-theme-list-item>\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_theme_modal %}\\n                        <sw-theme-modal\\n                            v-if=\\\"showThemeSelectionModal\\\"\\n                            @modal-theme-select=\\\"onChangeTheme\\\"\\n                            @modal-close=\\\"closeThemeModal\\\">\\n                        </sw-theme-modal>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_sales_channel_detail_theme_info %}\\n                <div class=\\\"sw-sales-channel-detail-theme__info\\\">\\n\\n                    {% block sw_sales_channel_detail_theme_info_content %}\\n                        <div class=\\\"sw-sales-channel-detail-theme__info-content\\\">\\n\\n                            {% block sw_sales_channel_detail_theme_info_name %}\\n                                <div class=\\\"sw-sales-channel-detail-theme__info-name\\\" :class=\\\"{ 'is--empty': !theme }\\\">\\n                                    {{ theme ? theme.name : $tc('sales-channel-theme.defaultTitle') }}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_info_author %}\\n                                <div v-if=\\\"theme\\\" class=\\\"sw-sales-channel-detail-theme__info-author\\\">\\n                                    {{ theme.author }}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_info_description %}\\n                                <div v-if=\\\"theme && theme.description\\\" class=\\\"sw-sales-channel-detail-theme__info-description\\\">\\n                                    <p class=\\\"sw-sales-channel-detail-theme__info-description-title\\\">\\n                                        {{ $tc('sw-theme-manager.detail.description') }}:\\n                                    </p>\\n                                    <p>{{ theme.description |truncate(140) }}</p>\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_theme_info_actions %}\\n                        <div class=\\\"sw-sales-channel-detail-theme__info-actions\\\">\\n\\n                            {% block sw_sales_channel_detail_theme_info_actions_theme %}\\n                                <sw-button size=\\\"small\\\" @click=\\\"openThemeModal\\\" :disabled=\\\"!acl.can('sales_channel.editor')\\\">\\n                                    {{ theme ? $tc('sales-channel-theme.changeTheme') : $tc('sales-channel-theme.changeThemeEmpty') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_info_actions_manager %}\\n                                <sw-button size=\\\"small\\\" @click=\\\"openInThemeManager\\\" :disabled=\\\"!acl.can('sales_channel.editor')\\\">\\n                                    {{ theme ? $tc('sales-channel-theme.editContent'): $tc('sales-channel-theme.createTheme') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_sales_channel_detail_theme_change_modal %}\\n                <sw-modal v-if=\\\"showChangeModal\\\"\\n                          @modal-close=\\\"onCloseChangeModal\\\"\\n                          :title=\\\"$tc('sales-channel-theme.modal.modalTitleChange')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_sales_channel_detail_theme_change_modal_info %}\\n                        <p class=\\\"sw-sales-channel-detail-theme__confirm-change-text\\\">\\n                            {{ $tc('sales-channel-theme.modal.textChangeTheme') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_theme_change_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_sales_channel_detail_theme_change_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseChangeModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sales-channel-theme.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_theme_change_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmChange\\\"\\n                                           variant=\\\"primary\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sales-channel-theme.modal.buttonChange') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        </div>\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './sw-theme-manager-detail.html.twig';\nimport './sw-theme-manager-detail.scss';\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\nconst { getObjectDiff, cloneDeep } = Shopware.Utils.object;\nconst { isArray } = Shopware.Utils.types;\n\nComponent.register('sw-theme-manager-detail', {\n    template,\n\n    inject: ['acl', 'feature'],\n\n    mixins: [\n        Mixin.getByName('theme'),\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            theme: null,\n            parentTheme: false,\n            defaultMediaFolderId: null,\n            structuredThemeFields: {},\n            themeConfig: {},\n            currentThemeConfig: {},\n            showResetModal: false,\n            showSaveModal: false,\n            errorModalMessage: null,\n            baseThemeConfig: {},\n            currentThemeConfigInitial: {},\n            inheritanceChanged: [],\n            isLoading: false,\n            isSaveSuccessful: false,\n            mappedFields: {\n                color: 'colorpicker',\n                fontFamily: 'text'\n            },\n            defaultTheme: null,\n            themeCompatibleSalesChannels: [],\n            salesChannelsWithTheme: null,\n            newAssignedSalesChannels: [],\n            overwrittenSalesChannelAssignments: [],\n            removedSalesChannels: []\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.themeName)\n        };\n    },\n\n    computed: {\n        themeName() {\n            if (this.theme) {\n                return this.theme.name;\n            }\n\n            return '';\n        },\n\n        isDerived() {\n            if (!this.theme) {\n                return false;\n            }\n            if (this.theme.technicalName === 'Storefront') {\n                return false;\n            }\n            if (this.parentTheme) {\n                return true;\n            }\n            if (\n                isArray(this.theme?.baseConfig?.configInheritance) &&\n                !this.theme.baseConfig.configInheritance.includes('@Storefront')\n            ) {\n                return false;\n            }\n            return true;\n        },\n\n        mediaRepository() {\n            return this.repositoryFactory.create('media');\n        },\n\n        defaultFolderRepository() {\n            return this.repositoryFactory.create('media_default_folder');\n        },\n\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        previewMedia() {\n            if (this.theme && this.theme.previewMedia && this.theme.previewMedia.id && this.theme.previewMedia.url) {\n                return {\n                    'background-image': `url('${this.theme.previewMedia.url}')`,\n                    'background-size': 'cover'\n                };\n            }\n\n            return {\n                'background-image': this.defaultThemeAsset\n            };\n        },\n\n        defaultThemeAsset() {\n            return `url('${Shopware.Context.api.assetsPath}/administration/static/img/theme/default_theme_preview.jpg')`;\n        },\n\n        deleteDisabledToolTip() {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-theme-manager.actions.deleteDisabledToolTip'),\n                disabled: this.theme.salesChannels.length === 0\n            };\n        },\n\n        themeId() {\n            return this.$route.params.id;\n        },\n\n        shouldShowContent() {\n            return Object.values(this.structuredThemeFields).length > 0 && !this.isLoading;\n        },\n\n        hasMoreThanOneTab() {\n            return Object.values(this.structuredThemeFields.tabs).length > 1;\n        },\n\n        isDefaultTheme() {\n            return this.theme.id === this.defaultTheme.id;\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        themeId() {\n            this.getTheme();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            this.getTheme();\n            this.setPageContext();\n        },\n\n        getTheme() {\n            if (!this.themeId) {\n                return;\n            }\n\n            this.isLoading = true;\n\n            const criteria = new Criteria();\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('salesChannels');\n\n            this.themeRepository.get(this.themeId, Shopware.Context.api, criteria).then((response) => {\n                this.theme = response;\n                this.getThemeConfig();\n\n                if (this.theme.parentThemeId) {\n                    this.getParentTheme();\n                }\n\n                this.isLoading = false;\n            });\n        },\n\n        checkInheritance(value) {\n            return !value;\n        },\n\n        getThemeConfig() {\n            this.isLoading = true;\n\n            if (!this.theme || !this.themeId) {\n                return;\n            }\n\n            this.structuredThemeFields = {};\n            this.currentThemeConfig = {};\n            this.themeConfig = {};\n            this.baseThemeConfig = {};\n            this.currentThemeConfigInitial = {};\n\n            this.themeService.getStructuredFields(this.themeId).then((fields) => {\n                this.structuredThemeFields = fields;\n            });\n\n            this.themeService.getConfiguration(this.themeId).then((config) => {\n                this.currentThemeConfig = config.currentFields;\n                this.currentThemeConfigInitial = cloneDeep(this.currentThemeConfig);\n                this.themeConfig = config.fields;\n                this.baseThemeConfig = cloneDeep(config.baseThemeFields);\n                this.isLoading = false;\n            });\n        },\n\n        setPageContext() {\n            this.getDefaultTheme().then((defaultTheme) => {\n                this.defaultTheme = defaultTheme;\n            });\n\n            this.getDefaultFolderId().then((folderId) => {\n                this.defaultMediaFolderId = folderId;\n            });\n\n            this.getThemeCompatibleSalesChannels().then((ids) => {\n                this.themeCompatibleSalesChannels = ids;\n            });\n\n            this.getSalesChannelsWithTheme().then((salesChannels) => {\n                this.salesChannelsWithTheme = salesChannels;\n            });\n        },\n\n        getParentTheme() {\n            this.themeRepository.get(this.theme.parentThemeId, Shopware.Context.api).then((parentTheme) => {\n                this.parentTheme = parentTheme;\n            });\n        },\n\n        openMediaSidebar() {\n            this.$refs.mediaSidebarItem.openContent();\n        },\n\n        onAddMediaToTheme(mediaItem, context) {\n            this.setMediaItem(mediaItem, context);\n        },\n\n        onDropMedia(dragData, context) {\n            this.setMediaItem(dragData, context);\n        },\n\n        setMediaItem(mediaItem, context) {\n            context.value = mediaItem.id;\n        },\n\n        successfulUpload(mediaItem, context) {\n            this.mediaRepository\n                .get(mediaItem.targetId, Shopware.Context.api)\n                .then((media) => {\n                    this.setMediaItem(media, context);\n                    return true;\n                });\n        },\n\n        removeMediaItem(field, updateCurrentValue, isInherited, removeInheritance) {\n            this.currentThemeConfig[field].value = null;\n            this.themeConfig[field].value = null;\n            if (isInherited) {\n                updateCurrentValue(null);\n            } else {\n                removeInheritance(null);\n            }\n            this.currentThemeConfigInitial[field].value = false;\n        },\n\n        restoreMediaInheritance(currentValue, value) {\n            return currentValue;\n        },\n\n        onReset() {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            if (this.theme.configValues === null) {\n                return;\n            }\n\n            this.showResetModal = true;\n        },\n\n        onCloseResetModal() {\n            this.showResetModal = false;\n        },\n\n        onCloseErrorModal() {\n            this.errorModalMessage = null;\n        },\n\n        onConfirmThemeReset() {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.themeService.resetTheme(this.themeId).then(() => {\n                this.getTheme();\n            });\n\n            this.showResetModal = false;\n        },\n\n        onSave() {\n            this.findChangedSalesChannels();\n\n            if (this.theme.salesChannels.length > 0 || this.removedSalesChannels.length > 0) {\n                this.showSaveModal = true;\n\n                return;\n            }\n\n            return this.onSaveTheme();\n        },\n\n        onSaveClean() {\n            this.findChangedSalesChannels();\n\n            if (this.theme.salesChannels.length > 0 || this.removedSalesChannels.length > 0) {\n                this.showSaveModal = true;\n\n                return;\n            }\n\n            return this.onSaveTheme(true);\n        },\n\n        onCloseSaveModal() {\n            this.showSaveModal = false;\n        },\n\n        onConfirmThemeSave() {\n            this.onSaveTheme();\n            this.showSaveModal = false;\n        },\n\n        onSaveTheme(clean = false) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.isSaveSuccessful = false;\n            this.isLoading = true;\n\n            return Promise.all([this.saveSalesChannels(), this.saveThemeConfig(clean)]).then(() => {\n                this.getTheme();\n            }).catch((error) => {\n                this.isLoading = false;\n\n                const actions = [];\n\n                const errorObject = error.response.data.errors[0];\n                if (errorObject.code === 'THEME__COMPILING_ERROR') {\n                    actions.push({\n                        label: this.$tc('sw-theme-manager.detail.showFullError'),\n                        method: function showFullError() {\n                            this.errorModalMessage = errorObject.detail;\n                        }.bind(this)\n                    });\n                }\n\n                this.createNotificationError({\n                    title: this.$tc('global.default.error'),\n                    message: error.toString(),\n                    autoClose: false,\n                    actions: [...actions]\n                });\n            });\n        },\n\n        saveSalesChannels() {\n            const promises = [];\n\n            if (this.newAssignedSalesChannels.length > 0) {\n                this.newAssignedSalesChannels.forEach((salesChannelId) => {\n                    promises.push(this.themeService.assignTheme(this.themeId, salesChannelId));\n                });\n            }\n\n            if (this.removedSalesChannels.length > 0) {\n                this.removedSalesChannels.forEach((salesChannel) => {\n                    promises.push(this.themeService.assignTheme(this.defaultTheme.id, salesChannel.id));\n                });\n            }\n\n            return Promise.all(promises);\n        },\n\n        findChangedSalesChannels() {\n            this.newAssignedSalesChannels = [];\n            this.removedSalesChannels = [];\n            this.overwrittenSalesChannelAssignments = [];\n\n            const diff = this.themeRepository.getSyncChangeset([this.theme]);\n\n            if (diff.changeset.length > 0 && diff.changeset[0].changes.hasOwnProperty('salesChannels')) {\n                this.findAddedSalesChannels(diff.changeset[0].changes.salesChannels);\n            }\n\n            if (diff.deletions.length > 0) {\n                this.findRemovedSalesChannels(diff.deletions);\n            }\n        },\n\n        findAddedSalesChannels(salesChannels) {\n            salesChannels.forEach((salesChannel) => {\n                this.newAssignedSalesChannels.push(salesChannel.id);\n\n                const overwrittenSalesChannel = this.salesChannelsWithTheme.get(salesChannel.id);\n                if (overwrittenSalesChannel !== null) {\n                    this.overwrittenSalesChannelAssignments.push({\n                        id: salesChannel.id,\n                        salesChannelName: this.theme.salesChannels.get(salesChannel.id).translated.name,\n                        oldThemeName: overwrittenSalesChannel.extensions.themes[0].name\n                    });\n                }\n            });\n        },\n\n        findRemovedSalesChannels(salesChannels) {\n            salesChannels.forEach((salesChannel) => {\n                this.removedSalesChannels.push({\n                    id: salesChannel.key,\n                    name: this.theme.getOrigin().salesChannels.get(salesChannel.key).translated.name\n                });\n            });\n        },\n\n        getCurrentChangeset(clean = false) {\n            // Get actual changes since load, then merge the changes into the full config set\n            const newValues = getObjectDiff(this.currentThemeConfigInitial, this.currentThemeConfig);\n            const allValues = this.theme.configValues ?? {};\n            Object.assign(allValues, newValues);\n            if (!clean) {\n                return allValues;\n            }\n\n            // Remove unused fields from changeset (defined by not set at all in the themeConfig or the type is not set)\n            const filtered = {};\n            for (const [key, value] of Object.entries(allValues)) {\n                if (\n                    this.themeConfig[key] === undefined\n                    || this.themeConfig[key].type === undefined\n                    || this.themeConfig[key].type === null\n                ) {\n                    continue;\n                }\n                filtered[key] = value;\n            }\n\n            return filtered;\n        },\n\n        removeInheritedFromChangeset(allValues) {\n            for (const [key, value] of Object.entries(allValues)) {\n                if (\n                    this.wrapperIsVisible(key)\n                    && this.$refs[`wrapper-${key}`][0].isInherited\n                ) {\n                    // Remove fields which are set to inheritance\n                    delete (allValues[`${key}`]);\n                    continue;\n                }\n                if (\n                    !this.wrapperIsVisible(key)\n                    && this.inheritanceChanged[`wrapper-${key}`] !== undefined\n                    && this.inheritanceChanged[`wrapper-${key}`] === true\n                ) {\n                    delete (allValues[`${key}`]);\n                }\n            }\n        },\n\n        wrapperIsVisible(key) {\n            return this.$refs[`wrapper-${key}`] !== undefined\n            && isArray(this.$refs[`wrapper-${key}`])\n            && this.$refs[`wrapper-${key}`][0] !== undefined;\n        },\n\n        saveThemeConfig(clean = false) {\n            const allValues = this.getCurrentChangeset(clean);\n\n            this.removeInheritedFromChangeset(allValues);\n\n            // Theme has to be resetted because inherited fields needs to be removed from the set\n            return this.themeService.resetTheme(this.themeId).then(() => {\n                return this.themeService.updateTheme(this.themeId, { config: allValues });\n            });\n        },\n\n        saveFinish() {\n            this.isSaveSuccessful = false;\n        },\n\n        onSearch(value = null) {\n            if (!value.length || value.length <= 0) {\n                this.term = null;\n            } else {\n                this.term = value;\n            }\n        },\n\n        onChangeTab() {\n            for (const [key, item] of Object.entries(this.$refs)) {\n                if (\n                    key.startsWith('wrapper-')\n                    && item !== undefined\n                    && isArray(item)\n                    && item[0] !== undefined\n                ) {\n                    this.inheritanceChanged[key] = item[0].isInherited;\n                }\n            }\n        },\n\n        mapSwFieldTypes(field) {\n            return !this.mappedFields[field] ? null : this.mappedFields[field];\n        },\n\n        getThemeCompatibleSalesChannels() {\n            const criteria = new Criteria();\n            criteria.addAssociation('type');\n            criteria.addFilter(Criteria.equalsAny('type.name', ['Storefront', 'Headless']));\n\n            return this.salesChannelRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                return searchResult.getIds();\n            });\n        },\n\n        getSalesChannelsWithTheme() {\n            const criteria = new Criteria();\n            criteria.addAssociation('themes');\n            criteria.addFilter(Criteria.not('or', [\n                Criteria.equals('themes.id', null),\n            ]));\n\n            return this.salesChannelRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                return searchResult;\n            });\n        },\n\n        getDefaultFolderId() {\n            const criteria = new Criteria(1, 1);\n            criteria.addAssociation('folder');\n            criteria.addFilter(Criteria.equals('entity', this.themeRepository.schema.entity));\n\n            return this.defaultFolderRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                const defaultFolder = searchResult.first();\n                if (defaultFolder.folder.id) {\n                    return defaultFolder.folder.id;\n                }\n\n                return null;\n            });\n        },\n\n        getDefaultTheme() {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('technicalName', 'Storefront'));\n\n            return this.themeRepository.search(criteria, Shopware.Context.api).then((response) => {\n               return response.first();\n            });\n        },\n\n        /**\n         *  Convert the field to the right structure for the form field renderer:\n         *  bind: {\n         *      type: field.type,\n         *      config: anything else from field, including field.custom\n         *  }\n         */\n        getBind(field) {\n            const config = Object.assign({}, field);\n\n            delete config.type;\n\n            Object.assign(config, config.custom);\n            delete config.custom;\n            config.label = '';\n            return { type: field.type, config: config };\n        },\n\n        selectionDisablingMethod(selection) {\n            if (!this.isDefaultTheme) {\n                return false;\n        }\n\n            return this.theme.getOrigin().salesChannels.has(selection.id);\n        },\n\n        isThemeCompatible(item) {\n            return this.themeCompatibleSalesChannels.includes(item.id);\n        },\n    }\n});\n","import template from './sw-theme-manager-list.html.twig';\nimport './sw-theme-manager-list.scss';\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('sw-theme-manager-list', {\n    template,\n\n    inject: ['acl'],\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing'),\n        Mixin.getByName('theme')\n    ],\n\n    data() {\n        return {\n            themes: [],\n            isLoading: false,\n            total: 0,\n            disableRouteParams: true,\n            salesChannelId: this.$route.params.id,\n            listMode: 'grid',\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            limit: 9,\n            term: null\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.identifier)\n        };\n    },\n\n    computed: {\n        languageRepository() {\n            return this.repositoryFactory.create('language');\n        },\n\n        columnConfig() {\n            return this.getColumnConfig();\n        },\n\n        sortOptions() {\n            return [\n                { value: 'createdAt:DESC', name: this.$tc('sw-theme-manager.sorting.labelSortByCreatedDsc') },\n                { value: 'createdAt:ASC', name: this.$tc('sw-theme-manager.sorting.labelSortByCreatedAsc') },\n                { value: 'updatedAt:DESC', name: this.$tc('sw-theme-manager.sorting.labelSortByUpdatedDsc') },\n                { value: 'updatedAt:ASC', name: this.$tc('sw-theme-manager.sorting.labelSortByUpdatedAsc') }\n            ];\n        },\n\n        sortingConCat() {\n            return `${this.sortBy}:${this.sortDirection}`;\n        },\n\n        lockToolTip() {\n            return {\n                showDelay: 100,\n                message: this.$tc('sw-theme-manager.general.lockedToolTip')\n            };\n        }\n    },\n\n    methods: {\n        onRefresh() {\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('salesChannels');\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n            criteria.addFilter(Criteria.equals('active', true));\n\n            if (this.term !== null) {\n                criteria.setTerm(this.term);\n            }\n\n            return this.themeRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                this.total = searchResult.total;\n                this.themes = searchResult;\n                this.isLoading = false;\n\n                return this.pages;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        resetList() {\n            this.page = 1;\n            this.themes = [];\n            this.updateRoute({\n                page: this.page,\n                limit: this.limit,\n                term: this.term,\n                sortBy: this.sortBy,\n                sortDirection: this.sortDirection\n            });\n\n            this.getList();\n        },\n\n        onChangeLanguage(languageId) {\n            Shopware.Context.api.languageId = languageId;\n            this.resetList();\n        },\n\n        onListItemClick(theme) {\n            this.$router.push({ name: 'sw.theme.manager.detail', params: { id: theme.id } });\n        },\n\n        onSortingChanged(value) {\n            [this.sortBy, this.sortDirection] = value.split(':');\n            this.resetList();\n        },\n\n        onSearch(value = null) {\n            this.term = value.length > 0 ? value : null;\n\n            this.resetList();\n        },\n\n        onPageChange({ page, limit }) {\n            this.page = page;\n            this.limit = limit;\n\n            this.getList();\n            this.updateRoute({\n                page: this.page,\n                limit: this.limit\n            });\n        },\n\n        onListModeChange() {\n            this.listMode = (this.listMode === 'grid') ? 'list' : 'grid';\n            this.limit = (this.listMode === 'grid') ? 9 : 10;\n\n            this.resetList();\n        },\n\n        onPreviewChange(theme) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.showMediaModal = true;\n            this.currentTheme = theme;\n        },\n\n        onPreviewImageRemove(theme) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            theme.previewMediaId = null;\n            theme.previewMedia = null;\n            this.saveTheme(theme);\n        },\n\n        onModalClose() {\n            this.showMediaModal = false;\n            this.currentTheme = null;\n        },\n\n        onPreviewImageChange([image]) {\n            this.currentTheme.previewMediaId = image.id;\n            this.saveTheme(this.currentTheme);\n            this.currentTheme.previewMedia = image;\n        },\n\n        saveTheme(theme) {\n            this.isLoading = true;\n            return this.themeRepository.save(theme, Shopware.Context.api).then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getColumnConfig() {\n            return [{\n                property: 'name',\n                label: this.$tc('sw-theme-manager.list.gridHeaderName'),\n                primary: true\n            },\n            {\n                property: 'salesChannels.length',\n                label: this.$tc('sw-theme-manager.list.gridHeaderAssignment'),\n                sortable: false,\n            },\n            {\n                property: 'createdAt',\n                label: this.$tc('sw-theme-manager.list.gridHeaderCreated')\n            }];\n        },\n\n        deleteDisabledToolTip(theme) {\n            return {\n                showDelay: 300,\n                message: this.$tc('sw-theme-manager.actions.deleteDisabledToolTip'),\n                disabled: theme.salesChannels.length === 0\n            };\n        }\n    }\n});\n","import template from './sw-theme-list-item.html.twig';\nimport './sw-theme-list-item.scss';\n\nconst { Component, Application } = Shopware;\n\nComponent.register('sw-theme-list-item', {\n    template,\n\n    props: {\n        theme: {\n            type: Object,\n            required: false,\n            default: null\n        },\n\n        active: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        previewMedia() {\n            if (this.theme.previewMedia && this.theme.previewMedia.id && this.theme.previewMedia.url) {\n                return {\n                    'background-image': `url('${this.theme.previewMedia.url}')`,\n                    'background-size': 'cover'\n                };\n            }\n\n            return {\n                'background-image': this.defaultThemeAsset\n            };\n        },\n\n        defaultThemeAsset() {\n            return `url('${Shopware.Context.api.assetsPath}/administration/static/img/theme/default_theme_preview.jpg')`;\n        },\n\n        lockToolTip() {\n            return {\n                showDelay: 100,\n                message: this.$tc('sw-theme-manager.general.lockedToolTip')\n            };\n        },\n\n        componentClasses() {\n            return {\n                'is--active': this.isActive(),\n                'is--disabled': this.disabled\n            };\n        }\n    },\n\n    methods: {\n        isActive() {\n            return this.theme && this.theme.salesChannels && this.theme.salesChannels.length > 0 || this.active;\n        },\n\n        onChangePreviewImage(theme) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('preview-image-change', theme);\n        },\n\n        onThemeClick() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('item-click', this.theme);\n        },\n\n        onRemovePreviewImage(theme) {\n            theme.previewMediaId = null;\n            theme.save();\n            theme.previewMedia = null;\n        },\n\n        onDelete(theme) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('theme-delete', theme);\n        },\n\n        emitItemClick(item) {\n            if (this.disabled) {\n                return;\n            }\n\n            this.$emit('item-click', item);\n        }\n    }\n});\n","import template from './sw-theme-modal.html.twig';\nimport './sw-theme-modal.scss';\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('sw-theme-modal', {\n    template,\n\n    inject: ['repositoryFactory'],\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            selected: null,\n            isLoading: false,\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            term: null,\n            total: null,\n            themes: []\n        };\n    },\n\n    computed: {\n        themeRepository() {\n            return this.repositoryFactory.create('theme');\n        }\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n            const criteria = new Criteria(this.page, this.limit);\n            criteria.addAssociation('previewMedia');\n            criteria.addAssociation('salesChannels');\n            criteria.addFilter(Criteria.equals('active', true));\n\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\n\n            if (this.term !== null) {\n                criteria.setTerm(this.term);\n            }\n\n            return this.themeRepository.search(criteria, Shopware.Context.api).then((searchResult) => {\n                this.total = searchResult.total;\n                this.themes = searchResult;\n                this.isLoading = false;\n\n                return this.themes;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        selectLayout() {\n            this.$emit('modal-theme-select', this.selected);\n            this.closeModal();\n        },\n\n        selectItem(themeId) {\n            this.selected = themeId;\n        },\n\n        onSearch(value) {\n            this.term = value.length > 0 ? value.length : null;\n\n            this.page = 1;\n            this.getList();\n        },\n\n        onSelection(themeId) {\n            this.selected = themeId;\n        },\n\n        closeModal() {\n            this.$emit('modal-close');\n            this.selected = null;\n            this.term = null;\n        }\n    }\n});\n","import './mixin/sw-theme.mixin';\nimport './page/sw-theme-manager-detail';\nimport './page/sw-theme-manager-list';\nimport './component/sw-theme-list-item/';\nimport './component/sw-theme-modal/';\nimport './acl';\n\nconst { Module } = Shopware;\n\nModule.register('sw-theme-manager', {\n    type: 'core',\n    title: 'sw-theme-manager.general.mainMenuItemGeneral',\n    description: 'sw-theme-manager.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#ff68b4',\n    icon: 'default-symbol-content',\n    favicon: 'icon-module-content.png',\n    entity: 'theme',\n\n    routes: {\n        index: {\n            component: 'sw-theme-manager-list',\n            path: 'index',\n            meta: {\n                privilege: 'theme.viewer'\n            }\n        },\n        detail: {\n            component: 'sw-theme-manager-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.theme.manager.index',\n                privilege: 'theme.viewer'\n            }\n        }\n    },\n\n    navigation: [{\n        id: 'sw-theme-manager',\n        label: 'sw-theme-manager.general.mainMenuItemGeneral',\n        color: '#ff68b4',\n        icon: 'default-object-image',\n        path: 'sw.theme.manager.index',\n        privilege: 'theme.viewer',\n        position: 80,\n        parent: 'sw-content'\n    }],\n\n    // Add theme route to sales channel\n    routeMiddleware(next, currentRoute) {\n        if (currentRoute.name === 'sw.sales.channel.detail') {\n            currentRoute.children.push({\n                component: 'sw-sales-channel-detail-theme',\n                name: 'sw.sales.channel.detail.theme',\n                isChildren: true,\n                path: '/sw/sales/channel/detail/:id/theme',\n                meta: {\n                    privilege: 'sales_channel.viewer'\n                }\n            });\n        }\n\n        next(currentRoute);\n    }\n});\n","import template from './sw-sales-channel-detail.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-sales-channel-detail', {\n    template,\n\n    methods: {\n        getLoadSalesChannelCriteria() {\n            const criteria = this.$super('getLoadSalesChannelCriteria');\n\n            criteria.addAssociation('themes');\n\n            return criteria;\n        }\n    }\n});\n","import template from './sw-sales-channel-detail-theme.html.twig';\nimport './sw-sales-channel-detail-theme.scss';\n\nconst { Component, Mixin } = Shopware;\nconst Criteria = Shopware.Data.Criteria;\n\nComponent.register('sw-sales-channel-detail-theme', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('placeholder')\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'themeService',\n        'acl'\n    ],\n\n    props: {\n        salesChannel: {\n            required: true\n        }\n    },\n\n    data() {\n        return {\n            theme: null,\n            showThemeSelectionModal: false,\n            showChangeModal: false,\n            newThemeId: null,\n            isLoading: false\n        };\n    },\n\n    computed: {\n        themeRepository() {\n            return this.repositoryFactory.create('theme');\n        }\n    },\n\n    watch: {\n        'salesChannel.extensions.themes': {\n            deep: true,\n            handler() {\n                if (!this.salesChannel || !this.salesChannel.extensions || this.salesChannel.extensions.themes.length < 1) {\n                    return;\n                }\n\n                this.theme = this.salesChannel.extensions.themes[0];\n\n                this.getTheme(this.theme.id);\n            }\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.salesChannel ||\n                !this.salesChannel.extensions ||\n                this.salesChannel.extensions.themes.length < 1) {\n                return;\n            }\n\n            this.theme = this.salesChannel.extensions.themes[0];\n            this.getTheme(this.theme.id);\n        },\n\n        getTheme(themeId) {\n            if (themeId === null) {\n                return;\n            }\n\n            const criteria = new Criteria();\n            criteria.addAssociation('previewMedia');\n\n            this.themeRepository.get(themeId, Shopware.Context.api, criteria).then((theme) => {\n                this.theme = theme;\n            });\n        },\n\n        openThemeModal() {\n            if (!this.acl.can('sales_channel.editor')) {\n                return;\n            }\n\n            this.showThemeSelectionModal = true;\n        },\n\n        closeThemeModal() {\n            this.showThemeSelectionModal = false;\n        },\n\n        openInThemeManager() {\n            if (!this.theme) {\n                this.$router.push({ name: 'sw.theme.manager.index' });\n            } else {\n                this.$router.push({ name: 'sw.theme.manager.detail', params: { id: this.theme.id } });\n            }\n        },\n\n        onChangeTheme(themeId) {\n            this.showThemeSelectionModal = false;\n\n            this.newThemeId = themeId;\n            this.showChangeModal = true;\n        },\n\n        onCloseChangeModal() {\n            this.showChangeModal = false;\n            this.newThemeId = null;\n        },\n\n        onConfirmChange() {\n            if (this.newThemeId) {\n                this.onThemeSelect(this.newThemeId);\n            }\n\n            this.showChangeModal = false;\n            this.newThemeId = null;\n        },\n\n        onThemeSelect(selectedThemeId) {\n            this.isLoading = true;\n            this.getTheme(selectedThemeId);\n            this.themeService.assignTheme(selectedThemeId, this.salesChannel.id).then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.createNotificationError({\n                    title: this.$tc('sw-theme-manager.general.titleError'),\n                    message: this.$tc('sw-theme-manager.general.messageSaveError')\n                });\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"theme\"\n * @class\n * @extends ApiService\n */\nclass ThemeApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'theme') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'themeService';\n    }\n\n    assignTheme(themeId, salesChannelId, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/assign/${salesChannelId}`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {},\n            {\n                params: { ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateTheme(themeId, data, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}`;\n\n        return this.httpClient.patch(\n            apiRoute,\n            data,\n            {\n                params: { ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    resetTheme(themeId, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/reset`;\n\n        return this.httpClient.patch(\n            apiRoute,\n            {},\n            {\n                params: { ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getConfiguration(themeId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/configuration`;\n\n        const additionalHeaders = {\n            'sw-language-id': Shopware.State.get('session').languageId\n        };\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getStructuredFields(themeId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/${themeId}/structured-fields`;\n\n        const additionalHeaders = {\n            'sw-language-id': Shopware.State.get('session').languageId\n        };\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(additionalHeaders)\n            }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default ThemeApiService;\n","import ThemeService from '../core/service/api/theme.api.service';\n\nconst { Application } = Shopware;\n\nShopware.Service().register('themeService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new ThemeService(initContainer.httpClient, container.loginService);\n});\n","module.exports = \"{% block sw_theme_modal %}\\n    <sw-modal class=\\\"sw-theme-modal\\\" @modal-close=\\\"closeModal\\\" :title=\\\"$tc('sw-theme-manager.themeModal.modalTitle')\\\">\\n\\n        {% block sw_theme_modal_header %}\\n            <div class=\\\"sw-theme-modal__header\\\">\\n\\n                {% block sw_theme_modal_header_title %}\\n                    <div class=\\\"sw-theme-modal__header-title\\\">\\n                        {{ $tc('sw-theme-manager.themeModal.headline') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_theme_modal_header_search %}\\n                    <sw-simple-search-field class=\\\"sw-theme-modal__header-search\\\"\\n                        :placeholder=\\\"$tc('sw-theme-manager.general.placeholderSearchBar')\\\"\\n                        @search-term-change=\\\"onSearch\\\">\\n                    </sw-simple-search-field>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_theme_modal_content %}\\n            <div class=\\\"sw-theme-modal__content\\\">\\n\\n                {% block sw_theme_modal_loader %}\\n                    <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                {% endblock %}\\n\\n                {% block sw_theme_modal_content %}\\n                    <sw-container v-else columns=\\\"repeat(auto-fill, minmax(250px, 1fr))\\\" gap=\\\"24px\\\">\\n                        {% block sw_theme_modal_content_listing %}\\n                            <div v-for=\\\"theme in themes\\\" class=\\\"sw-theme-modal__content-item\\\" :class=\\\"{ 'is--selected': theme.id === selected }\\\">\\n                                {% block sw_theme_modal_content_listing_item %}\\n\\n                                    {% block sw_theme_modal_content_listing_item_checkbox %}\\n                                        <sw-checkbox-field @change=\\\"onSelection(theme.id)\\\" :value=\\\"theme.id === selected\\\" type=\\\"checkbox\\\"></sw-checkbox-field>\\n                                    {% endblock %}\\n\\n                                    {% block sw_theme_modal_content_listing_item_inner %}\\n                                        <sw-theme-list-item\\n                                            :theme=\\\"theme\\\"\\n                                            :key=\\\"theme.id\\\"\\n                                            @item-click=\\\"selectItem(theme.id)\\\">\\n                                        </sw-theme-list-item>\\n                                    {% endblock %}\\n\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_theme_modal_footer %}\\n            <template slot=\\\"modal-footer\\\">\\n                <sw-button @click=\\\"closeModal\\\">\\n                    {{ $tc('sw-theme-manager.themeModal.actionCancel') }}\\n                </sw-button>\\n                <sw-button @click=\\\"selectLayout\\\" variant=\\\"primary\\\">\\n                    {{ $tc('sw-theme-manager.themeModal.actionConfirm') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n    </sw-modal>\\n{% endblock %}\\n\";","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","const { Mixin } = Shopware;\n\nMixin.register('theme', {\n    inject: [\n        'repositoryFactory',\n        'themeService',\n        'acl'\n    ],\n\n    data() {\n        return {\n            showDeleteModal: false,\n            showMediaModal: false,\n            showRenameModal: false,\n            showDuplicateModal: false,\n            newThemeName: '',\n            modalTheme: null\n        };\n    },\n\n    computed: {\n        themeRepository() {\n            return this.repositoryFactory.create('theme');\n        }\n    },\n\n    methods: {\n        onDeleteTheme(theme) {\n            if (!this.acl.can('theme.deleter')) {\n                return;\n            }\n\n            this.modalTheme = theme;\n            this.showDeleteModal = true;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n            this.modalTheme = null;\n        },\n\n        onConfirmThemeDelete() {\n            this.deleteTheme(this.modalTheme);\n\n            this.showDeleteModal = false;\n            this.modalTheme = null;\n        },\n\n        deleteTheme(theme) {\n            const titleDeleteError = this.$tc('sw-theme-manager.components.themeListItem.notificationDeleteErrorTitle');\n            const messageDeleteError = this.$tc('sw-theme-manager.components.themeListItem.notificationDeleteErrorMessage');\n\n            this.isLoading = true;\n            this.themeRepository.delete(theme.id, Shopware.Context.api).then(() => {\n                if (this.getList) {\n                    this.getList();\n                    return;\n                }\n\n                this.$router.push({ name: 'sw.theme.manager.index' });\n            }).catch(() => {\n                this.isLoading = false;\n                this.createNotificationError({\n                    title: titleDeleteError,\n                    message: messageDeleteError\n                });\n            });\n        },\n\n        onDuplicateTheme(theme) {\n            if (!this.acl.can('theme.creator')) {\n                return;\n            }\n\n            this.modalTheme = theme;\n            this.showDuplicateModal = true;\n        },\n\n        onCloseDuplicateModal() {\n            this.showDuplicateModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        onConfirmThemeDuplicate() {\n            this.duplicateTheme(this.modalTheme, this.newThemeName);\n\n            this.showDuplicateModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        duplicateTheme(parentTheme, name) {\n            const themeDuplicate = this.themeRepository.create(Shopware.Context.api);\n\n            themeDuplicate.name = name;\n            themeDuplicate.parentThemeId = parentTheme.id;\n            themeDuplicate.author = parentTheme.author;\n            themeDuplicate.description = parentTheme.description;\n            themeDuplicate.labels = parentTheme.labels;\n            themeDuplicate.helpTexts = parentTheme.helpTexts;\n            themeDuplicate.customFields = parentTheme.customFields;\n            themeDuplicate.baseConfig = null;\n            themeDuplicate.configValues = null;\n            themeDuplicate.previewMediaId = parentTheme.previewMediaId;\n            themeDuplicate.active = true;\n\n            this.themeRepository.save(themeDuplicate, Shopware.Context.api).then(() => {\n                this.$router.push({ name: 'sw.theme.manager.detail', params: { id: themeDuplicate.id } });\n            });\n        },\n\n        onRenameTheme(theme) {\n            if (!this.acl.can('theme.editor')) {\n                return;\n            }\n\n            this.modalTheme = theme;\n            this.newThemeName = this.modalTheme.name;\n            this.showRenameModal = true;\n        },\n\n        onCloseRenameModal() {\n            this.showRenameModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        onConfirmThemeRename() {\n            this.RenameTheme(this.modalTheme, this.newThemeName);\n\n            this.showRenameModal = false;\n            this.modalTheme = null;\n            this.newThemeName = '';\n        },\n\n        RenameTheme(theme, name) {\n            if (name) {\n                theme.name = name;\n            }\n\n            this.themeRepository.save(theme, Shopware.Context.api);\n        }\n    }\n});\n","module.exports = \"{%  block sw_sales_channel_detail_content_tab_theme %}\\n    <sw-tabs-item :disabled=\\\"isProductComparison || isLoading\\\"\\n                  :route=\\\"{ name: 'sw.sales.channel.detail.theme', params: { id: $route.params.id } }\\\"\\n                  :title=\\\"$tc('sw-sales-channel.detail.tabTheme')\\\">\\n        {{ $tc('sw-sales-channel.detail.tabTheme') }}\\n    </sw-tabs-item>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-theme-list-item.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"623cfa56\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./sw-theme-manager-detail.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4ae0e428\", content, true, {});","module.exports = \"{% block sw_theme_list_item %}\\n    <div class=\\\"sw-theme-list-item\\\" :class=\\\"componentClasses\\\">\\n\\n        {% block sw_theme_list_item_options %}\\n            <slot name=\\\"contextMenu\\\"></slot>\\n        {% endblock %}\\n\\n        {% block sw_theme_list_item_image %}\\n            <div class=\\\"sw-theme-list-item__image\\\"\\n                 v-if=\\\"theme\\\"\\n                 :style=\\\"previewMedia\\\"\\n                 @click=\\\"emitItemClick(theme)\\\">\\n            </div>\\n\\n            <div class=\\\"sw-theme-list-item__image is--empty\\\" v-else>\\n                {{ $tc('sw-theme-manager.themeListItem.emptyText') }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_theme_list_item_info %}\\n            <div class=\\\"sw-theme-list-item__info\\\">\\n                <div v-if=\\\"theme\\\" class=\\\"sw-theme-list-item__status\\\" :class=\\\"componentClasses\\\"></div>\\n                <div class=\\\"sw-theme-list-item__title\\\" v-if=\\\"theme\\\" @click=\\\"onThemeClick\\\">{{ theme.name }}</div>\\n                <sw-icon v-if=\\\"theme && !theme.parentThemeId\\\"\\n                         class=\\\"sw-theme-list-item__locked\\\"\\n                         name=\\\"small-lock-closed\\\"\\n                         v-tooltip=\\\"lockToolTip\\\"\\n                         small>\\n                </sw-icon>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_theme_manager_detail %}\\n    <sw-page class=\\\"sw-theme-manager-detail\\\">\\n\\n        {% block sw_theme_manager_detail_search_bar %}\\n            <template slot=\\\"search-bar\\\">\\n                <sw-search-bar :placeholder=\\\"$tc('sw-theme-manager.general.placeholderSearchBar')\\\"\\n                               :entityService=\\\"themeRepository\\\"\\n                               @search=\\\"onSearch\\\">\\n                </sw-search-bar>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_detail_smart_bar_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n\\n                {% block sw_theme_manager_detail_smart_bar_header_title %}\\n                    <h2 v-if=\\\"theme\\\">\\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text %}\\n                            {{ theme.name }}\\n                        {% endblock %}\\n                    </h2>\\n\\n                    <h2 v-else>\\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text_default %}\\n                            {{ $tc('sw-theme-manager.list.textThemeOverview') }}\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_detail_smart_bar_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                <sw-button-group\\n                    v-tooltip.bottom=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('theme.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n                    class=\\\"sw-theme-manager-detail__save-button-group\\\"\\n                    :split-button=\\\"true\\\"\\n                >\\n                    {% block sw_theme_manager_detail_smart_bar_actions_save %}\\n                        <sw-button-process\\n                            v-tooltip.bottom=\\\"{\\n                                message: $tc('sw-privileges.tooltip.warning'),\\n                                disabled: acl.can('theme.editor'),\\n                                showOnDisabledElements: true\\n                            }\\\"\\n                            class=\\\"sw_theme_manager_detail__save-action\\\"\\n                            :is-loading=\\\"isLoading\\\"\\n                            :process-success=\\\"isSaveSuccessful\\\"\\n                            variant=\\\"primary\\\"\\n                            :disabled=\\\"isLoading || !acl.can('theme.editor')\\\"\\n                            @process-finish=\\\"saveFinish\\\"\\n                            @click.prevent=\\\"onSave\\\"\\n                        >\\n                            {{ $tc('sw-theme-manager.actions.save') }}\\n                        </sw-button-process>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_smart_bar_actions_save_context_menu %}\\n                        <sw-context-button>\\n                            <template slot=\\\"button\\\">\\n                                <sw-button\\n                                    class=\\\"sw_theme_manager_detail__button-context-menu\\\"\\n                                    square\\n                                    variant=\\\"primary\\\"\\n                                    :disabled=\\\"isLoading || !acl.can('theme.editor')\\\"\\n                                >\\n                                    <sw-icon\\n                                            name=\\\"small-arrow-medium-down\\\"\\n                                            size=\\\"16\\\"\\n                                    />\\n                                </sw-button>\\n                            </template>\\n\\n                            {% block sw_theme_manager_detail_smart_bar_actions_save_context_menu_actions %}\\n                                {% block sw_theme_manager_detail_smart_bar_actions_save_clean %}\\n                                    <sw-context-menu-item\\n                                        class=\\\"sw_theme_manager_detail__save-clean-action\\\"\\n                                        :disabled=\\\"!acl.can('theme.editor')\\\"\\n                                        @click=\\\"onSaveClean\\\"\\n                                        v-tooltip.top=\\\"{\\n                                            message: $tc('sw-theme-manager.actions.saveCleanToolTip'),\\n                                            disabled: !acl.can('theme.editor'),\\n                                            showOnDisabledElements: true\\n                                        }\\\"\\n                                    >\\n                                        {{ $tc('sw-theme-manager.actions.saveClean') }}\\n                                    </sw-context-menu-item>\\n                                {% endblock %}\\n                            {% endblock %}\\n                        </sw-context-button>\\n                    {% endblock %}\\n                </sw-button-group>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_theme_manager_detail_content %}\\n            <template slot=\\\"content\\\">\\n                <div\\n                    v-if=\\\"!shouldShowContent\\\"\\n                    class=\\\"sw-theme-manager-detail__content-skeleton\\\"\\n                >\\n                    <sw-skeleton />\\n                    <sw-skeleton />\\n                </div>\\n\\n                <div v-else class=\\\"sw-theme-manager-detail__content\\\">\\n                    <sw-tabs defaultItem=\\\"default\\\" @new-item-active=\\\"onChangeTab\\\">\\n                        <template #default=\\\"{ active }\\\">\\n                            <sw-tabs-item v-if=\\\"hasMoreThanOneTab\\\"\\n                                          v-for=\\\"(tab, tabName) in structuredThemeFields.tabs\\\"\\n                                          :key=\\\"tabName\\\"\\n                                          :title=\\\"tab.label\\\"\\n                                          :name=\\\"tabName\\\"\\n                                          :active=\\\"active === tabName\\\">\\n                                {{ tab.label || $tc('sw-theme-manager.general.defaultTab') }}\\n                            </sw-tabs-item>\\n                        </template>\\n\\n                        <template #content=\\\"{ active }\\\">\\n                            <template v-if=\\\"active === 'default'\\\">\\n                                <template v-if=\\\"isDerived\\\">\\n                                    {% block sw_theme_manager_detail_content_inheritance %}\\n                                        <div class=\\\"sw-theme-manager-detail__inheritance\\\">\\n                                            {% block sw_theme_manager_detail_content_inheritance_icon %}\\n                                                <sw-icon :multicolor=\\\"true\\\" size=\\\"20\\\" name=\\\"custom-inherited\\\"></sw-icon>\\n                                            {% endblock %}\\n\\n                                            {% block sw_theme_manager_detail_content_inheritance_text %}\\n                                                <p class=\\\"sw-theme-manager-detail__inheritance-text\\\" v-if=\\\"parentTheme\\\">\\n                                                    {{ $tc('sw-theme-manager.detail.inheritanceInfo', 0, { parentThemeName: parentTheme.name }) }}\\n                                                </p>\\n                                                <p class=\\\"sw-theme-manager-detail__inheritance-text\\\" v-else-if=\\\"defaultTheme\\\">\\n                                                    {{ $tc('sw-theme-manager.detail.inheritanceInfo', 0, { parentThemeName: defaultTheme.name }) }}\\n                                                </p>\\n                                            {% endblock %}\\n                                        </div>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block sw_theme_manager_detail_content_info %}\\n                                    <sw-card class=\\\"sw-theme-manager-detail__info-card\\\">\\n                                        <div class=\\\"sw-theme-manager-detail__info\\\">\\n\\n                                            {% block sw_theme_manager_detail_content_info_image %}\\n                                                <div class=\\\"sw-theme-manager-detail__info-image\\\" :style=\\\"previewMedia\\\"></div>\\n                                            {% endblock %}\\n\\n                                            {% block sw_theme_manager_detail_content_info_content %}\\n                                                <div class=\\\"sw-theme-manager-detail__info-content\\\">\\n                                                    <div class=\\\"sw-theme-manager-detail__info-name\\\">{{ theme.name }}</div>\\n                                                    <div class=\\\"sw-theme-manager-detail__info-author\\\">{{ theme.author }}</div>\\n                                                    <div v-if=\\\"theme.description\\\" class=\\\"sw-theme-manager-detail__info-descr\\\">\\n                                                        <p class=\\\"sw-theme-manager-detail__info-descr-title\\\">\\n                                                            {{ $tc('sw-theme-manager.detail.description') }}:\\n                                                        </p>\\n                                                        <p>{{ theme.description |truncate(140) }}</p>\\n                                                    </div>\\n\\n                                                    <sw-entity-multi-select\\n                                                        v-model=\\\"theme.salesChannels\\\"\\n                                                        class=\\\"sw-theme-manager-detail__saleschannels-select\\\"\\n                                                        :label=\\\"$tc('sw-theme-manager.detail.salesChannel')\\\"\\n                                                        :disabled=\\\"!acl.can('theme.editor')\\\"\\n                                                        :helpText=\\\"isDefaultTheme ? $tc('sw-theme-manager.detail.salesChannelHelpText') : null\\\"\\n                                                        :selectionDisablingMethod=\\\"selectionDisablingMethod\\\">\\n                                                        <template #result-item=\\\"{ item, index }\\\">\\n                                                            <span v-if=\\\"!isThemeCompatible(item)\\\"></span>\\n                                                        </template>\\n                                                    </sw-entity-multi-select>\\n\\n                                                </div>\\n                                            {% endblock %}\\n                                        </div>\\n\\n                                        {% block sw_theme_manager_detail_content_info_context_button %}\\n                                            <sw-context-button\\n                                                class=\\\"sw-theme-manager-detail__context-button\\\"\\n                                                :zIndex=\\\"1100\\\"\\n                                            >\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_rename %}\\n                                                    <sw-context-menu-item\\n                                                        @click=\\\"onRenameTheme(theme)\\\"\\n                                                        :disabled=\\\"!acl.can('theme.editor')\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.rename') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_create %}\\n                                                    <sw-context-menu-item\\n                                                        @click=\\\"onDuplicateTheme(theme)\\\"\\n                                                        v-if=\\\"!theme.parentThemeId\\\"\\n                                                        :disabled=\\\"!acl.can('theme.creator')\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.duplicate') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_reset %}\\n                                                    <sw-context-menu-item\\n                                                        @click=\\\"onReset\\\"\\n                                                        v-if=\\\"theme.configValues !== null\\\"\\n                                                        :disabled=\\\"!acl.can('theme.editor')\\\"\\n                                                        variant=\\\"danger\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.buttonReset') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_theme_manager_detail_context_button_option_delete %}\\n                                                    <sw-context-menu-item\\n                                                        v-if=\\\"theme.parentThemeId\\\"\\n                                                        :disabled=\\\"!acl.can('theme.deleter') || theme.salesChannels.length > 0\\\"\\n                                                        v-tooltip.right=\\\"deleteDisabledToolTip\\\"\\n                                                        class=\\\"sw-theme-manager-detail__option-delete\\\"\\n                                                        variant=\\\"danger\\\"\\n                                                        @click=\\\"onDeleteTheme(theme)\\\">\\n                                                        {{ $tc('sw-theme-manager.actions.delete') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n                                            </sw-context-button>\\n                                        {% endblock %}\\n                                    </sw-card>\\n                                {% endblock %}\\n                            </template>\\n\\n                            <template v-for=\\\"(tab, tabName) in structuredThemeFields.tabs\\\">\\n                                <template v-if=\\\"tabName === active\\\">\\n                                    {% block sw_theme_manager_detail_content_areas %}\\n                                        <sw-card v-for=\\\"(block, blockName) in tab.blocks\\\"\\n                                                 :key=\\\"blockName\\\"\\n                                                 class=\\\"sw-theme-manager-detail__area\\\"\\n                                                 :title=\\\"block.label\\\">\\n\\n                                            {% block sw_theme_manager_detail_content_sections %}\\n                                                <sw-card-section v-for=\\\"(section, sectionName) in block.sections\\\"\\n                                                                 :key=\\\"sectionName\\\">\\n                                                    <div v-if=\\\"section.label\\\" class=\\\"sw-theme-manager-detail__content--section_title\\\">\\n                                                        {{ section.label }}\\n                                                    </div>\\n\\n                                                    {% block sw_theme_manager_detail_content_fields %}\\n                                                        <sw-container class=\\\"sw-theme-manager-detail__content--section_field\\\">\\n                                                            <div v-for=\\\"(field, fieldName) in section.fields\\\"\\n                                                                 :key=\\\"fieldName\\\"\\n                                                                 class=\\\"sw-theme-manager-detail__content--section_field\\\"\\n                                                                 :class=\\\"{'sw-theme-manager-detail__content--section_field-full-width': field.fullWidth}\\\">\\n                                                                <template v-if=\\\"themeConfig[fieldName] && baseThemeConfig[fieldName]\\\">\\n                                                                    <template v-if=\\\"mapSwFieldTypes(field.type) === 'select'\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                                :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                                v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                                :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                                :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                                :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                                :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                                :customInheritationCheckFunction=\\\"checkInheritance\\\"\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-field\\n                                                                                        type=\\\"select\\\"\\n                                                                                        :placeholder=\\\"field.placeholder\\\"\\n                                                                                        :options=\\\"field.options\\\"\\n                                                                                        :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                        :disabled=\\\"isInherited || !acl.can('theme.editor')\\\"\\n                                                                                        @change=\\\"updateCurrentValue\\\"\\n                                                                                        @input=\\\"updateCurrentValue\\\"\\n                                                                                        v-model=\\\"currentValue\\\">\\n                                                                                </sw-field>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n\\n                                                                    <template v-else-if=\\\"field.type === 'url'\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                                :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                                v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                                :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                                :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                                :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                                :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                                :customInheritationCheckFunction=\\\"checkInheritance\\\"\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-field\\n                                                                                        type=\\\"url\\\"\\n                                                                                        :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                        :disabled=\\\"isInherited || !acl.can('theme.editor')\\\"\\n                                                                                        @change=\\\"updateCurrentValue\\\"\\n                                                                                        @input=\\\"updateCurrentValue\\\"\\n                                                                                        v-model=\\\"currentValue\\\">\\n                                                                                </sw-field>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n                                                                    <div v-else-if=\\\"field.type === 'media'\\\">\\n\\n                                                                        <sw-upload-listener\\n                                                                            :uploadTag=\\\"tabName + '-' + blockName + '-' + sectionName + '-' + fieldName\\\"\\n                                                                            @media-upload-finish=\\\"successfulUpload($event, currentThemeConfig[fieldName])\\\"\\n                                                                            autoUpload>\\n                                                                        </sw-upload-listener>\\n\\n                                                                        <sw-inherit-wrapper\\n                                                                                :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                                v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                                :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                                :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                                :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                                :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                        >\\n                                                                                <template #content=\\\"{ currentValue, updateCurrentValue, isInherited, removeInheritance }\\\">\\n                                                                                    <sw-media-upload-v2\\n                                                                                        :source=\\\"currentValue\\\"\\n                                                                                        :uploadTag=\\\"tabName + '-' + blockName + '-' + sectionName + '-' + fieldName\\\"\\n                                                                                        :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                        :ref=\\\"tabName + '-' + blockName + '-' + sectionName + '-' + fieldName\\\"\\n                                                                                        :defaultFolder=\\\"themeRepository.schema.entity\\\"\\n                                                                                        :allowMultiSelect=\\\"false\\\"\\n                                                                                        :disabled=\\\"!acl.can('theme.editor') || themeConfig[fieldName].editable === false\\\"\\n                                                                                        @media-drop=\\\"onDropMedia($event, currentThemeConfig[fieldName])\\\"\\n                                                                                        @media-upload-sidebar-open=\\\"openMediaSidebar()\\\"\\n                                                                                        @media-upload-remove-image=\\\"removeMediaItem(fieldName, updateCurrentValue, isInherited, removeInheritance)\\\">\\n                                                                                    </sw-media-upload-v2>\\n                                                                                </template>\\n                                                                            </sw-inherit-wrapper>\\n                                                                    </div>\\n\\n                                                                    <template v-else-if=\\\"mapSwFieldTypes(field.type)\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                            :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                            v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                            :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                            :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                            :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                            :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                            :customInheritationCheckFunction=\\\"checkInheritance\\\"\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-field\\n                                                                                    :type=\\\"mapSwFieldTypes(field.type)\\\"\\n                                                                                    :helpText=\\\"!field.helpText ? null : field.helpText\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor') || themeConfig[fieldName].editable === false\\\"\\n                                                                                    :value=\\\"currentValue\\\"\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                >\\n                                                                                </sw-field>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n\\n                                                                    <template v-else-if=\\\"themeConfig[fieldName].editable !== false\\\">\\n                                                                        <sw-inherit-wrapper\\n                                                                                :class=\\\"'sw-field-id-' + fieldName\\\"\\n                                                                                v-model=\\\"currentThemeConfig[fieldName].value\\\"\\n                                                                                :ref=\\\"`wrapper-${fieldName}`\\\"\\n                                                                                :has-parent=\\\"theme.baseConfig?.fields?.[fieldName] == null\\\"\\n                                                                                :inherited-value=\\\"baseThemeConfig[fieldName].value\\\"\\n                                                                                :label=\\\"!field.label ? '' : field.label\\\"\\n                                                                                :customInheritationCheckFunction=\\\"checkInheritance\\\"\\n                                                                        >\\n                                                                            <template #content=\\\"{ currentValue, updateCurrentValue, isInherited }\\\">\\n                                                                                <sw-form-field-renderer\\n                                                                                    v-bind=\\\"getBind(field)\\\"\\n                                                                                    :value=\\\"currentValue\\\"\\n                                                                                    @change=\\\"updateCurrentValue\\\"\\n                                                                                    @input=\\\"updateCurrentValue\\\"\\n                                                                                    :disabled=\\\"isInherited || !acl.can('theme.editor')\\\">\\n                                                                                </sw-form-field-renderer>\\n                                                                            </template>\\n                                                                        </sw-inherit-wrapper>\\n                                                                    </template>\\n                                                                </template>\\n                                                            </div>\\n                                                        </sw-container>\\n                                                    {% endblock %}\\n                                                </sw-card-section>\\n                                            {% endblock %}\\n                                        </sw-card>\\n                                    {% endblock %}\\n                                </template>\\n                            </template>\\n                        </template>\\n                    </sw-tabs>\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_reset_modal %}\\n                <sw-modal v-if=\\\"showResetModal\\\"\\n                          @modal-close=\\\"onCloseResetModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleReset')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_reset_modal_reset_text %}\\n                        <p class=\\\"sw_theme_manager__confirm-reset-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.modalTextResetInfo') }}\\n                        </p>\\n                        <p v-if=\\\"theme.salesChannels.length > 0\\\" class=\\\"sw_theme_manager__confirm-reset-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.modalTextResetAssigned') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_reset_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_theme_manager_reset_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseResetModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.actions.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_reset_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeReset\\\"\\n                                           variant=\\\"danger\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.actions.buttonReset') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                     </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_delete_modal %}\\n                <sw-modal v-if=\\\"showDeleteModal\\\"\\n                          @modal-close=\\\"onCloseDeleteModal\\\"\\n                          :title=\\\"$tc('global.default.warning')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_detail_delete_modal_info %}\\n                        <div class=\\\"sw_theme_manager__confirm-delete-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.textDeleteInfo', 0,\\n                            { themeName: theme.name }) }}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_delete_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_theme_manager_detail_delete_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_delete_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeDelete\\\"\\n                                           variant=\\\"danger\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonDelete') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_save_modal %}\\n                <sw-modal v-if=\\\"showSaveModal\\\"\\n                          class=\\\"sw-theme-manager-detail-modal\\\"\\n                          @modal-close=\\\"onCloseSaveModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleSave')\\\"\\n                          variant=\\\"large\\\">\\n\\n                    {% block sw_theme_manager_detail_save_modal_info %}\\n                        <div class=\\\"sw_theme_manager__confirm-save-text\\\">\\n                            {{ $tc('sw-theme-manager.modal.textSaveInfo', 0,\\n                            { themeName: theme.name }) }}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_save_modal_already_assigned_warning %}\\n                        <sw-alert\\n                            v-if=\\\"overwrittenSalesChannelAssignments.length > 0\\\"\\n                            variant=\\\"warning\\\">\\n\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-if=\\\"overwrittenSalesChannelAssignments.length === 1\\\">\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelAlreadyAssignedModal.descriptionSingle', 0, { newThemeName: theme.name })\\\"></span>\\n                            </div>\\n\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-else>\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelAlreadyAssignedModal.descriptionMultiple', 0, { newThemeName: theme.name })\\\"></span>\\n                            </div>\\n\\n                            <div v-for=\\\"salesChannel in overwrittenSalesChannelAssignments\\\">\\n                                <b>{{ salesChannel.oldThemeName }}</b> ({{ salesChannel.salesChannelName }})\\n                            </div>\\n                        </sw-alert>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_save_modal_removed_warning %}\\n                        <sw-alert\\n                            v-if=\\\"removedSalesChannels.length > 0\\\"\\n                            variant=\\\"warning\\\">\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-if=\\\"removedSalesChannels.length === 1\\\">\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelRemovedModal.descriptionSingle', 0, { defaultThemeName: defaultTheme.name })\\\"></span>\\n                            </div>\\n\\n                            <div class=\\\"sw-theme-manager-detail__sales-channel-warning\\\" v-else>\\n                                <span v-html=\\\"$tc('sw-theme-manager.modal.salesChannelRemovedModal.descriptionMultiple', 0, { defaultThemeName: defaultTheme.name })\\\"></span>\\n                            </div>\\n\\n                            <div v-for=\\\"salesChannel in removedSalesChannels\\\">\\n                                <b>{{ theme.name }}</b> ({{ salesChannel.name }})\\n                            </div>\\n                        </sw-alert>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_save_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_theme_manager_detail_save_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseSaveModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_save_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeSave\\\"\\n                                           variant=\\\"primary\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonSave') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_duplicate_modal %}\\n                <sw-modal v-if=\\\"showDuplicateModal\\\"\\n                          class=\\\"sw_theme_manager__duplicate-modal\\\"\\n                          @modal-close=\\\"onCloseDuplicateModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleDuplicate')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_detail_duplicate_modal_name_input %}\\n                        <div class=\\\"sw_theme_manager__duplicate-info\\\">\\n                            {{ $tc('sw-theme-manager.modal.textDuplicateInfo') }}\\n                        </div>\\n\\n                        <sw-field v-model=\\\"newThemeName\\\"\\n                                  :label=\\\"$tc('sw-theme-manager.modal.labelDuplicateThemeName')\\\"\\n                                  :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderDuplicateThemeName')\\\"\\n                                  tpye=\\\"text\\\">\\n                        </sw-field>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_duplicate_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_theme_manager_detail_duplicate_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseDuplicateModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_duplicate_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeDuplicate\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"newThemeName.length < 3\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonDuplicateTheme') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_rename_modal %}\\n                <sw-modal v-if=\\\"showRenameModal\\\"\\n                          class=\\\"sw_theme_manager__rename-modal\\\"\\n                          @modal-close=\\\"onCloseRenameModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.modalTitleRename')\\\"\\n                          variant=\\\"small\\\">\\n\\n                    {% block sw_theme_manager_detail_rename_modal_name_input %}\\n                        <div class=\\\"sw_theme_manager__rename-info\\\">\\n                            {{ $tc('sw-theme-manager.modal.textRenameInfo') }}\\n                        </div>\\n\\n                        <sw-field v-model=\\\"newThemeName\\\"\\n                                  :label=\\\"$tc('sw-theme-manager.modal.labelRenameThemeName')\\\"\\n                                  :placeholder=\\\"$tc('sw-theme-manager.modal.placeholderRenameThemeName')\\\"\\n                                  tpye=\\\"text\\\">\\n                        </sw-field>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_rename_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_theme_manager_detail_rename_modal_cancel %}\\n                                <sw-button @click=\\\"onCloseRenameModal\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonCancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block sw_theme_manager_detail_rename_modal_confirm %}\\n                                <sw-button @click=\\\"onConfirmThemeRename\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"newThemeName.length < 3\\\"\\n                                           size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonRenameTheme') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block sw_theme_manager_detail_error_modal %}\\n                <sw-modal v-if=\\\"errorModalMessage\\\"\\n                          @modal-close=\\\"onCloseErrorModal\\\"\\n                          :title=\\\"$tc('sw-theme-manager.modal.errorModalTitle')\\\"\\n                          variant=\\\"large\\\">\\n\\n                    {% block sw_theme_manager_detail_error_modal_message %}\\n                        <pre style=\\\"white-space: pre-line;\\\">{{ errorModalMessage }}</pre>\\n                    {% endblock %}\\n\\n                    {% block sw_theme_manager_detail_error_modal_footer %}\\n                        <template slot=\\\"modal-footer\\\">\\n                            {% block sw_theme_manager_detail_error_modal_close %}\\n                                <sw-button @click=\\\"onCloseErrorModal\\\" size=\\\"small\\\">\\n                                    {{ $tc('sw-theme-manager.modal.buttonClose') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        </template>\\n\\n        {% block sw_theme_manager_detail_sidebar %}\\n            <sw-sidebar slot=\\\"sidebar\\\" :propagateWidth=\\\"true\\\">\\n                {% block sw_theme_manager_detail_sidebar_media %}\\n                    <sw-sidebar-media-item\\n                        ref=\\\"mediaSidebarItem\\\"\\n                        :initialFolderId=\\\"defaultMediaFolderId\\\">\\n                        <template #context-menu-items=\\\"media\\\">\\n                            {% block sw_theme_manager_detail_sidebar_media_items %}\\n                                <template v-if=\\\"shouldShowContent\\\" v-for=\\\"(tab, tabName) in structuredThemeFields.tabs\\\">\\n                                    <template v-for=\\\"block in tab.blocks\\\">\\n                                        <template v-for=\\\"section in block.sections\\\">\\n                                            <sw-context-menu-item\\n                                                v-for=\\\"(field, fieldName) in section.fields\\\"\\n                                                v-if=\\\"themeConfig[fieldName] && field.type === 'media'\\\"\\n                                                :key=\\\"fieldName\\\"\\n                                                @click=\\\"onAddMediaToTheme(media.mediaItem, currentThemeConfig[fieldName])\\\">\\n                                                {{ $tc('sw-theme-manager.modal.addToMediaLabel', 0, { name: field.label }) }}\\n                                            </sw-context-menu-item>\\n                                        </template>\\n                                    </template>\\n                                </template>\\n                            {% endblock %}\\n                        </template>\\n                    </sw-sidebar-media-item>\\n                {% endblock %}\\n            </sw-sidebar>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";"],"sourceRoot":""}