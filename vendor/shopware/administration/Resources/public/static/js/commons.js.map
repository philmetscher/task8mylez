{"version":3,"sources":["webpack:///./src/core/service/api/product-stream-preview.service.js","webpack:///./src/core/service/api.service.ts","webpack:///./src/core/service/api/sync.api.service.js","webpack:///./src/core/service/api/snippet-set.api.service.js","webpack:///./src/core/service/api/business-events.api.service.js","webpack:///./src/core/service/api/product-export.api.service.js","webpack:///./src/core/service/api/acl.api.service.js","webpack:///./src/core/factory/cache-adapter.factory.js","webpack:///./src/core/service/api/user-input-sanitize.service.js","webpack:///./src/core/service/api/user-activity.service.js","webpack:///./src/core/service/jsonapi-parser.service.js","webpack:///./src/core/service/api/app-url-change.service.js","webpack:///./src/core/data/entity-collection.data.ts","webpack:///./src/core/helper/sanitizer.helper.js","webpack:///./src/core/helper/middleware.helper.js","webpack:///./src/core/factory/module.factory.ts","webpack:///./src/core/factory/template.factory.js","webpack:///./src/core/factory/component.factory.ts","webpack:///./src/core/factory/async-component.factory.ts","webpack:///./src/core/factory/entity.factory.js","webpack:///./src/core/factory/state.factory.ts","webpack:///./src/core/factory/service.factory.ts","webpack:///./src/core/factory/classes-factory.js","webpack:///./src/core/factory/mixin.factory.js","webpack:///./src/core/factory/filter.factory.ts","webpack:///./src/core/factory/directive.factory.js","webpack:///./src/core/factory/locale.factory.js","webpack:///./src/core/factory/shortcut.factory.js","webpack:///./src/core/factory/plugin-boot.factory.js","webpack:///./src/core/factory/api-service.factory.js","webpack:///./src/core/data/entity-definition.data.js","webpack:///./src/core/factory/entity-definition.factory.js","webpack:///./src/core/factory/worker-notification.factory.js","webpack:///./src/core/data/ShopwareError.js","webpack:///./src/core/helper/flattree.helper.js","webpack:///./src/core/helper/device.helper.js","webpack:///./src/core/data/changeset-generator.data.js","webpack:///./src/core/data/entity.data.ts","webpack:///./src/core/data/entity-factory.data.js","webpack:///./src/core/data/entity-hydrator.data.ts","webpack:///./src/core/data/repository.data.ts","webpack:///./src/core/data/error-resolver.data.js","webpack:///./src/core/data/error-store.data.js","webpack:///./src/core/data/filter-factory.data.js","webpack:///./src/core/data/index.js","webpack:///./src/core/application.ts","webpack:///./src/core/data/repository-factory.data.ts","webpack:///./src/core/factory/api-context.factory.js","webpack:///./src/core/factory/app-context.factory.js","webpack:///./src/core/factory/router.factory.js","webpack:///./src/core/service/api/index.js","webpack:///./src/core/extension-api.ts","webpack:///./src/core/shopware.ts","webpack:///index)\\.js|\\.ts$","webpack:///./src/core/service/api/language-plugin.api.service.js","webpack:///./src/core/service/api/search.api.service.js","webpack:///./src/core/service/api/import-export.api.service.js","webpack:///./src/core/service/api/customer-group-registration.api.service.js","webpack:///./src/core/service/utils/types.utils.ts","webpack:///./src/core/service/api/known-ips.api.service.js","webpack:///./src/core/service/utils/object.utils.ts","webpack:///./src/core/service/api/checkout-store.api.service.js","webpack:///./src/core/service/api/config.api.service.js","webpack:///./src/core/service/api/notifications.service.js","webpack:///./src/core/service/api/sales-channel.api.service.js","webpack:///./src/core/service/api/seo-url-template.api.service.js","webpack:///./src/core/service/api/media-folder.api.service.js","webpack:///./src/core/helper/upload-task.helper.js","webpack:///./src/core/service/api/media.api.service.js","webpack:///./src/core/service/api/document.api.service.js","webpack:///./src/core/service/api/number-range.api.service.js","webpack:///./src/core/service/api/marketing.service.js","webpack:///./src/core/service/api/order-document.api.service.js","webpack:///./src/core/service/api/app-cms-blocks.service.js","webpack:///./src/core/service/api/store-context.api.service.js","webpack:///./src/core/service/utils/format.utils.ts","webpack:///./src/core/service/utils/dom.utils.ts","webpack:///./src/core/service/utils/file-reader.utils.ts","webpack:///./src/core/service/utils/sort.utils.ts","webpack:///./src/core/service/util.service.ts","webpack:///./src/core/feature.ts","webpack:///./src/core/service/api/order.api.service.js","webpack:///./src/core/service/api/user-validation.api.service.js","webpack:///./src/core/service/api/order-state-machine.api.service.js","webpack:///./src/core/service/api/scheduled-task.api.service.js","webpack:///./src/core/service/api/extension-sdk.service.ts","webpack:///./src/core/service/api/update.api.service.js","webpack:///./src/core/service/utils/string.utils.ts","webpack:///./src/core/data/criteria.data.ts","webpack:///./src/core/service/api/state-machine.api.service.js","webpack:///./src/core/service/utils/debug.utils.ts","webpack:///./src/core/service/api/system-config.api.service.js","webpack:///./src/core/helper/refresh-token.helper.js","webpack:///./src/core/service/api/seo-url.api.service.js","webpack:///./src/core/service/api/flow-actions.api.service.js","webpack:///./src/core/service/api/calculate-price.api.service.js","webpack:///./src/core/service/api/cache.api.service.js","webpack:///./src/core/service/api/promotion-sync.api.service.js","webpack:///./src/core/service/api/first-run-wizard.api.service.js","webpack:///./src/core/service/api/message-queue.api.service.js","webpack:///./src/core/factory/http.factory.js","webpack:///./src/core/service/api/excludedSearchTerm.api.service.js","webpack:///./src/core/service/api/cart-store-api.api.service.js","webpack:///./src/core/service/api/app-action-button.service.js","webpack:///./src/core/service/api/app-modules.service.js","webpack:///./src/core/service/api/store.api.service.js","webpack:///./src/core/service/api/integration.api.service.js","webpack:///./src/core/service/api/snippet.api.service.js","webpack:///./src/core/service/api/user.api.service.js","webpack:///./src/core/service/api/mail.api.service.js","webpack:///./src/core/service/api/recommendations.api.service.js","webpack:///./src/core/service/api/user-config.api.service.js","webpack:///./src/core/service/api/customer-validation.api.service.js","webpack:///./src/core/service/api/user-recovery.api.service.js"],"names":["ProductStreamPreviewService","httpClient","loginService","name","salesChannelId","criteria","filter","additionalHeaders","this","post","headers","getBasicHeaders","then","response","ApiService","handleResponse","apiEndpoint","contentType","id","prefix","url","length","basicHeaders","Accept","Authorization","getToken","Object","assign","endpoint","client","type","data","undefined","hasOwnProperty","parseJsonApiData","parseJsonApi","versionId","paramDictionary","params","keys","key","map","join","SyncApiService","payload","additionalParams","Shopware","Classes","SnippetSetApiService","page","limit","filters","sort","defaultSort","sortBy","sortDirection","getApiBasePath","get","BusinessEventsApiService","ProductExportApiService","productExport","apiRoute","AclApiService","getHeaders","values","allowUrlList","flushCacheUrls","cacheAdapterFactory","originalAdapter","requestCaches","config","requestChangesData","includes","method","shouldFlushCache","forEach","requestHash","JSON","stringify","identicalRequest","Utils","debug","warn","cloneResponse","setTimeout","request","parse","AppUrlChangeService","html","field","UserActivityApiService","jsonApiParserService","json","jsonData","types","isString","err","isObject","isArray","convertRawDataToJson","parsed","errors","links","meta","areTopMemberPropertiesPresent","convertedStructure","associations","aggregations","includedMap","included","Map","item","set","createIncludeMap","record","dataItem","createItem","associationLinks","prototype","call","renameObjectPropertiesToCamelCase","parseDataStructure","attributes","relationships","relations","mappedRelations","prop","relationship","related","mapIncluded","createRelationships","attributesCollection","attributeKey","attribute","replace","match","toUpperCase","includedKey","has","entries","description","strategy","resp","status","EntityCollection","middlewareNames","Sanitizer","domPurify","setConfig","clearConfig","middlewareName","middlewareFn","addHook","removeHooks","dirtyHtml","sanitize","MiddlewareHelper","_stack","middleware","Error","push","args","stack","frame","getModuleRoutes","moduleRoutes","modules","module","routes","route","Feature","isActive","flag","isChildren","middlewareHelper","go","registerModule","moduleId","splitModuleId","split","routeMiddleware","routeKey","routePrefixName","routePrefixPath","coreRoute","path","component","components","default","componentList","routeComponents","componentKey","createRouteComponentList","childrenRoutes","children","iterateChildRoutes","registerChildRoutes","alias","isFunction","use","size","moduleDefinition","manifest","navigation","navigationEntry","moduleType","parent","link","label","position","settingsItem","Array","group","to","icon","iconComponent","title","State","commit","addSettingsItemsToStore","extensionEntryRoute","extensionName","addEntryRouteToExtensionRouteStore","getModuleRegistry","value","delete","getModuleByEntityName","entityName","from","find","entity","getModuleSnippets","reduce","accumulator","localeKey","snippets","merge","getModuleByKey","routeDefinition","child","routeDefinitionChildren","registerComponentTemplate","componentName","componentTemplate","template","templateRegistry","overrides","raw","extend","extendComponentTemplate","extendComponentName","templateExtension","registerTemplateOverride","templateOverride","overrideIndex","index","getRenderedTemplate","registerNormalizedTemplate","normalizedTemplateRegistry","resolveTemplates","clearTwigCache","Twig","clearRegistry","getTwigCache","getRegistry","disableTwigCache","cache","getTemplateRegistry","getNormalizedTemplateRegistry","getTemplateOverrides","TwigTemplates","TwigCore","token","definitions","exports","extendTag","regex","next","open","context","chain","output","placeholders","Templates","registry","parentPlaceholder","parentRegExp","RegExp","templateDefinition","resolveExtendsComponent","hasOverridesInExtensionChain","resolvedtokens","resolveExtendTokens","tokens","finalHtml","render","updatedTemplate","baseTemplate","override","buildTwigTemplateInstance","overrideTokens","resolveTokens","applyTemplateOverrides","acc","block","isInOverrides","findBlock","mergeTokens","resolvedTokens","t","subToken","replacement","xs","s","extendedComponentTokens","cloneDeep","extensionTokens","itemTokens","findNestedBlock","normalizeTokens","resolveToken","blockName","isIn","parsers","twig","options","register","componentConfiguration","componentRegistry","TemplateFactory","functional","extends","overrideRegistry","splice","build","skipTemplate","templatesResolved","resolveComponentTemplates","create","extendComp","buildedComp","convertedOverrides","convertOverrides","overrideComp","_isOverride","superRegistry","buildSuperRegistry","isNotEmptyObject","inheritedFrom","isAnOverride","methods","addSuperBehaviour","getComponentTemplate","getComponentRegistry","getOverrideRegistry","getComponentHelper","componentHelper","registerComponentHelper","helperFunction","markComponentTemplatesAsNotResolved","clear","reduceRight","previous","shift","methodName","methodFunction","methodOrComputed","ConfigMethodOrComputed","cmd","func","updateSuperRegistry","methodString","toString","test","overridePrefix","resolveSuperCallChain","$super","_initVirtualCallStack","superStack","_findInSuperRegister","superFuncObject","_virtualCallStack","result","bind","_inheritedFrom","_superRegistry","methodsOrComputed","extension","parentName","parentsParentName","extendsName","extendsNameString","findMethodInChain","parentBlock","resolvedParent","splitPath","resolveGetterSetterChain","obj","constructor","configurationResolveMethod","a","awaitedConfig","Promise","resolve","awaitedConfigResult","configResolveMethod","_clearComponentHelper","isSyncComponent","syncComponents","markComponentAsSync","add","Set","initComponent","asyncComponent","asyncOverrideComponent","all","c","resultConfig","awaitedOverrides","awaitedOverride","addEntityDefinition","entityDefinition","entityDefinitions","getEntityDefinition","getDefinitionRegistry","getRawEntityObject","getPropertyBlacklist","getRequiredProperties","definition","blocklist","requiredFields","required","property","getAssociatedProperties","properties","propName","getTranslatableProperties","translatable","schema","deep","propSchema","getRawPropertyValue","format","defineProperty","writable","enumerable","configurable","getMethod","setMethod","stateFactory","serviceAccessor","serviceName","Application","getContainer","list","$list","service","addServiceProvider","registerMiddleware","addServiceProviderMiddleware","registerDecorator","addServiceProviderDecorator","publicObject","privateObject","mixinName","mixin","mixinRegistry","getByName","getMixinRegistry","filterRegistry","filterName","filterFactoryMethod","noop","registerDirective","directive","directiveRegistry","getDirectiveByName","getDirectiveRegistry","getLocaleByName","localeName","localeRegistry","getLocaleRegistry","localeMessages","originalMessages","object","getBrowserLanguage","getBrowserLanguages","getLastKnownLocale","window","localStorage","getItem","localStorageKey","storeCurrentLocale","document","shortLocaleName","querySelector","setAttribute","setItem","shortLanguageCodes","messages","locale","lang","toLowerCase","matchedLanguage","language","languages","navigator","userLanguage","systemLanguage","getPathByCombination","combination","shortcutRegistry","getShortcutRegistry","addBootPromise","promiseResolve","pluginPromises","getBootPromises","apiServiceRegistry","apiServiceName","apiService","getServices","scalarTypes","jsonTypes","EntityDefinition","filterProperties","flags","primary_key","relation","isTranslatableField","propertyName","callback","getScalarTypes","getJsonTypes","entityDefinitionRegistry","remove","getTranslatedFields","getTranslatableFields","getAssociationFields","getRequiredFields","opts","validateOpts","initialize","initialized","helper","fn","entry","queue","q","mergedData","middlewareFunctionWrapper","resetHelper","ShopwareError","code","detail","_id","utils","createId","_code","_parameters","parameters","_status","_detail","_trace","FlatTree","sorting","defaultPosition","_registeredNodes","_defaultPosition","_sorting","_tree","elements","level","element","newParent","node","nodeIdentifier","target","DeviceHelper","listeners","addEventListener","resize","debounce","event","listenerObject","listener","scope","onResize","removeResizeListener","getUserAgent","userAgent","getViewportWidth","innerWidth","getViewportHeight","innerHeight","getDevicePixelRatio","devicePixelRatio","getScreenWidth","screen","width","getScreenHeight","height","getScreenOrientation","orientation","getPlatform","platform","getSystemKey","indexOf","castValueToNullIfNecessary","ChangesetGenerator","pkFields","getEntityName","getPrimaryKeyFields","pkData","fieldName","deletionQueue","changes","recursion","origin","getOrigin","draft","getDraft","forEachField","readOnly","write_protected","draftValue","originValue","isScalarField","extensions","isJsonField","isEqual","associationChanges","handleOneToMany","handleManyToMany","change","getPrimaryKeyData","originIds","getIds","nested","primary","local","reference","source","mapping","cascade_delete","referenceField","assignSetterMethod","view","setReactive","Entity","EntityFactory","toManyAssociations","getToManyAssociations","associatedProperty","createCollection","markAsNew","subRoute","Criteria","setLimit","setPage","EntityHydrator","entities","hydrateEntity","total","collection","row","cacheKey","attributeValue","getField","isJsonObjectField","isJsonListField","hydrateExtensions","isToManyAssociation","hydrateToMany","isToOneAssociation","nestedEntity","hydrateToOne","e","EntityClass","associationCriteria","getAssociationCriteria","nestedRaw","getIncluded","hasAssociation","getAssociation","apiResourcePath","substr","Repository","hydrator","changesetGenerator","entityFactory","errorResolver","Context","api","buildHeaders","hydrateSearchResult","setIds","search","useSync","saveWithSync","saveWithRest","generate","keepApiErrors","resetApiErrors","sendDeletions","sendChanges","isNew","operations","buildDeleteOperations","action","catch","errorResponse","error","pointer","startsWith","substring","handleWriteErrors","entityId","behavior","reject","promises","save","failOnError","getSyncChangeset","changeset","deletions","sendUpserts","changedField","success","getSyncErrors","current","segments","operation","handleDeleteError","getLimit","setTotalCountMode","searchIds","ids","getPage","iterateIds","syncResult","currentResult","versionName","patch","requests","deletion","compatibility","authToken","access","languageId","currencyId","inheritance","grouped","ErrorResolver","dispatch","writeErrors","reduceErrorsByWriteIndex","handleErrors","addSystemErrors","system","shopwareError","expression","denormalized","lastIndex","segment","systemErrors","writeIndex","resolveError","buildAssociationChangeset","resolveOneToOneFieldError","resolveJsonFieldError","getErrorPath","errorStore","addSystemError","associationName","associationChange","basePath","currentField","createPathToError","state","pop","store","currentStore","addApiError","removeApiError","deleteReactive","isEmpty","removeSystemError","FilterFactory","STRING_FILTER_INPUT","NUMBER_FILTER_INPUT","DATE_FILTER_INPUT","ASSOCIATION_FILTER_INPUT","BOOLEAN_FILTER_INPUT","PRICE_FILTER_INPUT","EXISTENCE_FILTER_INPUT","getFilterProperties","accessor","parts","first","returnProperty","localField","ErrorStore","ApplicationBootstrapper","container","_resolveViewInitialized","$container","containerName","factory","nameOrMiddleware","_addMiddleware","nameOrDecorator","decorator","_addDecorator","initializer","provider","apiContext","registerApiContext","appContext","registerAppContext","_private","ApiContextFactory","app","AppContextFactory","features","init","initState","registerConfig","initializeFeatureFlags","startBootProcess","root","viewAdapterInstance","isLoggedIn","bootFullApplication","logout","bootLogin","sessionStorage","initializeLoginInitializer","initDependencies","createApplicationRoot","createApplicationRootError","initContainer","initializeInitializers","loadPlugins","Plugin","router","getRouterInstance","environment","firstRunWizard","history","console","initError","services","digest","asyncInitializers","getAsyncInitializers","loginInitializer","serviceKey","isDevelopmentMode","process","fetch","plugins","bundles","injectAllPlugins","plugin","injectPlugin","bundleName","bundle","baseUrl","pluginName","entryFiles","stringUtils","string","camelCasePluginName","upperFirst","camelCase","URL","injectIframe","bundleVersion","version","iframeSrc","bundleType","allScripts","allStyles","js","src","injectJs","css","injectCss","scriptSrc","script","createElement","async","onload","onerror","body","appendChild","styleSrc","rel","href","head","permissions","Vue","observable","RepositoryFactory","createContext","Defaults","isDevMode","installationPath","getInstallationPath","apiPath","systemLanguageId","getAssetsPath","assetPath","fullPath","schemeAndHttpHost","createRouter","Router","View","moduleFactory","LoginService","allRoutes","instance","addRoutes","addModuleRoutes","createRouterInstance","viewModuleRoutes","convertRouteComponentToViewComponent","viewAllRoutes","mergedRoutes","registerModuleRoutesAsChildren","beforeRouterInterceptor","getViewComponent","_setModuleFavicon","setModuleFavicon","assetsPath","beforeEach","loggedIn","tokenHandler","Helper","RefreshTokenHelper","loginAllowlist","forceRoute","isRefreshing","privilege","Service","can","matched","resolveRoute","fireRefreshTokenRequest","moduleInfo","getModuleInfo","$module","navigationInfo","currentNavigationEntry","getNavigationInfo","$current","moduleRegistry","foundModule","parentModule","parentPath","core","moduleRootRoutes","moduleNormalRoutes","moduleRoute","getComponent","routeDestination","favicon","favRef","getElementById","faviconSrc","require","handleFactory","_features_","Bottle","strict","application","addFactory","AsyncComponentFactory","ComponentFactory","ModuleFactory","StateFactory","ServiceFactory","ClassesFactory","MixinFactory","DirectiveFactory","LocaleFactory","ShortcutFactory","PluginBootFactory","ApiServiceFactory","EntityDefinitionFactory","WorkerNotificationFactory","ShopwareClass","getTemplate","addDefinition","getDefinition","ExtensionApi","defaultLanguageIds","storefrontSalesChannelTypeId","productComparisonTypeId","apiSalesChannelTypeId","defaultSalutationId","HttpFactory","RouterFactory","ModuleFilterFactory","FlatTreeHelper","SanitizerHelper","ApiServices","ShopwareInstance","webpackContext","req","webpackContextResolve","__webpack_require__","o","LanguagePluginApiService","Data","SearchApiService","term","setTerm","queries","searchQuery","ImportExportApiService","profileId","expireDate","file","formData","FormData","append","logId","offset","fileId","accessToken","CustomerGroupRegistrationApiService","customerId","additionalRequest","customerIds","isUndefined","isPlainObject","isRegExp","isDate","isBoolean","isNumber","KnownIpsApiService","ips","objectMerge","objectCopy","objectGet","objectSet","objectPick","mergeWith","objectMergeWith","pick","deepCopyObject","copyObject","deepMergeObject","firstObject","secondObject","objValue","srcValue","concat","getObjectDiff","b","valueOf","getArrayChanges","objDiff","CheckoutStoreService","contextToken","ConfigApiService","NotificationsService","latestTimestamp","SalesChannelApiService","SeoUrlTemplateApiService","urlTemplate","MediaFolderApiService","targetId","UploadTask","uploadTag","fileName","running","UploadEvents","UPLOAD_ADDED","UPLOAD_FINISHED","UPLOAD_FAILED","UPLOAD_CANCELED","MediaApiService","uploads","$listeners","hasListeners","array","removeListener","addListener","tagListener","defaultListeners","hasDefaultListeners","uploadData","addUploads","uploadCollection","tasks","getListenerForTag","_createUploadEvent","upload","tag","affectedUploads","affectedListeners","totalUploads","successUploads","failureUploads","task","_startUpload","successAmount","failureAmount","totalAmount","cause","File","fileReader","readAsArrayBuffer","buffer","uploadMediaById","uploadMediaFromUrl","mimeType","mediaId","DocumentEvents","DOCUMENT_FAILED","DOCUMENT_FINISHED","DocumentApiService","$listener","orderId","documentTypeName","documentConfig","referencedDocumentId","referenced_document_id","static","docCreated","documentId","fileExtension","documentNumber","createDocumentEvent","orderDeepLink","responseType","documentDeepLink","download","NumberRangeApiService","typeName","preview","urlSuffix","pattern","start","MarketingService","phase","comingSoonStartDate","startDate","lastCallStartDate","endDate","storeBanner","background","color","image","content","textColor","headline","cta","category","text","dashboardBanner","leftImage","bgColor","hideInSmallViewports","srcset","linkColor","inlineActions","placeholder","execution","arguments","externalLink","mainAction","buttonVariant","bannerIsClickable","OrderDocumentApiService","AppCmsBlocksService","blocks","StoreContextService","currency","val","sign","decimalPlaces","additionalOptions","decimalOpts","minimumFractionDigits","maximumFractionDigits","style","systemCurrencyISOCode","toLocaleString","currentLocale","date","givenDate","Date","isNaN","lastKnownLang","userTimeZone","currentUser","timeZone","dateTimeFormatter","Intl","DateTimeFormat","year","month","day","hour","minute","dateWithUserTimezone","dateObj","localizedDate","toLocaleDateString","second","md5","MD5","hash","fileSize","bytes","denominator","units","Number","parseInt","String","i","toFixed","toISODate","useTime","isoDate","toISOString","getScrollbarHeight","HTMLElement","offsetHeight","clientHeight","getScrollbarWidth","offsetWidth","clientWidth","copyToClipboard","stringToCopy","tempTextArea","select","execCommand","removeChild","registerPromiseOnFileReader","abort","DOMException","splitFileNameAndExtension","completeFileName","fileParts","readFileAsArrayBuffer","inputFile","fReader","FileReader","readFileAsDataURL","readAsDataURL","readFileAsText","readAsText","getNameAndExtensionFromFile","fileHandle","getNameAndExtensionFromUrl","urlObject","ref","indexOfQueryIndicator","decodeURI","afterSort","firstItem","sortedElements","lastId","loop","leaf","nextItem","dom","domUtils","capitalizeString","kebabCase","snakeCase","isEmptyOrSpaces","isUrl","isValidIp","typesUtils","fileReaderUtils","sortUtils","flattenDeep","slice","uniqBy","chunk","intersectionBy","uuidV4","throttle","flow","flagConfig","flagName","OrderApiService","getVersionHeader","productId","quantity","dummyPrice","priceDefinition","taxRules","isCalculated","identifier","skipAutomaticPromotions","orderAddressId","customerAddressId","UserValidationApiService","email","username","OrderStateMachineApiService","actionName","mediaIds","orderTransactionId","orderDeliveryStateId","ScheduledTaskApiService","ExtensionSdkService","entityIdList","UpdateService","getBasicParams","pluginDeactivationStrategy","actionUrlPart","offsetParam","basicParams","trim","Boolean","ip","StateMachineApiService","stateFieldName","additionalQueryParams","query","makeQueryParams","SystemConfigApiService","domain","refreshTokenHelper","_isRefreshing","_subscribers","_errorSubscribers","_whitelist","errorCallback","refreshToken","newToken","onRefreshToken","finally","onRefreshTokenFailed","urls","_whitelists","getRefreshTokenHelper","SeoUrlApiService","seoUrl","routeName","FlowActionApiService","CalculatePriceApiService","taxId","price","CacheApiService","skip","PromotionSyncApiService","FirstRunWizardApiService","MessageQueueApiService","receiver","createHTTPClient","Axios","baseURL","interceptors","originalRequest","resource","whitelist","subscribe","getApplicationRoot","location","reload","$router","refreshTokenInterceptor","handleErrorStates","singleError","variant","message","globalErrorHandlingInterceptor","CancelToken","NODE_ENV","adapter","requestCacheAdapterInterceptor","createClient","isCancel","Cancel","viewRoot","$tc","resultItem","missingPrivilegeError","missingPrivileges","missingPrivilegesMessage","autoClose","growl","blockingEntities","usages","usageObject","times","count","timesSnippet","blockingEntitiesSnippet","frameworkLanguageNotFound","removeItem","actions","ExcludedSearchTermService","_getHeader","lineItemConstants","freeze","PRODUCT","CREDIT","CUSTOM","PROMOTION","priceTypes","ABSOLUTE","QUANTITY","CartStoreService","itemType","lineItemTypes","getLineItemTypes","getLineItemPriceTypes","lineItemKeys","isNewProductItem","isUnitPriceEdited","unitPrice","isTaxRateEdited","taxRate","isCustomItem","shouldPriceUpdated","mapLineItemTypeToPriceType","items","referencedId","stackable","removable","_isNew","getRouteForItem","getPayloadForItem","shippingCosts","InvalidActionButtonParameterError","AppActionButtonService","AppModulesService","StoreApiService","shopwareId","password","unauthenticated","onlyDownload","IntegrationApiService","user","SnippetApiService","translationKey","isCustom","localeFactory","allSnippets","fnName","UserApiService","MailApiService","recipientMail","recipient","mailTemplate","mailTemplateMedia","testMode","documentIds","templateData","contentHtml","translated","contentPlain","mailTemplateData","mailTemplateType","recipients","subject","senderMail","senderName","sendMailTemplate","RecommendationsApiService","UserConfigService","upsertData","CustomerValidationApiService","exception","UserRecoveryApiService","passwordConfirm"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["import ApiService from '../api.service';\n\nexport default class ProductStreamPreviewService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'productStreamPreviewService';\n    }\n\n    /**\n     * @param salesChannelId: String\n     * @param criteria: Criteria\n     * @param filter: Array\n     * @param additionalHeaders: Object\n     * @returns {*} - ApiService.handleResponse(response)\n     */\n    preview(salesChannelId, criteria, filter, additionalHeaders = {}) {\n        return this.httpClient.post(\n            `_admin/product-stream-preview/${salesChannelId}`,\n            { ...criteria, ...{ filter } },\n            {\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then(response => ApiService.handleResponse(response));\n    }\n}\n","import parseJsonApi from 'src/core/service/jsonapi-parser.service';\nimport { AxiosInstance, AxiosResponse } from 'axios';\nimport { LoginService } from './login.service';\n\nexport type BasicHeaders = {\n    Accept: string,\n    Authorization: string,\n    'Content-Type': string,\n    [key: string]: string,\n};\n\n/**\n * ApiService class which provides the common methods for our REST API\n * @class\n */\nclass ApiService {\n    client: AxiosInstance = {} as AxiosInstance;\n\n    loginService: LoginService;\n\n    endpoint = '';\n\n    type = 'application/vnd.api+json';\n\n    name = '';\n\n    constructor(\n        httpClient: AxiosInstance,\n        loginService: LoginService,\n        apiEndpoint: string,\n        contentType = 'application/vnd.api+json',\n    ) {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.apiEndpoint = apiEndpoint;\n        this.contentType = contentType;\n    }\n\n    /**\n     * Returns the URI to the API endpoint\n     */\n    getApiBasePath(id?: string|number, prefix = ''): string {\n        let url = '';\n\n        if (prefix?.length) {\n            url += `${prefix}/`;\n        }\n\n        if ((id && typeof id === 'number') || (typeof id === 'string' && id.length > 0)) {\n            return `${url}${this.apiEndpoint}/${id}`;\n        }\n\n        return `${url}${this.apiEndpoint}`;\n    }\n\n    /**\n     * Get the basic headers for a request.\n     */\n    getBasicHeaders(additionalHeaders = {}): BasicHeaders {\n        const basicHeaders = {\n            Accept: this.contentType,\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json',\n        };\n\n        return Object.assign({}, basicHeaders, additionalHeaders);\n    }\n\n    /**\n     * Basic response handling.\n     * Converts the JSON api data when the specific content type is set.\n     */\n    static handleResponse(response: AxiosResponse<unknown>): unknown {\n        if (response.data === null || response.data === undefined) {\n            return response;\n        }\n\n        let data = response.data;\n        const headers = response.headers as unknown;\n\n        if (typeof headers !== 'object' || headers === null || !headers.hasOwnProperty('content-type')) {\n            return data;\n        }\n\n        // @ts-expect-error\n        if (headers['content-type'] && headers['content-type'] === 'application/vnd.api+json') {\n            data = ApiService.parseJsonApiData(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Parses a JSON api data structure to a simplified object.\n     */\n    static parseJsonApiData(data: string|unknown): Record<string, unknown>|null {\n        // @ts-expect-error\n        return parseJsonApi(data);\n    }\n\n    static getVersionHeader(versionId: string): { 'sw-version-id': string } {\n        return { 'sw-version-id': versionId };\n    }\n\n    static makeQueryParams(paramDictionary = {} as { [key: string]: string|number}): string {\n        const params = Object\n            .keys(paramDictionary)\n            .filter(key => typeof paramDictionary[key] === 'string')\n            .map(key => `${key}=${paramDictionary[key]}`);\n\n        if (!params.length) {\n            return '';\n        }\n\n        return `?${params.join('&')}`;\n    }\n\n    /**\n     * Getter for the API end point\n     */\n    get apiEndpoint(): string {\n        return this.endpoint;\n    }\n\n    /**\n     * Setter for the API end point\n     */\n    set apiEndpoint(endpoint: string) {\n        this.endpoint = endpoint;\n    }\n\n    /**\n     * Getter for the http client\n     */\n    get httpClient(): AxiosInstance {\n        return this.client;\n    }\n\n    /**\n     * Setter for the http client\n     */\n    set httpClient(client) {\n        this.client = client;\n    }\n\n    get contentType(): string {\n        return this.type;\n    }\n\n    set contentType(contentType) {\n        this.type = contentType;\n    }\n}\n\nexport default ApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"sync\"\n * @class\n * @extends ApiService\n */\nclass SyncApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sync') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'syncService';\n    }\n\n    sync(payload, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_action/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SyncApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"snippet-set\"\n * @class\n * @extends ApiService\n */\nclass SnippetSetApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'snippet-set') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'snippetSetService';\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getCustomList(page = 1, limit = 25, filters = {}, sort = {}) {\n        const headers = this.getBasicHeaders();\n\n        const defaultSort = {\n            sortBy: 'id',\n            sortDirection: 'ASC',\n        };\n\n        sort = { ...defaultSort, ...sort };\n\n        return this.httpClient\n            .post(\n                `/_action/${this.getApiBasePath()}`,\n                { page, limit, filters, sort },\n                { headers },\n            )\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Call the API to get all available BaseFiles\n     *\n     * @returns {Promise<T>}\n     */\n    getBaseFiles() {\n        const params = {};\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/baseFile`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getAuthors() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/author`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SnippetSetApiService;\n","import ApiService from '../api.service';\n\n/**\n * @deprecated tag:v6.5.0 - Will be removed in v6.5.0. Please use `sw-flow` - Flow builder instead.\n *\n * @class\n * @extends ApiService\n */\nclass BusinessEventsApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'business-events') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'businessEventService';\n    }\n\n    /**\n     * Get all business events\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getBusinessEvents(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_info/events.json', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default BusinessEventsApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"product-export\"\n * @class\n * @extends ApiService\n */\nclass ProductExportApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'product-export') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'productExportService';\n    }\n\n    validateProductExportTemplate(productExport) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/validate`;\n\n        return this.httpClient.post(\n            apiRoute,\n            productExport,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    previewProductExport(productExport) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/preview`;\n\n        return this.httpClient.post(\n            apiRoute,\n            productExport,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/access-key/product-export', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default ProductExportApiService;\n","class AclApiService {\n    constructor(httpClient, loginService) {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.name = 'aclApiService';\n    }\n\n    additionalPrivileges() {\n        const headers = this.getHeaders();\n        return this.httpClient.get('/_action/acl/additional_privileges', { headers }).then((response) => {\n            return Object.values(response.data);\n        });\n    }\n\n    allPrivileges() {\n        const headers = this.getHeaders();\n        return this.httpClient.get('/_action/index', {}, { headers }).then((response) => {\n            return Object.values(response.data);\n        });\n    }\n\n    getHeaders() {\n        return {\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json',\n        };\n    }\n}\n\nexport default AclApiService;\n","// this list contains all URLs which should be cached\nconst allowUrlList = [\n    '/search/user-config',\n    '/search/product',\n    '/search/product-review',\n    '/search/property-group',\n    '/search/newsletter-recipient',\n    '/search/salutation',\n    '/search/product-search-config',\n    '/search/product-search-config-field',\n    '/app-system/action-button/product/list',\n    'app-system/action-button/product/list',\n    '/search/currency',\n    '/search/order',\n    '/search/customer',\n    '/_info/me',\n];\n\n/**\n * When one of these urls get requested\n * the whole cache gets flushed\n * @type {string[]}\n */\nconst flushCacheUrls = [\n    '/user-config',\n    'user-config',\n    '/_action/sync',\n    '_action/sync',\n    '/product-visibility',\n    'product-visibility',\n];\n\n// the timeout at which the response in the cache gets cleared\nconst requestCacheTimeout = 1500;\n\n/**\n * This cacheAdapterFactory creates an adapter for the axios\n * library. The created adapter do short time caching for\n * identical requests.\n *\n * @param originalAdapter\n * @param requestCaches\n * @returns {(function(*=): (*))|*}\n */\nexport default function cacheAdapterFactory(originalAdapter, requestCaches = {}) {\n    return (config) => {\n        const requestChangesData = ['delete', 'patch'].includes(config?.method);\n        const shouldFlushCache = flushCacheUrls.includes(config?.url);\n\n        // remove all caches when something gets changed\n        if (requestChangesData || shouldFlushCache) {\n            Object.keys(requestCaches).forEach((key) => {\n                delete requestCaches[key];\n            });\n\n            return originalAdapter(config);\n        }\n\n        // ignore requests which are not in the allowedUrlList\n        const isNotInAllowList = !allowUrlList.includes(config?.url);\n        if (isNotInAllowList) {\n            return originalAdapter(config);\n        }\n\n        // use the stringified configuration as hashValue\n        const requestHash = JSON.stringify(config);\n\n        // check if identical requests already exists\n        const identicalRequest = requestCaches[requestHash];\n        if (identicalRequest) {\n            Shopware.Utils.debug.warn(\n                'http.factory',\n                'Duplicated requests happening in short amount of time: ',\n                config,\n                'This duplicated request should be fixed.',\n            );\n\n            // when identical requests exists then return the previous value as a clone\n            return cloneResponse(identicalRequest);\n        }\n\n        // when no identical request exists then\n        // create a new one with the original adapter\n        requestCaches[requestHash] = originalAdapter(config);\n\n        // remove the request cache entry after 1.5 seconds\n        setTimeout(() => {\n            if (requestCaches[requestHash]) {\n                delete requestCaches[requestHash];\n            }\n        }, requestCacheTimeout);\n\n        // return a clone of the created request from the request cache\n        return cloneResponse(requestCaches[requestHash]);\n    };\n}\n\n/**\n * This function returns a clone of the original axios response object.\n * This guarantees that the response can be mutated and following requests are returning the\n * original, initial response values.\n * @param request\n * @returns {Promise<{finishedRequest: *, response: any}>}\n */\nfunction cloneResponse(request) {\n    return request.then((response) => {\n        // response is in JSON format therefore JSON stringify is safe\n        return JSON.parse(JSON.stringify(response));\n    });\n}\n","import ApiService from '../api.service';\n\nexport default class AppUrlChangeService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'userInputSanitizeService';\n    }\n\n    /**\n     *\n     * @param {{ html: String, [field: String] }} param0\n     * @returns {*} - ApiService.handleResponse(response)\n     */\n    sanitizeInput({ html, field }) {\n        return this.httpClient.post(\n            '_admin/sanitize-html',\n            {\n                html,\n                field: field ?? null,\n            }, {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(response => ApiService.handleResponse(response));\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * @class\n * @extends ApiService\n */\nclass UserActivityApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'increment/user_activity') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userActivityApiService';\n    }\n\n    /**\n     * @param payload\n     * @param additionalParams\n     * @param additionalHeaders\n     * @returns {Promise<T>}\n     */\n    increment(payload, additionalParams = {}, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/increment/user_activity', payload, {\n                additionalParams,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @param additionalParams\n     * @param additionalHeaders\n     * @returns {Promise<T>}\n     */\n    getIncrement(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/increment/user_activity', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserActivityApiService;\n","/**\n * @module core/helper/jsonapi-parser\n */\nimport types from 'src/core/service/utils/types.utils';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * Converts a JSONApi compliant data structure into a nested object structure which suits the data entry management\n * of the application much better.\n *\n * @example\n * import jsonApiParserService from 'src/core/service/jsonapi-parser.service';\n *\n * httpClient.get('/foo').then((response) => {\n *     const parsedResponse = jsonApiParserService(response.data);\n * });\n *\n * @param {String|Object} data Data structure\n * @returns {Object|null} Parsed data structure or `null` if the `data` parameter isn't an object or string.\n * @method jsonApiParserService\n * @memberOf module:core/helper/jsonapi-parser\n */\nexport default function jsonApiParserService(data) {\n    const json = convertRawDataToJson(data);\n\n    if (!json) {\n        return null;\n    }\n\n    // Provided data was parsed before or doesn't follows the JSONApi spec, so we're returning data structure untouched\n    if (json.parsed === true || !areTopMemberPropertiesPresent(json)) {\n        return json;\n    }\n\n    const convertedStructure = parseDataStructure(json);\n\n    // Mark the converted structure as \"parsed\", so we're not parsing it again\n    convertedStructure.parsed = true;\n\n    return convertedStructure;\n}\n\n/**\n * Tries to convert the raw data input into a JSON format.\n *\n * @param {String|Object} [data={}] Data structure to parse\n * @returns {Boolean|Object} Converted data structure or false when the data type wasn't an object or string.\n */\nfunction convertRawDataToJson(data) {\n    let jsonData;\n    if (types.isString(data)) {\n        try {\n            jsonData = JSON.parse(data);\n        } catch (err) {\n            return false;\n        }\n    } else if (types.isObject(data) && !types.isArray(data)) {\n        jsonData = data;\n    } else {\n        return false;\n    }\n\n    return jsonData;\n}\n\n/**\n * Basic check if we're dealing with a data structure which follows the JSONApi spec.\n * @param {Object} json\n * @returns {Boolean}\n */\nfunction areTopMemberPropertiesPresent(json) {\n    return (json.data !== undefined\n        || json.errors !== undefined\n        || json.links !== undefined\n        || json.meta !== undefined);\n}\n\n/**\n * Iterates over the `included` property of the JSONApi spec and creates a new map with unique identifiers.\n *\n * @param {Array} included\n * @returns {Map<any, any>}\n */\nfunction createIncludeMap(included) {\n    const includedMap = new Map();\n\n    if (!included || !included.length) {\n        return includedMap;\n    }\n\n    included.forEach((item) => {\n        const key = `${item.type}-${item.id}`;\n        includedMap.set(key, item);\n    });\n\n    return includedMap;\n}\n\n/**\n * Parses the data structure and converts it from JSONApi spec to a nested object structure to work with our data\n * management and handling.\n *\n * @param {Object} json\n * @returns {Object} parsed data structure\n */\nfunction parseDataStructure(json) {\n    const data = {\n        links: null,\n        errors: null,\n        data: null,\n        associations: null,\n        aggregations: null,\n    };\n\n    // Errors will be returned right away, we don't need to convert anything\n    if (json.errors) {\n        data.errors = json.errors;\n        return data;\n    }\n\n    const includedMap = createIncludeMap(json.included);\n\n    if (types.isArray(json.data)) {\n        data.data = json.data.map((record) => {\n            const dataItem = createItem(record, includedMap);\n\n            if (hasOwnProperty(dataItem, 'associationLinks')) {\n                data.associations = { ...data.associations, ...dataItem.associationLinks };\n                delete dataItem.associationLinks;\n            }\n\n            return dataItem;\n        });\n    } else if (types.isObject(json.data)) {\n        const dataItem = createItem(json.data, includedMap);\n\n        if (Object.prototype.hasOwnProperty.call(dataItem, 'associationLinks')) {\n            data.associations = { ...data.associations, ...dataItem.associationLinks };\n            delete dataItem.associationLinks;\n        }\n        data.data = dataItem;\n    } else {\n        data.data = null;\n    }\n\n    if (json.meta && Object.keys(json.meta).length) {\n        data.meta = renameObjectPropertiesToCamelCase(json.meta);\n    }\n\n    if (json.links && Object.keys(json.links).length) {\n        data.links = json.links;\n    }\n\n    if (json.aggregations && Object.keys(json.aggregations).length) {\n        data.aggregations = json.aggregations;\n    }\n\n    return data;\n}\n\n/**\n * Creates a new object item for the nested object structure.\n *\n * @param {Object} record\n * @param {Map} includedMap\n * @returns {{id, type, links: {}, meta: {}}}\n */\nfunction createItem(record, includedMap) {\n    let item = {\n        id: record.id,\n        type: record.type,\n        links: record.links || {},\n        meta: record.meta || {},\n    };\n\n    if (record.attributes && Object.keys(record.attributes).length > 0) {\n        const attributes = renameObjectPropertiesToCamelCase(record.attributes);\n        item = { ...item, ...attributes };\n    }\n\n    if (record.relationships) {\n        const relations = createRelationships(record.relationships, includedMap);\n        item = { ...item, ...relations.mappedRelations, ...{ associationLinks: relations.associationLinks } };\n    }\n\n    return item;\n}\n\n/**\n * Renames the attributes which can be kebab-case to camel-case.\n *\n * @param {Object} attributesCollection\n * @returns {Object}\n */\nfunction renameObjectPropertiesToCamelCase(attributesCollection) {\n    const attributes = {};\n    Object.keys(attributesCollection).forEach((attributeKey) => {\n        const attribute = attributesCollection[attributeKey];\n        const key = attributeKey.replace(/-([a-z])/g, (match, item) => {\n            return item.toUpperCase();\n        });\n        attributes[key] = attribute;\n    });\n\n    return attributes;\n}\n\n/**\n * Maps the included entries and creates new items out of it including dependency resolving\n * @param {Object} item\n * @param {Map} includedMap\n * @returns {Object}\n */\nfunction mapIncluded(item, includedMap) {\n    const includedKey = `${item.type}-${item.id}`;\n    if (!includedMap.has(includedKey)) {\n        return item;\n    }\n\n    const included = includedMap.get(includedKey);\n    return createItem(included, includedMap);\n}\n\n/**\n * Resolve the dependencies between entries in `includedMap` and the relations of the item.\n *\n * @param {Object} relationships\n * @param {Map} includedMap\n * @returns {Object}\n */\nfunction createRelationships(relationships, includedMap) {\n    const mappedRelations = {};\n    const associationLinks = {};\n\n    Object.keys(relationships).forEach((prop) => {\n        const relationship = relationships[prop];\n\n        if (relationship.links && Object.keys(relationship.links).length) {\n            associationLinks[prop] = relationship.links.related;\n        }\n\n        // We don't have any data, don't continue with the iteration\n        if (!relationship.data) {\n            return;\n        }\n\n        const data = relationship.data;\n\n        if (types.isArray(data)) {\n            mappedRelations[prop] = data.map((item) => mapIncluded(item, includedMap));\n        } else if (types.isObject(data)) {\n            mappedRelations[prop] = mapIncluded(data, includedMap);\n        } else {\n            mappedRelations[prop] = null;\n        }\n    });\n\n    return { mappedRelations: mappedRelations, associationLinks: associationLinks };\n}\n","import ApiService from '../api.service';\n\nexport default class AppUrlChangeService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appUrlChangeService';\n    }\n\n    /**\n     * @returns {Promise<Array<{key: string, description: string}>>}\n     */\n    fetchResolverStrategies() {\n        return this.httpClient.get(\n            'app-system/app-url-change/strategies',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return Object.entries(data).map(([key, description]) => {\n                return { name: key, description };\n            });\n        });\n    }\n\n    /**\n     * @param {{name: string}} strategy\n     * @returns {*}\n     */\n    resolveUrlChange({ name }) {\n        return this.httpClient\n            .post(\n                'app-system/app-url-change/resolve',\n                { strategy: name },\n                {\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n\n    /**\n     * @returns {Promise<{newUrl: string, oldUrl: string} | null>}\n     */\n    getUrlDiff() {\n        return this.httpClient.get(\n            'app-system/app-url-change/url-difference',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((resp) => {\n            if (resp.status === 204) {\n                return null;\n            }\n            return resp.data;\n        });\n    }\n}\n","import EntityCollection from '@shopware-ag/admin-extension-sdk/es/data/_internals/EntityCollection';\n\nexport default EntityCollection;\n","import domPurify from 'dompurify';\n\n/**\n * @description Contains all valid middleware names\n * @type {Array<String>}\n */\nconst middlewareNames = [\n    'beforeSanitizeElements',\n    'uponSanitizeElement',\n    'afterSanitizeElements',\n    'beforeSanitizeAttributes',\n    'uponSanitizeAttribute',\n    'afterSanitizeAttributes',\n    'beforeSanitizeShadowDOM',\n    'uponSanitizeShadowNode',\n    'afterSanitizeShadowDOM',\n];\n\nexport default class Sanitizer {\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    /**\n     * Sets the domPurify config globally until {@link Sanitizer#clearConfig} will get called.\n     * See <https://github.com/cure53/DOMPurify/tree/master/demos#what-is-this> for all configuration options.\n     *\n     * @static\n     * @param {Object} config\n     * @return {void}\n     */\n    static setConfig(config) {\n        return domPurify.setConfig(config);\n    }\n\n    /**\n     * Clears all globally set configuration values.\n     *\n     * @static\n     * @return {void}\n     */\n    static clearConfig() {\n        return domPurify.clearConfig();\n    }\n\n    /**\n     * Adds a middleware to the sanitizer to allow modifying content.\n     *\n     * @static\n     * @param {String} middlewareName\n     * @param {Function} [middlewareFn=() => {}]\n     * @return {boolean}\n     */\n    static addMiddleware(middlewareName, middlewareFn = () => {}) {\n        if (!middlewareNames.includes(middlewareName)) {\n            Shopware.Utils.debug.warn(\n                'Sanitizer',\n                `No middleware found for name \"${middlewareName}\", \n                the following are available: ${middlewareNames.join(', ')}`,\n            );\n            return false;\n        }\n\n        domPurify.addHook(middlewareName, middlewareFn);\n        return true;\n    }\n\n    /**\n     * Removes a registered middleware using the provided name.\n     *\n     * @static\n     * @param {String}middlewareName\n     * @return {boolean}\n     */\n    static removeMiddleware(middlewareName) {\n        if (!middlewareNames.includes(middlewareName)) {\n            Shopware.Utils.debug.warn(\n                'Sanitizer',\n                `No middleware found for name \"${middlewareName}\", \n                the following are available: ${middlewareNames.join(', ')}`,\n            );\n            return false;\n        }\n\n        domPurify.removeHooks(middlewareName);\n        return true;\n    }\n\n    /**\n     * Sanitizes a malformed HTML string and suspicious strings\n     *\n     * @param {String} dirtyHtml\n     * @param {Object} [config={}]\n     * @return {String}\n     */\n    static sanitize(dirtyHtml, config = {}) {\n        return domPurify.sanitize(dirtyHtml, config);\n    }\n}\n","export default class MiddlewareHelper {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this._stack = [];\n    }\n\n    /**\n     * Returns the stack of registered middleware\n     *\n     * @returns {Array}\n     */\n    get stack() {\n        return this._stack;\n    }\n\n    /**\n     * Registers a new middleware to the stack\n     *\n     * @param {Function} middleware\n     * @throws Will throw an error if the argument is not a function\n     * @return {MiddlewareHelper}\n     */\n    use(middleware) {\n        if (typeof middleware !== 'function') {\n            throw new Error('Middleware must be a function.');\n        }\n        this._stack.push(middleware);\n        return this;\n    }\n\n    /**\n     * Runs all registered middleware from the stack\n     *\n     * @param {*} args\n     */\n    go(...args) {\n        // @see NEXT-15358 change _recursive_ to iterative stack processing\n        // keeping function signature to stay compatible to existing code\n        this.stack.forEach(frame => frame(() => {}, ...args));\n    }\n}\n","/**\n * @module core/factory/module\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport { hasOwnProperty, merge } from 'src/core/service/utils/object.utils';\nimport types from 'src/core/service/utils/types.utils';\nimport MiddlewareHelper from 'src/core/helper/middleware.helper';\nimport type { Route, RouteConfig } from 'vue-router';\nimport type { ComponentConfig } from './component.factory';\n\nexport default {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry,\n    getModuleByEntityName,\n    getModuleSnippets,\n    getModuleByKey,\n};\n\nexport type ModuleTypes = 'plugin' | 'core';\ntype ModuleRoutes = Map<string, RouteConfig>\n\ninterface Navigation {\n    moduleType: ModuleTypes,\n    parent?: string,\n    id: string,\n    path?: string,\n    link?: string,\n    label?: string,\n    position?: number,\n}\n\ninterface SettingsItem {\n    group: 'shop' | 'system' | 'plugin',\n    to: string,\n    icon?: string,\n    iconComponent: unknown,\n    privilege?: string,\n    id?: string,\n    name?: string,\n    label?: string,\n}\n\ninterface ModuleManifest {\n    flag: string,\n    type: ModuleTypes,\n    routeMiddleware: (next: () => void, currentRoute: Route) => void,\n    routes: {\n        [key: string]: RouteConfig\n    },\n    routePrefixName: string,\n    routePrefixPath: string,\n    coreRoute?: boolean,\n    navigation?: Navigation[],\n    settingsItem?: SettingsItem[] | SettingsItem,\n    extensionEntryRoute?: {\n        extensionName: string,\n        route: string,\n    },\n    entity?: string,\n    entityDisplayProperty?: string,\n    snippets?: {\n        [lang: string]: unknown\n    },\n    name: string,\n    title: string\n}\n\ninterface ModuleDefinition {\n    manifest: ModuleManifest,\n    navigation?: Navigation[],\n    routes: ModuleRoutes,\n    type: ModuleTypes\n}\n\n/**\n * Registry for modules\n * @type {Map<String, Object>}\n */\nconst modules: Map<string, ModuleDefinition> = new Map();\n\nconst middlewareHelper = new MiddlewareHelper();\n\n/**\n * Returns the registry of all modules mounted in the application.\n */\nfunction getModuleRegistry(): Map<string, ModuleDefinition> {\n    modules.forEach((value, key) => {\n        if (hasOwnProperty(value.manifest, 'flag')\n            && !Shopware.Feature.isActive(value.manifest.flag)\n        ) {\n            modules.delete(key);\n        }\n    });\n\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n */\nfunction registerModule(moduleId: string, module: ModuleManifest): false | ModuleDefinition {\n    const type = module.type || 'plugin';\n    let moduleRoutes: ModuleRoutes = new Map();\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        warn(\n            'ModuleFactory',\n            'Module has no unique identifier \"id\". Abort registration.',\n            module,\n        );\n        return false;\n    }\n\n    if (modules.has(moduleId)) {\n        warn(\n            'ModuleFactory',\n            `A module with the identifier \"${moduleId}\" is registered already. Abort registration.`,\n            modules.get(moduleId),\n        );\n\n        return false;\n    }\n\n    const splitModuleId = moduleId.split('-');\n\n    if (splitModuleId.length < 2) {\n        warn(\n            'ModuleFactory',\n            'Module identifier does not match the necessary format \"[namespace]-[name]\":',\n            moduleId,\n            'Abort registration.',\n        );\n        return false;\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it isn't accessible in the application.\n    if (!hasOwnProperty(module, 'routes') && !(module.routeMiddleware)) {\n        warn(\n            'ModuleFactory',\n            `Module \"${moduleId}\" has no configured routes or a routeMiddleware.`,\n            'The module will not be accessible in the administration UI.',\n            'Abort registration.',\n            module,\n        );\n        return false;\n    }\n\n    // Sanitize the modules routes\n    if (hasOwnProperty(module, 'routes')) {\n        Object.keys(module.routes).forEach((routeKey) => {\n            let route = module.routes[routeKey];\n\n            // Check if custom prefix name exists\n            const routePrefixName = module.routePrefixName ? module.routePrefixName : splitModuleId.join('.');\n\n            // Rewrite name\n            route.name = `${routePrefixName}.${routeKey}`;\n\n            // Check if custom prefix path exists\n            const routePrefixPath = module.routePrefixPath ? module.routePrefixPath : splitModuleId.join('/');\n\n            // Core routes don't need to be nested\n            if (!route.coreRoute) {\n                // Rewrite path\n                route.path = `/${routePrefixPath}/${route.path}`;\n            }\n\n\n            // Set the type of the route e.g. \"core\" or \"plugin\"\n            route.type = type;\n\n            // Generate the component list based on a route\n            route = createRouteComponentList(route, moduleId, module);\n\n            if (!route) {\n                return;\n            }\n\n            // Support for children routes\n            const childrenRoutes = route.children ?? {};\n            if (hasOwnProperty(route, 'children') && Object.keys(childrenRoutes).length) {\n                route = iterateChildRoutes(route);\n\n                moduleRoutes = registerChildRoutes(route, moduleRoutes);\n            }\n\n            // Alias support\n            if (\n                route.alias\n                && typeof route.alias === 'string'\n                && route.alias.length > 0\n                && (!route.coreRoute)\n            ) {\n                route.alias = `/${splitModuleId.join('/')}/${route.alias}`;\n            }\n\n            route.isChildren = false;\n            route.routeKey = routeKey;\n\n            moduleRoutes.set(route.name ?? '', route);\n        });\n    }\n\n    // We only register the module if it either has one valid route or uses the router middleware\n    if (module.routeMiddleware && types.isFunction(module.routeMiddleware)) {\n        middlewareHelper.use(module.routeMiddleware);\n    } else if (moduleRoutes.size === 0) {\n        warn(\n            'ModuleFactory',\n            `The module \"${moduleId}\" was not registered cause it hasn't a valid route definition`,\n            'Abort registration.',\n            module.routes,\n        );\n        return false;\n    }\n\n    const moduleDefinition: ModuleDefinition = {\n        routes: moduleRoutes,\n        manifest: module,\n        type,\n    };\n\n    // Add the navigation of the module to the module definition. We'll create a menu entry later on\n    if (hasOwnProperty(module, 'navigation') && module.navigation) {\n        if (!types.isArray(module.navigation)) {\n            warn(\n                'ModuleFactory',\n                'The route definition has to be an array.',\n                module.navigation,\n            );\n            return false;\n        }\n\n        module.navigation = module.navigation.filter((navigationEntry) => {\n            navigationEntry.moduleType = module.type;\n\n            if (module.type === 'plugin' && !navigationEntry.parent) {\n                warn(\n                    'ModuleFactory',\n                    'Navigation entries from plugins are not allowed on the first level.',\n                    'Set a property \"parent\" to register your navigation entry',\n                );\n                return false;\n            }\n\n            if (!navigationEntry.id && !navigationEntry.path && !navigationEntry.parent && !navigationEntry.link) {\n                warn(\n                    'ModuleFactory',\n                    'The navigation entry does not contains the necessary properties',\n                    'Abort registration of the navigation entry',\n                    navigationEntry,\n                );\n                return false;\n            }\n\n            if (!navigationEntry.label || !navigationEntry.label.length) {\n                warn(\n                    'ModuleFactory',\n                    'The navigation entry needs a property called \"label\"',\n                );\n                return false;\n            }\n\n            if (module.type === 'plugin') {\n                if (navigationEntry.position) {\n                    navigationEntry.position += 1000;\n                } else {\n                    navigationEntry.position = 1000;\n                }\n            }\n\n            return true;\n        });\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    if (hasOwnProperty(module, 'settingsItem') && module.settingsItem) {\n        addSettingsItemsToStore(moduleId, module);\n    }\n\n    if (hasOwnProperty(module, 'extensionEntryRoute') && module.extensionEntryRoute) {\n        addEntryRouteToExtensionRouteStore(module.extensionEntryRoute);\n    }\n\n    modules.set(moduleId, moduleDefinition);\n\n    return moduleDefinition;\n}\n\n/**\n * Registers the route children in the module routes map recursively.\n */\nfunction registerChildRoutes(routeDefinition: RouteConfig, moduleRoutes: ModuleRoutes): ModuleRoutes {\n    Object.values(routeDefinition.children ?? {}).map((child) => {\n        if (hasOwnProperty(child, 'children') && Object.keys(child.children ?? {}).length) {\n            moduleRoutes = registerChildRoutes(child, moduleRoutes);\n        }\n        moduleRoutes.set(child.name ?? '', child);\n        return child;\n    });\n\n    return moduleRoutes;\n}\n\n/**\n * Recursively iterates over the route children definitions and converts the format to the vue-router route definition.\n */\nfunction iterateChildRoutes(routeDefinition: RouteConfig): RouteConfig {\n    const routeDefinitionChildren = routeDefinition.children;\n\n    if (!routeDefinitionChildren || routeDefinitionChildren === undefined) {\n        return routeDefinition;\n    }\n\n    routeDefinition.children = Object.entries(routeDefinitionChildren).map(([key, child]) => {\n        if (child.path && child.path.length === 0) {\n            child.path = '';\n        } else {\n            child.path = `${routeDefinition.path}/${child.path}`;\n        }\n\n        child.name = `${routeDefinition.name ?? ''}.${key}`;\n        child.isChildren = true;\n\n        if (hasOwnProperty(child, 'children') && Object.keys(child.children ?? {}).length) {\n            child = iterateChildRoutes(child);\n        }\n\n        return child;\n    });\n\n    return routeDefinition;\n}\n\n/**\n * Generates the route component list e.g. adds supports for multiple components per route as well as validating\n * the developer input.\n */\nfunction createRouteComponentList(route: RouteConfig, moduleId: string, module: ModuleManifest): RouteConfig {\n    if (hasOwnProperty(module, 'flag')) {\n        route.flag = module.flag;\n    }\n\n    // Remove the component cause we remapped it to the components object of the route object\n    if (route.component) {\n        route.components = {\n            default: route.component,\n        };\n        delete route.component;\n    }\n\n    const componentList: { [componentKey: string]: ComponentConfig } = {};\n    const routeComponents = route.components ?? {};\n    Object.keys(routeComponents).forEach((componentKey) => {\n        const component = routeComponents[componentKey];\n\n        // Don't register a component without a name\n        if (!component) {\n            warn(\n                'ModuleFactory',\n                `The route definition of module \"${moduleId}\" is not valid.\n                    A route needs an assigned component name.`,\n            );\n            return;\n        }\n\n        // @ts-expect-error\n        componentList[componentKey] = component;\n    });\n\n    // @ts-expect-error\n    route.components = componentList;\n\n    return route;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n */\nfunction getModuleRoutes(): RouteConfig[] {\n    const moduleRoutes: RouteConfig[] = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            if (hasOwnProperty(route, 'flag') && !Shopware.Feature.isActive(route.flag)) {\n                return;\n            }\n\n            if (route.isChildren) {\n                return;\n            }\n            middlewareHelper.go(route);\n            moduleRoutes.push(route);\n        });\n    });\n\n    return moduleRoutes;\n}\n\n/**\n * Returns the first found module with the given entity name\n */\nfunction getModuleByEntityName(entityName: string): ModuleDefinition | undefined {\n    return Array.from(modules.values()).find((value) => {\n        return entityName === value.manifest.entity;\n    });\n}\n\n/**\n * Returns a list of all module specific snippets\n */\nfunction getModuleSnippets(): { [lang:string]: unknown } {\n    return Array.from(modules.values()).reduce<{ [lang:string] : unknown }>((accumulator, module) => {\n        const manifest = module.manifest;\n\n        if (!hasOwnProperty(manifest, 'snippets')) {\n            return accumulator;\n        }\n\n        const localeKey = Object.keys(manifest.snippets ?? {});\n        if (!localeKey.length) {\n            return accumulator;\n        }\n\n        localeKey.forEach((key) => {\n            if (!hasOwnProperty(accumulator, key)) {\n                accumulator[key] = {};\n            }\n            if (manifest.snippets) {\n                const snippets = manifest.snippets[key];\n                accumulator[key] = merge(accumulator[key], snippets);\n            }\n        });\n\n        return accumulator;\n    }, {});\n}\n\n/**\n * Adds a module to the settingsItems Store\n */\nfunction addSettingsItemsToStore(moduleId: string, module: ModuleManifest): void {\n    if (hasOwnProperty(module, 'flag') && !Shopware.Feature.isActive(module.flag)) {\n        return;\n    }\n\n    if (!module.settingsItem) {\n        return;\n    }\n\n    if (!Array.isArray(module.settingsItem)) {\n        module.settingsItem = [module.settingsItem];\n    }\n\n    module.settingsItem.forEach((settingsItem) => {\n        if (settingsItem.group\n            && settingsItem.to\n            && (settingsItem.icon || settingsItem.iconComponent)\n        ) {\n            if (!hasOwnProperty(settingsItem, 'id') || !settingsItem.id) {\n                settingsItem.id = moduleId;\n            }\n\n            if (!hasOwnProperty(settingsItem, 'name') || !settingsItem.name) {\n                settingsItem.name = module.name;\n            }\n\n            if (!hasOwnProperty(settingsItem, 'label') || !settingsItem.label) {\n                settingsItem.label = module.title;\n            }\n\n            Shopware.State.commit('settingsItems/addItem', settingsItem);\n        } else {\n            warn(\n                'ModuleFactory',\n                'The settingsItem entry does not contain the necessary properties',\n                'Abort registration of settingsItem entry',\n                settingsItem,\n            );\n        }\n    });\n}\n\nfunction addEntryRouteToExtensionRouteStore(config: { extensionName: string, route: string }):void {\n    if (config.extensionName === 'string') {\n        warn(\n            'ModuleFactory',\n            'extensionEntryRoute.extensionName needs to be an string',\n        );\n\n        return;\n    }\n\n    if (config.route === 'string') {\n        warn(\n            'ModuleFactory',\n            'extensionEntryRoute.route needs to be an string',\n        );\n\n        return;\n    }\n\n    Shopware.State.commit('extensionEntryRoutes/addItem', config);\n}\n\n/**\n * Returns the first found module with the given key-value\n */\nfunction getModuleByKey(key: string, value: string): ModuleDefinition | undefined {\n    return Array.from(modules.values()).find((module) => {\n        return value === module.manifest[key as keyof ModuleManifest];\n    });\n}\n","// eslint-disable\n/**\n * @module core/factory/async-template\n * @private\n */\nimport Twig from 'twig';\nimport { cloneDeep } from 'src/core/service/utils/object.utils';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    resolveTemplates,\n    clearTwigCache,\n    getTwigCache,\n    disableTwigCache,\n    getTemplateRegistry,\n    getNormalizedTemplateRegistry,\n    getTemplateOverrides,\n};\n\n/**\n * Internal Twig.Templates method\n * @param {null}\n */\nlet TwigTemplates = null;\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend(TwigCore => {\n    /**\n     * Remove tokens 2 (output_whitespace_pre), 3 (output_whitespace_post), 4 (output_whitespace_both) and 8 (output).\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {Array<any>}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10],\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent,\n            };\n        },\n    });\n\n    /** Make the placeholders available in the exposed Twig object. */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n\n    /** Make the Twig template cache registry available. */\n    TwigCore.exports.getRegistry = function getRegistry() {\n        return TwigCore.Templates.registry;\n    };\n\n    /** Provide possibility to clear the template cache registry */\n    TwigCore.exports.clearRegistry = function clearRegistry() {\n        TwigCore.Templates.registry = {};\n    };\n\n    TwigTemplates = TwigCore.Templates;\n    TwigCore.cache = false;\n});\n\n/**\n * Escaped parent placeholder\n * @type {string}\n */\nconst parentPlaceholder = Twig.placeholders.parent.replace(/\\|/g, '\\\\|');\n\n/**\n * Parent placeholder as regular expression\n * @type {RegExp}\n */\nconst parentRegExp = new RegExp(parentPlaceholder, 'gm');\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map<String, Object>}\n */\nconst templateRegistry = new Map();\n\n/**\n * Holds a list with all registered normalized component templates.\n * Including registered overrides.\n *\n * Each template contains the following information\n * - name - name of the component associated with the template\n * - template - Twig.Template which represents the template raw\n * - raw - Raw template string\n * - html - Pre-rendered markup\n * - extends - If a component extends another component, it will be listed here\n *\n * @type {Map<String, Object>}\n */\nconst normalizedTemplateRegistry = new Map();\n\n/**\n * Registers the main template for the defined component.\n *\n * @private\n * @param {string} componentName\n * @param {string} componentTemplate\n * @returns {boolean}\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n    const overrides = (template.overrides ? template.overrides : []);\n\n    templateRegistry.set(componentName, {\n        name: componentName,\n        raw: componentTemplate,\n        extend: null,\n        overrides: overrides,\n    });\n\n    return true;\n}\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @private\n * @param {String} componentName\n * @param {String} extendComponentName\n * @param {String|null} [templateExtension=null]\n */\nfunction extendComponentTemplate(\n    componentName,\n    extendComponentName,\n    templateExtension = null,\n) {\n    const template = templateRegistry.get(componentName) || {};\n    const overrides = (template.overrides ? template.overrides : []);\n\n    // If a component doesn't override the template, provide an empty string\n    if (!templateExtension) {\n        templateExtension = '';\n    }\n\n    templateRegistry.set(componentName, {\n        name: componentName,\n        raw: templateExtension,\n        extend: extendComponentName,\n        overrides: overrides,\n    });\n\n    return true;\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @private\n * @param {String} componentName\n * @param {String|null} [templateOverride=null]\n * @param {Number|null} [overrideIndex=0]\n */\nfunction registerTemplateOverride(\n    componentName,\n    templateOverride = null,\n    overrideIndex = 0,\n) {\n    const component = templateRegistry.get(componentName) || {\n        name: componentName,\n        raw: null,\n        extend: null,\n        overrides: [],\n    };\n    component.overrides.push({\n        index: overrideIndex,\n        raw: templateOverride,\n    });\n    templateRegistry.set(componentName, component);\n    return true;\n}\n\nfunction registerNormalizedTemplate(item) {\n    let templateDefinition = resolveExtendsComponent(item);\n\n    // extended component was not found\n    if (!templateDefinition) {\n        normalizedTemplateRegistry.delete(item.name);\n        return;\n    }\n\n    templateDefinition = {\n        ...templateDefinition,\n        html: '',\n    };\n\n    const hasOverridesInExtensionChain = (component) => {\n        if (!component.extend) {\n            return false;\n        }\n\n        return component.extend.overrides.length > 0 || hasOverridesInExtensionChain(component.extend);\n    };\n    if (hasOverridesInExtensionChain(templateDefinition) && Shopware.Feature.isActive('FEATURE_NEXT_17978')) {\n        // If this component extends (transitively) a component that is overwritten, resolve that extended component\n        // with all its overrides first, before resolving this component with it.\n        registerNormalizedTemplate(templateRegistry.get(templateDefinition.extend.name));\n    }\n\n    // Extend with overrides\n    const resolvedtokens = resolveExtendTokens(templateDefinition.template.tokens, templateDefinition);\n    templateDefinition.template.tokens = resolvedtokens;\n\n    // Write back built template to the registry\n    normalizedTemplateRegistry.set(templateDefinition.name, templateDefinition);\n\n    // Apply overrides\n    templateDefinition = applyTemplateOverrides(templateDefinition.name);\n    templateDefinition.html = templateDefinition.html.replace(parentRegExp, '');\n\n    // Final template will be written to the registry\n    normalizedTemplateRegistry.set(templateDefinition.name, templateDefinition);\n}\n\n/**\n * Resolves the templates, builds the extend chain, applies overrides, replaces all remaining parent placeholders\n * and updates the item in the registry.\n *\n * @private\n * @returns {Map<String, Object>}\n */\nfunction resolveTemplates() {\n    const componentTemplates = Array.from(templateRegistry.values());\n    componentTemplates.forEach(registerNormalizedTemplate);\n\n    return normalizedTemplateRegistry;\n}\n\nfunction applyTemplateOverrides(name) {\n    const item = normalizedTemplateRegistry.get(name);\n\n    if (!item.overrides.length) {\n        // Render the final rendered output with all overridden blocks\n        const finalHtml = item.template.render({});\n\n        // Update item which will written to the registry\n        const updatedTemplate = {\n            ...item,\n            html: finalHtml,\n        };\n\n        normalizedTemplateRegistry.set(updatedTemplate.name, updatedTemplate);\n        return updatedTemplate;\n    }\n\n    const baseTemplate = normalizedTemplateRegistry.get(item.name);\n\n    // iterate the overrides per component\n    item.overrides.forEach((override, index) => {\n        const overrideTemplate = buildTwigTemplateInstance(\n            `${baseTemplate.name}-${index}`,\n            override.raw,\n        );\n\n        overrideTemplate.tokens.forEach((overrideTokens) => {\n            // resolve the template tokens\n            if (overrideTokens.type === 'logic') {\n                baseTemplate.template.tokens = resolveTokens(baseTemplate.template.tokens, [overrideTokens], name);\n            }\n        });\n    });\n\n    normalizedTemplateRegistry.set(baseTemplate.name, baseTemplate);\n\n    let updatedTemplate = normalizedTemplateRegistry.get(item.name);\n\n    // Render the final rendered output with all overridden blocks\n    const finalHtml = updatedTemplate.template.render({});\n\n    // Update item which will written to the registry\n    updatedTemplate = {\n        ...updatedTemplate,\n        html: finalHtml,\n    };\n\n    normalizedTemplateRegistry.set(updatedTemplate.name, updatedTemplate);\n\n    return updatedTemplate;\n}\n\n/**\n * Resolve template tokens\n * @param {Object[]} tokens\n * @param {Object[]} overrideTokens\n * @returns {Object} | undefined\n */\nfunction resolveTokens(tokens, overrideTokens) {\n    if (!tokens) {\n        return [];\n    }\n\n    return tokens.reduce((acc, token) => {\n        if (token.type !== 'logic' || !token.token || !token.token.block) {\n            return [...acc, token];\n        }\n\n        const blockName = token.token.block;\n        const isInOverrides = findBlock(blockName, overrideTokens);\n\n        if (isInOverrides) {\n            if (isInOverrides.type === 'logic') {\n                isInOverrides.token.output = mergeTokens(token, isInOverrides.token.output);\n            }\n\n            return [...acc, isInOverrides];\n        }\n\n        const resolvedTokens = resolveTokens(token.token.output, overrideTokens);\n\n        token.token.output = resolvedTokens;\n\n        return [...acc, token];\n    }, []);\n}\n\n\nfunction mergeTokens(token, tokens) {\n    return tokens.reduce((acc, t) => {\n        if (t.type === 'logic' && t.token.type === 'parent') {\n            return [...acc, ...token.token.output];\n        }\n\n        if (t.token?.output) {\n            t.token.output = resolveSubTokens(t.token.output, token.token.output);\n        }\n\n        return [...acc, t];\n    }, []);\n}\n\n/**\n * Resolve parent in sub-token\n * @param {Object[]} subToken\n * @param {Object} replacement\n * @returns {Object[]}\n */\nfunction resolveSubTokens(subToken, replacement) {\n    return subToken.reduce((xs, s) => {\n        if (s.type === 'logic' && s.token.type === 'parent') {\n            return [...xs, ...replacement];\n        }\n\n        return [...xs, s];\n    }, []);\n}\n\n/**\n * Resolve token of the extension\n * @param {Object[]} tokens\n * @param {Object} item\n * @returns {Object[]}\n */\nfunction resolveExtendTokens(tokens, item) {\n    if (!item.extend) {\n        return tokens;\n    }\n\n    let extendedComponentTokens;\n    if (normalizedTemplateRegistry.has(item.extend.name) && Shopware.Feature.isActive('FEATURE_NEXT_17978')) {\n        // If the component was already registered in the normalizedTemplateRegistry (i.e. their overrides and tokens\n        // have been resolved), use that template's tokens instead of the raw tokens of an unresolved component.\n        // Use a clone of the tokens so the already registered template is not altered.\n        extendedComponentTokens = cloneDeep(normalizedTemplateRegistry.get(item.extend.name).template.tokens);\n    } else {\n        extendedComponentTokens = item.extend.template.tokens;\n    }\n\n    const extensionTokens = Array.from(resolveExtendTokens(extendedComponentTokens, item.extend));\n    const itemTokens = normalizeTokens(Array.from(tokens), extensionTokens);\n\n    tokens = extensionTokens.map((token) => {\n        return resolveToken(token, itemTokens, item.name);\n    });\n\n    return tokens;\n}\n\n/**\n * Normalize itemTokens - remove wrapping block which doesn't exist in the extension token tree\n * @param {Object[]} tokens\n * @param {Object[]} extensionTokens\n * @returns {Object[]}\n */\nfunction normalizeTokens(tokens, extensionTokens) {\n    const result = tokens.reduce((acc, token) => {\n        if (token.token && !findNestedBlock(token.token.block, extensionTokens)) {\n            return [...acc, ...token.token.output];\n        }\n\n        return [...acc, token];\n    }, []);\n\n    return result;\n}\n\n/**\n * Search deeply for a token by name in a list of tokens and their tokens\n * @param {String} blockName\n * @param {Object[]} tokens\n * @returns {Object} | undefined\n */\nfunction findNestedBlock(blockName, tokens) {\n    const result = tokens.find((t) => {\n        const exists = t.token && t.token.block === blockName;\n\n        return exists || (t.token && findNestedBlock(blockName, t.token.output));\n    });\n\n    return result;\n}\n\n/**\n * Search for a token by name in a list of tokens\n * @param {String} blockName\n * @param {Object[]} tokens\n * @returns {Object} | undefined\n */\nfunction findBlock(blockName, tokens) {\n    const result = tokens.find((t) => {\n        return t.token && t.token.block === blockName;\n    });\n\n    return result;\n}\n\nfunction resolveToken(token, itemTokens, name) {\n    // plain html - just return the token\n    if (token.type !== 'logic') {\n        return token;\n    }\n\n    const tokenBlockName = token.token.block;\n    const isIn = findBlock(tokenBlockName, itemTokens);\n\n    if (isIn) {\n        if (isIn.type !== 'logic') {\n            return isIn;\n        }\n\n        isIn.token.output = mergeTokens(token, isIn.token.output);\n\n        return isIn;\n    }\n\n    // resolve the outputs in depth\n    token.token.output = token.token.output.map((t) => {\n        return resolveToken(t, itemTokens, name);\n    });\n\n    return token;\n}\n\n/**\n * Resolves the extend chain for a given component\n * @param {Object} item\n * @returns {null|Object}\n */\nfunction resolveExtendsComponent(item) {\n    if (!item) {\n        return null;\n    }\n\n    if (item.extend) {\n        const extend = resolveExtendsComponent(templateRegistry.get(item.extend));\n        if (!extend) {\n            return null;\n        }\n\n        return {\n            ...item,\n            template: buildTwigTemplateInstance(item.name, item.raw),\n            extend,\n        };\n    }\n\n    return { ...item, template: buildTwigTemplateInstance(item.name, item.raw) };\n}\n\n/**\n * Creates a new Twig.Template instance which will be later used to render the component template\n * @param {String} name - component name\n * @param {String} template - Template raw string\n * @returns {Twig.Template}\n */\nfunction buildTwigTemplateInstance(name, template) {\n    return TwigTemplates.parsers.twig({\n        id: `${name}-baseTemplate`,\n        data: template,\n        path: false,\n        options: {},\n    });\n}\n\n/**\n * Clears the twig cache\n * @private\n * @returns {void}\n */\nfunction clearTwigCache() {\n    Twig.clearRegistry();\n}\n\n/**\n * Returns the twig cache\n *\n * @private\n * @returns {Object}\n */\nfunction getTwigCache() {\n    return Twig.getRegistry();\n}\n\n/**\n * Disables the twig cache\n *\n * @private\n * @returns {void}\n */\nfunction disableTwigCache() {\n    Twig.cache(false);\n}\n\n/**\n * Get the complete template registry.\n *\n * @private\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Get the complete template registry which got normalized including\n * twig templates and the pre-rendered markup\n *\n * @private\n * @returns {Map}\n */\nfunction getNormalizedTemplateRegistry() {\n    return normalizedTemplateRegistry;\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @private\n * @param componentName\n * @returns {Array}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @private\n * @param componentName\n * @returns {null|string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (Shopware.Feature.isActive('FEATURE_NEXT_19822')) {\n        const component = templateRegistry.get(componentName);\n\n        if (!component) {\n            return null;\n        }\n\n        registerNormalizedTemplate(component);\n\n        const componentTemplate = normalizedTemplateRegistry.get(componentName);\n\n        if (!componentTemplate) {\n            return null;\n        }\n\n        return componentTemplate.html;\n        // eslint-disable-next-line no-else-return\n    } else {\n        const componentTemplate = normalizedTemplateRegistry.get(componentName);\n\n        if (!componentTemplate) {\n            return null;\n        }\n\n        return componentTemplate.html;\n    }\n}\n","/**\n * @module core/factory/component\n * @deprecated tag:v6.5.0 - will be replaced by async-component.factory.ts\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport { cloneDeep } from 'src/core/service/utils/object.utils';\nimport TemplateFactory from 'src/core/factory/template.factory';\n// eslint-disable-next-line import/no-named-default\nimport type { default as Vue, ComponentOptions } from 'vue';\nimport {\n    ThisTypedComponentOptionsWithRecordProps,\n    ThisTypedComponentOptionsWithArrayProps,\n// eslint-disable-next-line import/no-unresolved\n} from 'vue/types/options';\n\nexport default {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry,\n    getOverrideRegistry,\n    getComponentHelper,\n    registerComponentHelper,\n    resolveComponentTemplates,\n    markComponentTemplatesAsNotResolved,\n};\n\n// @ts-expect-error\nexport interface ComponentConfig<V extends Vue = Vue> extends ComponentOptions<V> {\n    functional?: boolean,\n    extends?: ComponentConfig<V> | string,\n    _isOverride?: boolean,\n}\n\n/**\n * Indicates if the templates of the components are resolved.\n */\nlet templatesResolved = false;\n\n/**\n * Registry which holds all components\n */\nconst componentRegistry = new Map<string, ComponentConfig>();\n\n/**\n * Registry which holds all component overrides\n */\nconst overrideRegistry = new Map<string, ComponentConfig[]>();\n\n/**\n * Registry for globally registered helper functions like src/app/service/map-error.service.js\n */\nconst componentHelper: { [helperName: string]: unknown } = {};\n\n/**\n * Returns the map with all registered components.\n */\nfunction getComponentRegistry(): Map<string, ComponentConfig> {\n    return componentRegistry;\n}\n\n/**\n * Returns the map with all registered component overrides.\n */\nfunction getOverrideRegistry(): Map<string, ComponentConfig[]> {\n    return overrideRegistry;\n}\n\n/**\n * Returns the map of component helper functions\n */\nfunction getComponentHelper(): { [helperName: string]: unknown } {\n    return componentHelper;\n}\n\n/**\n * Register a new component helper function\n */\nfunction registerComponentHelper(name: string, helperFunction: unknown): boolean {\n    if (!name || !name.length) {\n        warn('ComponentFactory/ComponentHelper', 'A ComponentHelper always needs a name.', helperFunction);\n        return false;\n    }\n\n    if (componentHelper.hasOwnProperty(name)) {\n        warn('ComponentFactory/ComponentHelper', `A ComponentHelper with the name ${name} already exists.`, helperFunction);\n        return false;\n    }\n\n    componentHelper[name] = helperFunction;\n\n    return true;\n}\n\n/**\n * Register a new component.\n */\n/* eslint-disable max-len */\n// @ts-expect-error\nfunction register<V extends Vue, Data, Methods, Computed, PropNames extends string>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, Props>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>): boolean | ComponentConfig;\nfunction register(componentName: string, componentConfiguration: ComponentConfig<Vue>): boolean | ComponentConfig {\n    /* eslint-enable max-len */\n    const config = componentConfiguration;\n\n    if (!componentName || !componentName.length) {\n        warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration,\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            config,\n        );\n        return false;\n    }\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else if (!config.functional && typeof config.render !== 'function') {\n        warn(\n            'ComponentFactory',\n            `The component \"${config.name}\" needs a template to be functional.`,\n            'Please add a \"template\" property to your component definition',\n            config,\n        );\n        return false;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n */\nfunction extend(\n    componentName: string,\n    extendComponentName: string,\n    componentConfiguration: ComponentConfig = { name: '' },\n): ComponentConfig {\n    const config = componentConfiguration;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config.name = componentName;\n    config.extends = extendComponentName;\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n */\nfunction override(componentName: string, componentConfiguration: ComponentConfig, overrideIndex = null): ComponentConfig {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, config);\n    } else {\n        overrides.push(config);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n */\nfunction getComponentTemplate(componentName: string): string | null {\n    if (!templatesResolved) {\n        resolveComponentTemplates();\n    }\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n/**\n * Returns the complete component including extension and overrides.\n */\nfunction build(componentName: string, skipTemplate = false): ComponentConfig | boolean {\n    if (!templatesResolved) {\n        resolveComponentTemplates();\n    }\n\n    let config = componentRegistry.get(componentName);\n\n    if (!config) {\n        throw new Error(\n            `The component registry has not found a component with the name \"${componentName}\".`,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    config = Object.create(config);\n\n    if (!config) {\n        throw new Error(\n            `The config of the component \"${componentName}\" is invalid.`,\n        );\n    }\n\n    if (config.extends) {\n        let extendComp: ComponentConfig | undefined;\n\n        if (typeof config.extends === 'string') {\n            const buildedComp = build(config.extends, true);\n\n            if (typeof buildedComp !== 'boolean') {\n                extendComp = buildedComp;\n            }\n        }\n\n        if (extendComp) {\n            config.extends = extendComp;\n        } else {\n            delete config.extends;\n        }\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        // clone the override configuration to prevent side-effects to the config\n        const overrides = cloneDeep(overrideRegistry.get(componentName));\n\n        const convertedOverrides = convertOverrides(overrides);\n\n        convertedOverrides.forEach((overrideComp) => {\n            overrideComp.extends = config;\n            overrideComp._isOverride = true;\n            config = overrideComp;\n        });\n    }\n\n    const superRegistry = buildSuperRegistry(config);\n\n    if (isNotEmptyObject(superRegistry) && config) {\n        const inheritedFrom = isAnOverride(config)\n            ? `#${componentName}`\n            : typeof config.extends !== 'string' && config?.extends?.name;\n\n        // @ts-expect-error\n        config.methods = { ...config.methods, ...addSuperBehaviour(inheritedFrom, superRegistry) };\n    }\n\n    /**\n     * if config has a render function it will ignore template\n     */\n    if (typeof config?.render === 'function') {\n        delete config.template;\n        return config;\n    }\n\n    if (skipTemplate && config) {\n        delete config.template;\n        return config;\n    }\n\n    /**\n     * Get the final template result including all overrides or extensions.\n     */\n    const componentTemplate = getComponentTemplate(componentName);\n    if (config && typeof componentTemplate === 'string') {\n        config.template = componentTemplate;\n    }\n\n    if (typeof config?.template !== 'string') {\n        return false;\n    }\n\n    return config;\n}\n\n/**\n * Reorganizes the structure of the given overrides.\n */\nfunction convertOverrides(overrides: ComponentConfig[] | undefined): ComponentConfig[] {\n    if (!overrides) {\n        return [];\n    }\n\n    // eslint-disable-next-line max-len\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment */\n    // @ts-expect-error\n    return overrides\n        // @ts-expect-error\n        .reduceRight((acc, overrideComp) => {\n            if (acc.length === 0) {\n                return [overrideComp];\n            }\n\n            const previous = acc.shift();\n\n            Object.entries(overrideComp).forEach(([prop, values]) => {\n                // check if current property exists in previous override\n                // @ts-expect-error\n                if (previous && previous.hasOwnProperty(prop)) {\n                    // if it exists iterate over the methods\n                    // and hoist them if they don't exists in previous override\n\n\n                    // ignore array based properties\n                    if (Array.isArray(values)) {\n                        return;\n                    }\n\n                    // check for methods in current property-object\n                    if (typeof values === 'object') {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                        Object.entries(values).forEach(([methodName, methodFunction]) => {\n                            // @ts-expect-error\n                            if (!previous[prop].hasOwnProperty(methodName)) {\n                                // move the function over\n                                // @ts-expect-error\n                                previous[prop][methodName] = methodFunction;\n                                // @ts-expect-error\n                                delete overrideComp[prop][methodName];\n                            }\n                        });\n                    }\n                } else {\n                    // move the property over\n                    // @ts-expect-error\n                    previous[prop] = values;\n                    // @ts-expect-error\n                    delete overrideComp[prop];\n                }\n            });\n\n            return [...[overrideComp], previous, ...acc];\n        }, []);\n\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\ninterface SuperRegistry {\n    [name: string]: {\n        [sName: string]: {\n            parent: string,\n            func: (args: $TSFixMe[]) => $TSFixMe\n        }\n    }\n}\n\ninterface SuperBehavior {\n    $super(name: string, ...args: $TSFixMe[]): $TSFixMe,\n    _initVirtualCallStack(name: string): void,\n    _findInSuperRegister(name: string): SuperRegistry,\n    _superRegistry(): SuperRegistry,\n    _inheritedFrom(): string,\n    _virtualCallStack: { [name: string]: string }\n}\n\n/**\n * Build the superRegistry for computed properties and methods.\n */\nfunction buildSuperRegistry(config: ComponentConfig): SuperRegistry {\n    let superRegistry: SuperRegistry = {};\n\n    // if it is an override build the super registry recursively\n    if (config._isOverride && config.extends && typeof config.extends !== 'string') {\n        superRegistry = buildSuperRegistry(config.extends);\n    }\n\n    /**\n     * Search for `this.$super()` call in every `computed` property and `method``\n     * and resolve the call chain.\n     */\n    ['computed', 'methods'].forEach((methodOrComputed) => {\n        // @ts-expect-error\n        const ConfigMethodOrComputed = config[methodOrComputed] as typeof config['computed'] | typeof config['methods'];\n\n        if (!ConfigMethodOrComputed) {\n            return;\n        }\n\n        const methods = Object.entries(ConfigMethodOrComputed);\n\n        methods.forEach(([name, method]) => {\n            // is computed getter/setter definition\n            if (methodOrComputed === 'computed' && typeof method === 'object') {\n                Object.entries(method).forEach(([cmd, func]) => {\n                    const path = `${name}.${cmd}`;\n\n                    superRegistry = updateSuperRegistry(superRegistry, path, func, methodOrComputed, config);\n                });\n            } else {\n                // @ts-expect-error\n                superRegistry = updateSuperRegistry(superRegistry, name, method, methodOrComputed, config);\n            }\n        });\n    });\n\n    return superRegistry;\n}\n\nfunction updateSuperRegistry(\n    superRegistry: SuperRegistry,\n    methodName: string,\n    method: unknown,\n    methodOrComputed: 'methods'|'computed',\n    config: ComponentConfig,\n): SuperRegistry {\n    const superCallPattern = /\\.\\$super/g;\n    const methodString = typeof method === 'function' && method.toString();\n    const hasSuperCall = methodString && superCallPattern.test(methodString);\n\n    if (!hasSuperCall) {\n        return superRegistry;\n    }\n\n    if (!superRegistry.hasOwnProperty(methodName)) {\n        superRegistry[methodName] = {};\n    }\n\n    const overridePrefix = isAnOverride(config) ? '#' : '';\n\n    superRegistry[methodName] = resolveSuperCallChain(config, methodName, methodOrComputed, overridePrefix);\n\n    return superRegistry;\n}\n\n/**\n * Returns a superBehaviour object, which contains a super-like callstack.\n */\nfunction addSuperBehaviour(inheritedFrom: string, superRegistry: SuperRegistry): SuperBehavior {\n    const superBehavior: SuperBehavior = {\n        $super(this: SuperBehavior, name, ...args) {\n            this._initVirtualCallStack(name);\n\n            const superStack = this._findInSuperRegister(name);\n\n            const superFuncObject = superStack[this._virtualCallStack[name]];\n\n            // @ts-expect-error\n            this._virtualCallStack[name] = superFuncObject.parent;\n\n            // @ts-expect-error\n            const result = superFuncObject.func.bind(this)(...args);\n\n            // reset the virtual call-stack\n            if (superFuncObject.parent) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return result;\n        },\n        _initVirtualCallStack(name) {\n            // if there is no virtualCallStack\n            if (!this._virtualCallStack) {\n                this._virtualCallStack = { name };\n            }\n\n            if (!this._virtualCallStack[name]) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n        },\n        // @ts-expect-error\n        _findInSuperRegister(name) {\n            return this._superRegistry()[name];\n        },\n        _superRegistry() {\n            return superRegistry;\n        },\n        _inheritedFrom() {\n            return inheritedFrom;\n        },\n    };\n\n    return superBehavior;\n}\n\n/**\n * Resolves the super call chain for a given method (or computed property).\n */\nfunction resolveSuperCallChain(\n    config: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed' = 'methods',\n    overridePrefix = '',\n): $TSFixMe {\n    const extension = config.extends;\n\n    if (!extension || typeof extension === 'string') {\n        return {};\n    }\n\n    const parentName = `${overridePrefix}${extension.name ?? ''}`;\n    let parentsParentName = typeof extension.extends === 'object' && extension.extends\n        ? `${overridePrefix}${extension.extends.name ?? ''}`\n        : null;\n\n    if (parentName === parentsParentName) {\n        if (overridePrefix.length > 0 || extension._isOverride) {\n            overridePrefix = `#${overridePrefix}`;\n        }\n\n        const extendsName = (\n            extension\n            && extension.extends\n            && typeof extension.extends !== 'string'\n            && extension.extends.name\n        );\n        const extendsNameString = typeof extendsName === 'string' ? extendsName : '';\n        parentsParentName = `${overridePrefix}${extendsNameString}`;\n    }\n\n    const methodFunction = findMethodInChain(extension, methodName, methodsOrComputed);\n\n    const parentBlock = {};\n    // @ts-expect-error\n    parentBlock[parentName] = {\n        parent: parentsParentName,\n        func: methodFunction,\n    };\n\n    const resolvedParent = resolveSuperCallChain(extension, methodName, methodsOrComputed, overridePrefix);\n\n    const result = {\n        ...resolvedParent,\n        ...parentBlock,\n    };\n\n    return result;\n}\n\n/**\n * Returns a method in the extension chain object.\n */\nfunction findMethodInChain(\n    extension: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed',\n): $TSFixMe {\n    const splitPath = methodName.split('.');\n\n    if (splitPath.length > 1) {\n        return resolveGetterSetterChain(extension, splitPath, methodsOrComputed);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (extension[methodsOrComputed]?.[methodName]) {\n        // @ts-expect-error\n        return extension[methodsOrComputed][methodName];\n    }\n\n    if (extension.extends) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    return null;\n}\n\n/**\n * Returns a method in the extension chain object with a method path like `getterSetterMethod.get`.\n */\nfunction resolveGetterSetterChain(\n    extension: ComponentConfig,\n    path: string[],\n    methodsOrComputed: 'methods'|'computed',\n):$TSFixMe {\n    const [methodName, cmd] = path;\n\n    if (!extension[methodsOrComputed]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    if (!extension[methodsOrComputed][methodName]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return extension[methodsOrComputed][methodName][cmd];\n}\n\n/**\n * Tests a component, whether it is an extension or an override.\n */\nfunction isAnOverride(config: ComponentConfig): boolean {\n    if (!config.extends || typeof config.extends === 'string') {\n        return false;\n    }\n\n    return config.extends.name === config.name;\n}\n\n/**\n * Tests an object, whether it is empty or not.\n */\nfunction isNotEmptyObject(obj: $TSFixMe): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-member-access\n    return (Object.keys(obj).length !== 0 && obj.constructor === Object);\n}\n\n/**\n * Resolves the component templates using the template factory.\n */\nfunction resolveComponentTemplates(): boolean {\n    TemplateFactory.resolveTemplates();\n    templatesResolved = true;\n    return true;\n}\n\n/**\n * Helper method which clears the normalized templates and marks\n * the indicator as `false`, so another resolve run is possible\n */\nfunction markComponentTemplatesAsNotResolved(): boolean {\n    TemplateFactory.getNormalizedTemplateRegistry().clear();\n    templatesResolved = false;\n    return true;\n}\n","import { warn } from 'src/core/service/utils/debug.utils';\nimport { cloneDeep } from 'src/core/service/utils/object.utils';\nimport TemplateFactory from 'src/core/factory/template.factory';\n// eslint-disable-next-line import/no-named-default\nimport type { default as Vue, ComponentOptions } from 'vue';\nimport {\n    ThisTypedComponentOptionsWithRecordProps,\n    ThisTypedComponentOptionsWithArrayProps,\n// eslint-disable-next-line import/no-unresolved\n} from 'vue/types/options';\n\nexport default {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry,\n    getOverrideRegistry,\n    getComponentHelper,\n    _clearComponentHelper,\n    registerComponentHelper,\n    resolveComponentTemplates,\n    markComponentTemplatesAsNotResolved,\n    isSyncComponent,\n    markComponentAsSync,\n};\n\n// @ts-expect-error\nexport interface ComponentConfig<V extends Vue = Vue> extends ComponentOptions<V> {\n    functional?: boolean,\n    extends?: ComponentConfig<V> | string,\n    _isOverride?: boolean,\n}\n\n/**\n * Registry which holds all components\n * @private\n */\ntype AwaitedComponentConfig = () => Promise<ComponentConfig | boolean>;\nconst componentRegistry = new Map<string, AwaitedComponentConfig>();\n\n/**\n * Registry which holds all component overrides\n * @private\n */\nconst overrideRegistry = new Map<string, AwaitedComponentConfig[]>();\n\n/**\n * Registry for globally registered helper functions like src/app/service/map-error.service.js\n * @private\n */\nconst componentHelper: { [helperName: string]: unknown } = {};\n\n/**\n * Contains all components which should be created as a async component\n * @private\n */\nconst syncComponents = new Set<string>();\n\n/**\n * Check if the component should be a synchronous component\n * @private\n */\nfunction isSyncComponent(componentName: string): boolean {\n    return syncComponents.has(componentName);\n}\n\n/**\n * Add a component to the synchronous component list. This\n * component will be compiled directly on boot.\n * @public\n */\nfunction markComponentAsSync(componentName: string): void {\n    syncComponents.add(componentName);\n}\n\n/**\n * Returns the map with all registered components.\n * @private\n */\nfunction getComponentRegistry(): Map<string, AwaitedComponentConfig> {\n    return componentRegistry;\n}\n\n/**\n * Returns the map with all registered component overrides.\n * @private\n */\nfunction getOverrideRegistry(): Map<string, AwaitedComponentConfig[]> {\n    return overrideRegistry;\n}\n\n/**\n * Returns the map of component helper functions\n * @public\n */\nfunction getComponentHelper(): { [helperName: string]: unknown } {\n    return componentHelper;\n}\n\n/**\n * @private\n */\nfunction _clearComponentHelper(): void {\n    Object.keys(componentHelper).forEach((key) => {\n        delete componentHelper[key];\n    });\n}\n\n/**\n * Register a new component helper function\n * @public\n */\nfunction registerComponentHelper(name: string, helperFunction: unknown): boolean {\n    if (!name || !name.length) {\n        warn('ComponentFactory/ComponentHelper', 'A ComponentHelper always needs a name.', helperFunction);\n        return false;\n    }\n\n    if (componentHelper.hasOwnProperty(name)) {\n        warn('ComponentFactory/ComponentHelper', `A ComponentHelper with the name ${name} already exists.`, helperFunction);\n        return false;\n    }\n\n    componentHelper[name] = helperFunction;\n\n    return true;\n}\n\n/**\n * Register a new component.\n * @public\n */\n/* eslint-disable max-len */\n// function overload to support all vue component object variations\n// @ts-expect-error\nfunction register<V extends Vue, Data, Methods, Computed, PropNames extends string>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, PropNames extends string>(componentName: string, componentConfiguration: () => Promise<ThisTypedComponentOptionsWithArrayProps<V, Data, Methods, Computed, PropNames>>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, Props>(componentName: string, componentConfiguration: ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>): boolean | ComponentConfig;\nfunction register<V extends Vue, Data, Methods, Computed, Props>(componentName: string, componentConfiguration: () => Promise<ThisTypedComponentOptionsWithRecordProps<V, Data, Methods, Computed, Props>>): boolean | ComponentConfig;\nfunction register(componentName: string, componentConfiguration: ComponentConfig<Vue> | (() => Promise<ComponentConfig<Vue>>)): boolean | (() => Promise<ComponentConfig|boolean>) {\n/* eslint-enable max-len */\n    if (!componentName || !componentName.length) {\n        warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration,\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            componentConfiguration,\n        );\n        return false;\n    }\n\n    const configurationResolveMethod = async (): Promise<false | ComponentConfig<Vue>> => {\n        const awaitedConfig = typeof componentConfiguration === 'function'\n            ? componentConfiguration\n            : (): Promise<ComponentConfig> => Promise.resolve(componentConfiguration);\n\n        let awaitedConfigResult = await awaitedConfig();\n\n        /**\n         * Check if the resulted config is a ES module. Then we need to use the default\n         * value of it.\n         */\n        if (awaitedConfigResult.hasOwnProperty('default')) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            awaitedConfigResult = awaitedConfigResult.default;\n        }\n        const config = { ...awaitedConfigResult };\n\n        config.name = componentName;\n\n        if (config.template) {\n            /**\n             * Register the main template of the component.\n             */\n            TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n            /**\n             * Delete the template string from the component config.\n             * The complete rendered template including all overrides will be added later.\n             */\n            delete config.template;\n        } else if (!config.functional && typeof config.render !== 'function') {\n            warn(\n                'ComponentFactory',\n                `The component \"${config.name}\" needs a template to be functional.`,\n                'Please add a \"template\" property to your component definition',\n                config,\n            );\n            return false;\n        }\n\n        return config;\n    };\n\n    componentRegistry.set(componentName, configurationResolveMethod);\n\n    return configurationResolveMethod;\n}\n\n/**\n * Create a new component extending from another existing component.\n * @public\n */\nfunction extend(\n    componentName: string,\n    extendComponentName: string,\n    componentConfiguration: ComponentConfig | (() => Promise<ComponentConfig>) = { name: '' },\n): () => Promise<ComponentConfig> {\n    let config: ComponentConfig;\n\n    const configurationResolveMethod = async (): Promise<ComponentConfig> => {\n        if (config) {\n            return config;\n        }\n\n        const awaitedConfig = typeof componentConfiguration === 'function'\n            ? componentConfiguration\n            : (): Promise<ComponentConfig> => Promise.resolve(componentConfiguration);\n\n        let awaitedConfigResult = await awaitedConfig();\n\n        /**\n         * Check if the resulted config is a ES module. Then we need to use the default\n         * value of it.\n         */\n        if (awaitedConfigResult.hasOwnProperty('default')) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            awaitedConfigResult = awaitedConfigResult.default;\n        }\n\n        config = { ...awaitedConfigResult };\n\n        if (config.template) {\n            /**\n             * Register the main template of the component based on the extended component.\n             */\n            TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n            /**\n             * Delete the template string from the component config.\n             * The complete rendered template including all overrides will be added later.\n             */\n            delete config.template;\n        } else {\n            TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n        }\n\n        config.name = componentName;\n        config.extends = extendComponentName;\n\n        return config;\n    };\n\n    componentRegistry.set(componentName, configurationResolveMethod);\n\n    return configurationResolveMethod;\n}\n\n/**\n * Override an existing component including its config and template.\n * @public\n */\nfunction override(\n    componentName: string,\n    componentConfiguration: ComponentConfig|(() => Promise<ComponentConfig>),\n    overrideIndex = null,\n): () => Promise<ComponentConfig> {\n    let config: ComponentConfig;\n    const configResolveMethod = async (): Promise<ComponentConfig> => {\n        if (config) {\n            return config;\n        }\n\n        const awaitedConfig = typeof componentConfiguration === 'function'\n            ? componentConfiguration\n            : (): Promise<ComponentConfig> => Promise.resolve(componentConfiguration);\n\n        config = await awaitedConfig();\n\n        /**\n         * Check if the resulted config is a ES module. Then we need to use the default\n         * value of it.\n         */\n        if (config.hasOwnProperty('default')) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            config = config.default;\n        }\n\n        config.name = componentName;\n\n        if (config.template) {\n            /**\n             * Register a template override for the existing component template.\n             */\n            TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n            /**\n             * Delete the template string from the component config.\n             * The complete rendered template including all overrides will be added later.\n             */\n            delete config.template;\n        }\n\n        return config;\n    };\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, configResolveMethod);\n    } else {\n        overrides.push(configResolveMethod);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return configResolveMethod;\n}\n\n/**\n * Returns the complete rendered template of the component.\n * @private\n */\nasync function getComponentTemplate(componentName: string): Promise<string | null> {\n    await initComponent(componentName);\n\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\nasync function initComponent(componentName: string): Promise<void> {\n    const asyncComponent = componentRegistry.get(componentName);\n    const asyncOverrideComponent = overrideRegistry.get(componentName);\n\n    if (asyncComponent) {\n        await asyncComponent();\n    }\n\n    if (asyncOverrideComponent) {\n        await Promise.all(asyncOverrideComponent.map(c => c()));\n    }\n}\n\n/**\n * Returns the complete component including extension and overrides.\n * @private\n */\nasync function build(componentName: string, skipTemplate = false): Promise<ComponentConfig | boolean> {\n    const awaitedConfig = componentRegistry.get(componentName);\n\n    if (!awaitedConfig) {\n        throw new Error(\n            `The component registry has not found a component with the name \"${componentName}\".`,\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const resultConfig: ComponentConfig|boolean = await awaitedConfig();\n    if (typeof resultConfig === 'boolean') {\n        throw new Error(\n            `The component registry could not build the component with the name \"${componentName}\".`,\n        );\n    }\n\n    // let config: ComponentConfig = Object.create(resultConfig) as ComponentConfig;\n    let config: ComponentConfig = { ...resultConfig } as ComponentConfig;\n\n    if (!config) {\n        throw new Error(\n            `The config of the component \"${componentName}\" is invalid.`,\n        );\n    }\n\n    if (config.extends) {\n        let extendComp: ComponentConfig | undefined;\n\n        if (typeof config.extends === 'string') {\n            const buildedComp = await build(config.extends, true);\n\n            if (typeof buildedComp !== 'boolean') {\n                extendComp = buildedComp;\n            }\n        }\n\n        if (extendComp) {\n            config.extends = extendComp;\n        } else {\n            delete config.extends;\n        }\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        // clone the override configuration to prevent side-effects to the config\n        const overrides = cloneDeep(overrideRegistry.get(componentName));\n\n        const convertedOverrides = await convertOverrides(overrides);\n\n        convertedOverrides.forEach((overrideComp) => {\n            overrideComp.extends = config;\n            overrideComp._isOverride = true;\n            config = { ...overrideComp };\n        });\n    }\n\n    const superRegistry = buildSuperRegistry(config);\n\n    if (isNotEmptyObject(superRegistry) && config) {\n        const inheritedFrom = isAnOverride(config)\n            ? `#${componentName}`\n            : typeof config.extends !== 'string' && config?.extends?.name;\n\n        // @ts-expect-error\n        config.methods = { ...config.methods, ...addSuperBehaviour(inheritedFrom, superRegistry) };\n    }\n\n    /**\n     * if config has a render function it will ignore template\n     */\n    if (typeof config?.render === 'function') {\n        delete config.template;\n        return config;\n    }\n\n    if (skipTemplate && config) {\n        delete config.template;\n        return config;\n    }\n\n    /**\n     * Get the final template result including all overrides or extensions.\n     */\n    const componentTemplate = await getComponentTemplate(componentName);\n    if (config && typeof componentTemplate === 'string') {\n        config.template = componentTemplate;\n    }\n\n    if (typeof config?.template !== 'string') {\n        return false;\n    }\n\n    return config;\n}\n\n/**\n * Reorganizes the structure of the given overrides.\n */\nasync function convertOverrides(awaitedOverrides: AwaitedComponentConfig[] | undefined): Promise<ComponentConfig[]> {\n    if (!awaitedOverrides) {\n        return [];\n    }\n\n    const overrides = await Promise.all(awaitedOverrides.map((awaitedOverride) => {\n        return awaitedOverride();\n    }));\n\n    // eslint-disable-next-line max-len\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment */\n    // @ts-expect-error\n    return overrides\n        // @ts-expect-error\n        .reduceRight((acc, overrideComp) => {\n            if (acc.length === 0) {\n                return [overrideComp];\n            }\n\n            const previous = acc.shift();\n\n            Object.entries(overrideComp).forEach(([prop, values]) => {\n                // check if current property exists in previous override\n                // @ts-expect-error\n                if (previous && previous.hasOwnProperty(prop)) {\n                    // if it exists iterate over the methods\n                    // and hoist them if they don't exists in previous override\n\n\n                    // ignore array based properties\n                    if (Array.isArray(values)) {\n                        return;\n                    }\n\n                    // check for methods in current property-object\n                    if (typeof values === 'object') {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                        Object.entries(values).forEach(([methodName, methodFunction]) => {\n                            // @ts-expect-error\n                            if (!previous[prop].hasOwnProperty(methodName)) {\n                                // move the function over\n                                // @ts-expect-error\n                                previous[prop][methodName] = methodFunction;\n                                // @ts-expect-error\n                                delete overrideComp[prop][methodName];\n                            }\n                        });\n                    }\n                } else {\n                    // move the property over\n                    // @ts-expect-error\n                    previous[prop] = values;\n                    // @ts-expect-error\n                    delete overrideComp[prop];\n                }\n            });\n\n            return [...[overrideComp], previous, ...acc];\n        }, []);\n\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n}\n\ninterface SuperRegistry {\n    [name: string]: {\n        [sName: string]: {\n            parent: string,\n            func: (args: $TSFixMe[]) => $TSFixMe\n        }\n    }\n}\n\ninterface SuperBehavior {\n    $super(name: string, ...args: $TSFixMe[]): $TSFixMe,\n    _initVirtualCallStack(name: string): void,\n    _findInSuperRegister(name: string): SuperRegistry,\n    _superRegistry(): SuperRegistry,\n    _inheritedFrom(): string,\n    _virtualCallStack: { [name: string]: string }\n}\n\n/**\n * Build the superRegistry for computed properties and methods.\n */\nfunction buildSuperRegistry(config: ComponentConfig): SuperRegistry {\n    let superRegistry: SuperRegistry = {};\n\n    // if it is an override build the super registry recursively\n    if (config._isOverride && config.extends && typeof config.extends !== 'string') {\n        superRegistry = buildSuperRegistry(config.extends);\n    }\n\n    /**\n     * Search for `this.$super()` call in every `computed` property and `method``\n     * and resolve the call chain.\n     */\n    ['computed', 'methods'].forEach((methodOrComputed) => {\n        // @ts-expect-error\n        const ConfigMethodOrComputed = config[methodOrComputed] as typeof config['computed'] | typeof config['methods'];\n\n        if (!ConfigMethodOrComputed) {\n            return;\n        }\n\n        const methods = Object.entries(ConfigMethodOrComputed);\n\n        methods.forEach(([name, method]) => {\n            // is computed getter/setter definition\n            if (methodOrComputed === 'computed' && typeof method === 'object') {\n                Object.entries(method).forEach(([cmd, func]) => {\n                    const path = `${name}.${cmd}`;\n\n                    superRegistry = updateSuperRegistry(superRegistry, path, func, methodOrComputed, config);\n                });\n            } else {\n                // @ts-expect-error\n                superRegistry = updateSuperRegistry(superRegistry, name, method, methodOrComputed, config);\n            }\n        });\n    });\n\n    return superRegistry;\n}\n\nfunction updateSuperRegistry(\n    superRegistry: SuperRegistry,\n    methodName: string,\n    method: unknown,\n    methodOrComputed: 'methods'|'computed',\n    config: ComponentConfig,\n): SuperRegistry {\n    const superCallPattern = /\\.\\$super/g;\n    const methodString = typeof method === 'function' && method.toString();\n    const hasSuperCall = methodString && superCallPattern.test(methodString);\n\n    if (!hasSuperCall) {\n        return superRegistry;\n    }\n\n    if (!superRegistry.hasOwnProperty(methodName)) {\n        superRegistry[methodName] = {};\n    }\n\n    const overridePrefix = isAnOverride(config) ? '#' : '';\n\n    superRegistry[methodName] = resolveSuperCallChain(config, methodName, methodOrComputed, overridePrefix);\n\n    return superRegistry;\n}\n\n/**\n * Returns a superBehaviour object, which contains a super-like callstack.\n */\nfunction addSuperBehaviour(inheritedFrom: string, superRegistry: SuperRegistry): SuperBehavior {\n    const superBehavior: SuperBehavior = {\n        $super(this: SuperBehavior, name, ...args) {\n            this._initVirtualCallStack(name);\n\n            const superStack = this._findInSuperRegister(name);\n\n            const superFuncObject = superStack[this._virtualCallStack[name]];\n\n            // @ts-expect-error\n            this._virtualCallStack[name] = superFuncObject.parent;\n\n            // @ts-expect-error\n            const result = superFuncObject.func.bind(this)(...args);\n\n            // reset the virtual call-stack\n            if (superFuncObject.parent) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return result;\n        },\n        _initVirtualCallStack(name) {\n            // if there is no virtualCallStack\n            if (!this._virtualCallStack) {\n                this._virtualCallStack = { name };\n            }\n\n            if (!this._virtualCallStack[name]) {\n                this._virtualCallStack[name] = this._inheritedFrom();\n            }\n        },\n        // @ts-expect-error\n        _findInSuperRegister(name) {\n            return this._superRegistry()[name];\n        },\n        _superRegistry() {\n            return superRegistry;\n        },\n        _inheritedFrom() {\n            return inheritedFrom;\n        },\n    };\n\n    return superBehavior;\n}\n\n/**\n * Resolves the super call chain for a given method (or computed property).\n */\nfunction resolveSuperCallChain(\n    config: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed' = 'methods',\n    overridePrefix = '',\n): $TSFixMe {\n    const extension = config.extends;\n\n    if (!extension || typeof extension === 'string') {\n        return {};\n    }\n\n    const parentName = `${overridePrefix}${extension.name ?? ''}`;\n    let parentsParentName = typeof extension.extends === 'object' && extension.extends\n        ? `${overridePrefix}${extension.extends.name ?? ''}`\n        : null;\n\n    if (parentName === parentsParentName) {\n        if (overridePrefix.length > 0 || extension._isOverride) {\n            overridePrefix = `#${overridePrefix}`;\n        }\n\n        const extendsName = (\n            extension\n            && extension.extends\n            && typeof extension.extends !== 'string'\n            && extension.extends.name\n        );\n        const extendsNameString = typeof extendsName === 'string' ? extendsName : '';\n        parentsParentName = `${overridePrefix}${extendsNameString}`;\n    }\n\n    const methodFunction = findMethodInChain(extension, methodName, methodsOrComputed);\n\n    const parentBlock = {};\n    // @ts-expect-error\n    parentBlock[parentName] = {\n        parent: parentsParentName,\n        func: methodFunction,\n    };\n\n    const resolvedParent = resolveSuperCallChain(extension, methodName, methodsOrComputed, overridePrefix);\n\n    const result = {\n        ...resolvedParent,\n        ...parentBlock,\n    };\n\n    return result;\n}\n\n/**\n * Returns a method in the extension chain object.\n */\nfunction findMethodInChain(\n    extension: ComponentConfig,\n    methodName: string,\n    methodsOrComputed: 'methods'|'computed',\n): $TSFixMe {\n    const splitPath = methodName.split('.');\n\n    if (splitPath.length > 1) {\n        return resolveGetterSetterChain(extension, splitPath, methodsOrComputed);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (extension[methodsOrComputed]?.[methodName]) {\n        // @ts-expect-error\n        return extension[methodsOrComputed][methodName];\n    }\n\n    if (extension.extends) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    return null;\n}\n\n/**\n * Returns a method in the extension chain object with a method path like `getterSetterMethod.get`.\n */\nfunction resolveGetterSetterChain(\n    extension: ComponentConfig,\n    path: string[],\n    methodsOrComputed: 'methods'|'computed',\n):$TSFixMe {\n    const [methodName, cmd] = path;\n\n    if (!extension[methodsOrComputed]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    if (!extension[methodsOrComputed][methodName]) {\n        // @ts-expect-error\n        return findMethodInChain(extension.extends, methodName, methodsOrComputed);\n    }\n\n    // @ts-expect-error\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return extension[methodsOrComputed][methodName][cmd];\n}\n\n/**\n * Tests a component, whether it is an extension or an override.\n */\nfunction isAnOverride(config: ComponentConfig): boolean {\n    if (!config.extends || typeof config.extends === 'string') {\n        return false;\n    }\n\n    return config.extends.name === config.name;\n}\n\n/**\n * Tests an object, whether it is empty or not.\n */\nfunction isNotEmptyObject(obj: $TSFixMe): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-member-access\n    return (Object.keys(obj).length !== 0 && obj.constructor === Object);\n}\n\n/**\n * Resolves the component templates using the template factory.\n * @private\n */\nfunction resolveComponentTemplates(): boolean {\n    TemplateFactory.resolveTemplates();\n    return true;\n}\n\n/**\n * Helper method which clears the normalized templates and marks\n * the indicator as `false`, so another resolve run is possible\n * @private\n */\nfunction markComponentTemplatesAsNotResolved(): boolean {\n    TemplateFactory.getNormalizedTemplateRegistry().clear();\n    return true;\n}\n","/**\n * @module core/factory/entity\n */\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\nexport default {\n    addEntityDefinition,\n    getEntityDefinition,\n    getDefinitionRegistry,\n    getRawEntityObject,\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    getPropertyBlacklist,\n    getRequiredProperties,\n    getAssociatedProperties,\n    getTranslatableProperties,\n};\n\n/**\n * Registry which holds all entity definitions.\n *\n * @type {Map<String, Object>}\n */\nconst entityDefinitions = new Map();\n\n/**\n * @param {String} entityName\n * @param {Object} entityDefinition\n * @returns {boolean}\n */\nfunction addEntityDefinition(entityName, entityDefinition = {}) {\n    if (!entityName || !entityName.length) {\n        return false;\n    }\n\n    entityDefinitions.set(entityName, entityDefinition);\n    return true;\n}\n\n/**\n * Get an entity definition by name.\n *\n * @param {String} entityName\n * @returns {Object}\n */\nfunction getEntityDefinition(entityName) {\n    return entityDefinitions.get(entityName);\n}\n\n/**\n * Get the complete entity definition registry.\n *\n * @returns {Map<any, any>}\n */\nfunction getDefinitionRegistry() {\n    return entityDefinitions;\n}\n\n/**\n * Returns a raw entity object by its schema with empty properties.\n *\n * @param {Object} schema\n * @param {Boolean} deep\n * @return {{}}\n */\nfunction getRawEntityObject(schema, deep = true) {\n    const properties = schema.properties;\n    const obj = {};\n\n    Object.keys(properties).forEach((property) => {\n        const propSchema = properties[property];\n\n        obj[property] = getRawPropertyValue(propSchema, deep);\n    });\n\n    return obj;\n}\n\n/**\n * Returns the default value for a property type to symbolize an empty state.\n *\n * @param {Object} propSchema\n * @param {Boolean} deep\n * @return {*}\n */\nfunction getRawPropertyValue(propSchema, deep = true) {\n    if (propSchema.type === 'boolean') {\n        return null;\n    }\n\n    if (propSchema.type === 'string') {\n        return '';\n    }\n\n    if (propSchema.type === 'number' || propSchema.type === 'integer') {\n        return null;\n    }\n\n    if (propSchema.type === 'array') {\n        return [];\n    }\n\n    // OneToOne Relation\n    if (propSchema.type === 'object' && propSchema.entity) {\n        if (deep === true) {\n            return getRawEntityObject(getEntityDefinition(propSchema.entity), false);\n        }\n\n        return {};\n    }\n\n    // JSON Field\n    if (propSchema.type === 'object') {\n        if (deep === true && propSchema.properties) {\n            return getRawEntityObject(propSchema, false);\n        }\n\n        return {};\n    }\n\n    if (propSchema.type === 'string' && propSchema.format === 'date-time') {\n        return '';\n    }\n\n    return null;\n}\n\n// eslint-disable-next-line inclusive-language/use-inclusive-words\nfunction getPropertyBlacklist() {\n    return [\n        'createdAt',\n        'updatedAt',\n        'uploadedAt',\n        'childCount',\n        'versionId',\n        'links',\n        'extensions',\n        'mimeType',\n        'fileExtension',\n        'metaData',\n        'fileSize',\n        'fileName',\n        'mediaType',\n        'mediaFolder',\n    ];\n}\n\n/**\n * Get a list of all entity properties which are required.\n *\n * @param {String} entityName\n * @returns {Array}\n */\nfunction getRequiredProperties(entityName) {\n    if (!entityDefinitions.has(entityName)) {\n        return [];\n    }\n\n    const definition = entityDefinitions.get(entityName);\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    const blocklist = getPropertyBlacklist();\n    const requiredFields = [];\n\n    definition.required.forEach((property) => {\n        if (!blocklist.includes(property)) {\n            requiredFields.push(property);\n        }\n    });\n\n    return requiredFields;\n}\n\n/**\n * Get a list of all entity properties which are translatable.\n *\n * @param {String} entityName\n * @return {Array}\n */\nfunction getTranslatableProperties(entityName) {\n    if (!entityDefinitions.has(entityName)) {\n        return [];\n    }\n\n    const definition = entityDefinitions.get(entityName);\n\n    return definition.translatable;\n}\n\n/**\n * Returns the associated properties of an entity.\n *\n * @param {String} entityName\n * @returns {Array}\n */\nfunction getAssociatedProperties(entityName) {\n    const definition = entityDefinitions.get(entityName);\n\n    return Object.keys(definition.properties).reduce((accumulator, propName) => {\n        const prop = definition.properties[propName];\n        if (prop.type === 'array' && hasOwnProperty(prop, 'entity')) {\n            accumulator.push(propName);\n        }\n\n        return accumulator;\n    }, []);\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type { Store } from 'vuex';\n\nclass State {\n    public _registerProperty(name: string, property: $TSFixMe): this {\n        Object.defineProperty(this, name, {\n            value: property,\n            writable: false,\n            enumerable: true,\n            configurable: true,\n        });\n\n        return this;\n    }\n\n    public _registerPrivateProperty(name: string, property: $TSFixMe): this {\n        Object.defineProperty(this, name, {\n            value: property,\n            writable: false,\n            enumerable: true,\n            configurable: true,\n        });\n\n        return this;\n    }\n\n    public _registerGetterMethod(name: string, getMethod: $TSFixMeFunction, setMethod: $TSFixMeFunction): this {\n        Object.defineProperty(this, name, {\n            get: getMethod,\n            set: setMethod,\n            enumerable: true,\n            configurable: true,\n        });\n\n        return this;\n    }\n}\n\ninterface FullState extends State {\n    _store: Store<VuexRootState>,\n    list: () => (keyof VuexRootState)[],\n    get: <NAME extends keyof VuexRootState>(name: NAME) => VuexRootState[NAME],\n    getters: Store<VuexRootState>['getters'],\n    commit: Store<VuexRootState>['commit'],\n    dispatch: Store<VuexRootState>['dispatch'],\n    // eslint-disable-next-line max-len\n    watch: Store<VuexRootState>['watch'],\n    subscribe: Store<VuexRootState>['subscribe'],\n    subscribeAction: Store<VuexRootState>['subscribeAction'],\n    registerModule: Store<VuexRootState>['registerModule'],\n    unregisterModule: Store<VuexRootState>['unregisterModule'],\n}\n\nexport default function stateFactory(): FullState {\n    // force the additional properties (added in \"state.init\")\n    return new State() as FullState;\n}\n","type ServiceObject = {\n    get: <SN extends keyof ServiceContainer>(serviceName: SN) => ServiceContainer[SN],\n    list: () => (keyof ServiceContainer)[],\n    register: <SN extends keyof ServiceContainer>(serviceName: SN, service: ServiceContainer[SN]) => void,\n    registerMiddleware: typeof Shopware.Application.addServiceProviderMiddleware,\n    registerDecorator: typeof Shopware.Application.addServiceProviderDecorator,\n}\n\n/**\n * Return the ServiceObject (Shopware.Service().myService)\n * or direct access the services (Shopware.Service('myService')\n */\nfunction serviceAccessor<SN extends keyof ServiceContainer>(serviceName: SN): ServiceContainer[SN]\nfunction serviceAccessor(): ServiceObject\nfunction serviceAccessor<SN extends keyof ServiceContainer>(serviceName?: SN): ServiceContainer[SN] | ServiceObject {\n    if (serviceName) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return Shopware.Application.getContainer('service')[serviceName];\n    }\n\n    const serviceObject: ServiceObject = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        get: (name) => Shopware.Application.getContainer('service')[name],\n        list: () => Shopware.Application.getContainer('service').$list(),\n        register: (name, service) => Shopware.Application.addServiceProvider(name, service),\n        registerMiddleware: (...args) => Shopware.Application.addServiceProviderMiddleware(...args),\n        registerDecorator: (...args) => Shopware.Application.addServiceProviderDecorator(...args),\n    };\n\n    return serviceObject;\n}\n\nexport default serviceAccessor;\n","export default (publicObject, privateObject) => {\n    return (function ClassesBuilder() {\n        // public functions\n        const Classes = function Classes() {\n            Object.entries(publicObject).forEach(([key, value]) => {\n                Object.defineProperty(this, key, {\n                    value,\n                    configurable: true,\n                    enumerable: true,\n                    writable: true,\n                });\n            });\n        };\n\n        // private functions\n        Classes.prototype = privateObject;\n\n        return new Classes();\n    }());\n};\n","/**\n * @module core/factory/mixin\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    register,\n    getByName,\n    getMixinRegistry,\n};\n\n/**\n * Registry which holds all mixins\n *\n * @type {Map}\n */\nconst mixinRegistry = new Map();\n\n/**\n * Get the complete mixin registry\n *\n * @returns {Map}\n */\nfunction getMixinRegistry() {\n    return mixinRegistry;\n}\n\n/**\n * Register a new mixin\n *\n * @param {String} mixinName\n * @param {Object} [mixin={}]\n * @returns {Boolean|Object}\n */\nfunction register(mixinName, mixin = {}) {\n    if (!mixinName || !mixinName.length) {\n        warn(\n            'MixinFactory',\n            'A mixin always needs a name.',\n            mixin,\n        );\n        return false;\n    }\n\n    if (mixinRegistry.has(mixinName)) {\n        warn(\n            'MixinFactory',\n            `The mixin \"${mixinName}\" is already registered. Please select a unique name for your mixin.`,\n            mixin,\n        );\n        return false;\n    }\n\n    mixinRegistry.set(mixinName, mixin);\n\n    return mixin;\n}\n\n/**\n * Get a mixin by its name\n *\n * @param mixinName\n * @returns {any | undefined}\n */\nfunction getByName(mixinName) {\n    if (!mixinRegistry.has(mixinName)) {\n        throw new Error(`The mixin \"${mixinName}\" is not registered.`);\n    }\n\n    return mixinRegistry.get(mixinName);\n}\n","/**\n * @module core/factory/filter\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    getRegistry,\n    register,\n    getByName,\n};\n\n\ninterface FilterRegistry extends Map<string, FilterTypes[keyof FilterTypes]> {\n    get: <A extends string>(key: A) => FilterTypes[A];\n}\n\n/**\n * @description Registry which holds all filter\n */\nconst filterRegistry: FilterRegistry = new Map();\n\n/**\n * @description Empty function, used as the default parameter for the register method\n *\n * @deprecated tag:v6.5.0 - will be removed\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = (): void => {};\n\n/**\n * Factory name\n */\nconst name = 'FilterFactory';\n\n/**\n * Get the complete filter registry\n */\nfunction getRegistry(): FilterRegistry {\n    return filterRegistry;\n}\n\n/**\n * @description Register a new filter\n *\n * @deprecated tag:v6.5.0 - second parameter filterFactoryMethod will be required in future version\n */\nfunction register<A extends string>(\n    filterName: A,\n    filterFactoryMethod: FilterTypes[A] = noop,\n): boolean {\n    if (!filterName || !filterName.length) {\n        warn(\n            name,\n            'A filter always needs a name',\n        );\n        return false;\n    }\n\n    if (filterRegistry.has(filterName)) {\n        warn(\n            name,\n            `The filter \"${filterName}\" is already registered. Please select a unique name for your filter.`,\n        );\n        return false;\n    }\n\n    filterRegistry.set(filterName, filterFactoryMethod);\n\n    return true;\n}\n\n/**\n * @description Get a filter by its name\n *\n * @deprecated tag:v6.5.0 - return type noopType will be removed\n */\nfunction getByName<A extends string>(filterName: A): FilterTypes[A] {\n    return filterRegistry.get(filterName);\n}\n","/**\n * @module core/factory/directive\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    registerDirective,\n    getDirectiveByName,\n    getDirectiveRegistry,\n};\n\n/**\n * Registry which holds all registered directives.\n *\n * @type {Map<String, Object>}\n */\nconst directiveRegistry = new Map();\n\n/**\n * Registers a new directive.\n *\n * @param {String} name\n * @param {Object} [directive={}]\n * @returns {boolean}\n */\nfunction registerDirective(name, directive = {}) {\n    if (!name || !name.length) {\n        warn('DirectiveFactory', 'A directive always needs a name.', directive);\n        return false;\n    }\n\n    if (directiveRegistry.has(name)) {\n        warn('DirectiveFactory', `A directive with the name ${name} already exists.`, directive);\n        return false;\n    }\n\n    directiveRegistry.set(name, directive);\n\n    return true;\n}\n\n/**\n * Get a directive by its name.\n *\n * @param {String} name\n * @returns {Object | undefined}\n */\nfunction getDirectiveByName(name) {\n    return directiveRegistry.get(name);\n}\n\n/**\n * Get the complete registry of directives.\n *\n * @returns {Map<String, Object>}\n */\nfunction getDirectiveRegistry() {\n    return directiveRegistry;\n}\n","/**\n * @module core/factory/locale\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport { object } from 'src/core/service/util.service';\n\nexport default {\n    getLocaleByName,\n    getLocaleRegistry,\n    register,\n    extend,\n    getBrowserLanguage,\n    getBrowserLanguages,\n    getLastKnownLocale,\n    storeCurrentLocale,\n};\n\n/**\n * Registry which holds all locales including the interface translations\n *\n * @type {Map}\n */\nconst localeRegistry = new Map();\n\n/**\n * Defines the default locale\n *\n * @type {String}\n */\nconst defaultLocale = 'en-GB';\n\n/**\n * Defines the key of the localStorage item\n *\n * @type {String}\n */\nconst localStorageKey = 'sw-admin-locale';\n\n/**\n * Get the complete locale registry\n * @returns {Map}\n */\nfunction getLocaleRegistry() {\n    return localeRegistry;\n}\n\n/**\n * Registers a new locale\n *\n * @param {String} localeName\n * @param {Object} [localeMessages={}]\n * @returns {Boolean|String}\n */\nfunction register(localeName, localeMessages = {}) {\n    if (!localeName || !localeName.length) {\n        warn(\n            'LocaleFactory',\n            'A locale always needs a name',\n        );\n        return false;\n    }\n\n    if (localeName.split('-').length < 2) {\n        warn(\n            'LocaleFactory',\n            'The locale name should follow the RFC-4647 standard e.g. [languageCode-countryCode] for example \"en-US\"',\n        );\n        return false;\n    }\n\n    if (localeRegistry.has(localeName)) {\n        warn(\n            'LocaleFactory',\n            `The locale \"${localeName}\" is registered already.`,\n            'Please use the extend method to extend and override certain keys',\n        );\n\n        return false;\n    }\n\n    localeRegistry.set(localeName, localeMessages);\n\n    return localeName;\n}\n\n/**\n * Extends a given locale with the provided translations\n *\n * @param {String} localeName\n * @param {Object} [localeMessages={}]\n * @returns {Boolean|String}\n */\nfunction extend(localeName, localeMessages = {}) {\n    if (localeName.split('-').length < 2) {\n        warn(\n            'LocaleFactory',\n            'The locale name should follow the RFC-4647 standard e.g. [languageCode-countryCode]] for example \"en-US\"',\n        );\n        return false;\n    }\n\n    if (!localeRegistry.has(localeName)) {\n        warn(\n            'LocaleFactory',\n            `The locale \"${localeName}\" doesn't exists. Please use the register method to register a new locale`,\n        );\n        return false;\n    }\n\n    const originalMessages = localeRegistry.get(localeName);\n    localeRegistry.set(localeName, object.merge(originalMessages, localeMessages));\n\n    return localeName;\n}\n\n/**\n * Get translations for a specific locale\n *\n * @param {String} localeName\n * @returns {Boolean|String}\n */\nfunction getLocaleByName(localeName) {\n    if (!localeRegistry.has(localeName)) {\n        return false;\n    }\n\n    return localeRegistry.get(localeName);\n}\n\n/**\n * Checks if the {@link localStorage} has an item associated to the {@link localStorageKey} key.\n *\n * @returns {String}\n */\nfunction getLastKnownLocale() {\n    let localeName = getBrowserLanguage();\n\n    if (window.localStorage.getItem(localStorageKey) !== null) {\n        localeName = window.localStorage.getItem(localStorageKey);\n    }\n\n    return localeName;\n}\n\n/**\n * Terminates the browser language and checks if the language is in the registry.\n * If this is not the case the {@link defaultLocale} will be returned.\n *\n * @returns {String}\n */\nfunction getBrowserLanguage() {\n    const shortLanguageCodes = new Map();\n    localeRegistry.forEach((messages, locale) => {\n        const lang = locale.split('-')[0];\n        shortLanguageCodes.set(lang.toLowerCase(), locale);\n    });\n\n    let matchedLanguage = null;\n\n    getBrowserLanguages().forEach((language) => {\n        if (!matchedLanguage && localeRegistry.has(language)) {\n            matchedLanguage = language;\n        }\n\n        if (!matchedLanguage && shortLanguageCodes.has(language)) {\n            matchedLanguage = shortLanguageCodes.get(language);\n        }\n    });\n\n    return matchedLanguage || defaultLocale;\n}\n\n/**\n * Looks up all available browser languages.\n *\n * @returns {Array}\n */\nfunction getBrowserLanguages() {\n    const languages = [];\n\n    if (navigator.language) {\n        languages.push(navigator.language);\n    }\n\n    // Chrome only\n    if (navigator.languages?.length) {\n        navigator.languages.forEach((lang) => {\n            languages.push(lang);\n        });\n    }\n\n    if (navigator.userLanguage) {\n        languages.push(navigator.userLanguage);\n    }\n\n    if (navigator.systemLanguage) {\n        languages.push(navigator.systemLanguage);\n    }\n\n    return languages;\n}\n\n/**\n * Sets up the DOM and http client to use the provided locale\n *\n * @param {String} localeName\n * @param {AxiosInstance|null} [httpClient=null]\n * @returns {String}\n */\nfunction storeCurrentLocale(localeName) {\n    // Necessary for testing purpose\n    if (typeof document === 'object') {\n        const shortLocaleName = localeName.split('-')[0];\n        document.querySelector('html').setAttribute('lang', shortLocaleName);\n    }\n\n    window.localStorage.setItem(localStorageKey, localeName);\n\n    return localeName;\n}\n","/**\n * @module core/factory/shortcut\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    getPathByCombination,\n    getShortcutRegistry,\n    register,\n};\n\n/**\n * Registry which holds all shortcuts including the interface translations\n *\n * @type {Map}\n */\nconst shortcutRegistry = new Map();\n\n/**\n * Get the path for a specific combination\n *\n * @param {String} combination\n * @returns {Boolean|String}\n */\nfunction getPathByCombination(combination) {\n    if (!shortcutRegistry.has(combination)) {\n        return false;\n    }\n\n    return shortcutRegistry.get(combination);\n}\n\n/**\n * Get the complete shortcut registry\n * @returns {Map}\n */\nfunction getShortcutRegistry() {\n    return shortcutRegistry;\n}\n\n/**\n * Registers a new shortcut\n *\n * @param {String} combination\n * @param {String} [path='']\n * @returns {Boolean|String}\n */\nfunction register(combination, path = '') {\n    if (!combination || !combination.length) {\n        warn(\n            'ShortcutFactory',\n            'A combination can\\'t be blank.',\n        );\n        return false;\n    }\n\n    if (shortcutRegistry.has(combination)) {\n        warn(\n            'ShortcutFactory',\n            `The combination \"${combination}\" is registered already.`,\n        );\n\n        return false;\n    }\n\n    shortcutRegistry.set(combination, path);\n\n    return combination;\n}\n","/**\n * @module core/factory/directive\n */\n\nexport default {\n    addBootPromise,\n    getBootPromises,\n};\n\n/**\n * Registry which holds all registered plugin promises.\n *\n * @type {Array}\n */\nconst pluginPromises = [];\n\n/**\n * Add a new plugin promise.\n *\n * @returns {Object}\n */\nfunction addBootPromise() {\n    let promiseResolve;\n\n    pluginPromises.push(new Promise((resolve) => {\n        promiseResolve = resolve;\n    }));\n\n    return promiseResolve;\n}\n\n/**\n * Get all plugin promises.\n *\n * @returns {Array}\n */\nfunction getBootPromises() {\n    return pluginPromises;\n}\n","/**\n * @module core/factory/api-service\n */\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nexport default {\n    getRegistry,\n    register,\n    getByName,\n    getServices,\n    has,\n};\n\n/**\n * Registry which holds all registered api services\n *\n * @type {Map}\n */\nconst apiServiceRegistry = new Map();\n\n/**\n * Factory name\n * @type {string}\n */\nconst name = 'ApiServiceFactory';\n\n/**\n * Get the complete apiService registry\n *\n * @returns {Map<String, Function>}\n */\nfunction getRegistry() {\n    return apiServiceRegistry;\n}\n\n/**\n * Register a new apiService\n *\n * @param {String} apiServiceName\n * @param {Function} [apiService=null]\n * @returns {boolean}\n */\nfunction register(apiServiceName, apiService = null) {\n    if (!apiServiceName || !apiServiceName.length) {\n        warn(\n            name,\n            'A apiService always needs a name',\n        );\n        return false;\n    }\n\n    if (has(apiServiceName)) {\n        warn(\n            name,\n            `The apiService \"${apiServiceName}\" is already registered. Please select a unique name for your apiService.`,\n        );\n        return false;\n    }\n\n    apiServiceRegistry.set(apiServiceName, apiService);\n\n    return true;\n}\n\nfunction has(apiServiceName) {\n    return apiServiceRegistry.has(apiServiceName);\n}\n\n/**\n * Get a api service by its name\n *\n * @param {String|any} apiServiceName\n * @returns {any|undefined}\n */\nfunction getByName(apiServiceName) {\n    return apiServiceRegistry.get(apiServiceName);\n}\n\nfunction getServices() {\n    return Array.from(apiServiceRegistry).reduce((accumulator, [key, value]) => {\n        accumulator[key] = value;\n        return accumulator;\n    }, {});\n}\n","const scalarTypes = ['uuid', 'int', 'text', 'password', 'float', 'string', 'blob', 'boolean', 'date'];\nconst jsonTypes = ['json_list', 'json_object'];\n\nexport function getScalarTypes() {\n    return scalarTypes;\n}\n\nexport function getJsonTypes() {\n    return jsonTypes;\n}\n\nexport default class EntityDefinition {\n    constructor({ entity, properties }) {\n        this.entity = entity;\n        this.properties = properties;\n    }\n\n    getEntity() {\n        return this.entity;\n    }\n\n    /**\n     * returns an Object containing all primary key fields of the definition\n     * @returns {Object}\n     */\n    getPrimaryKeyFields() {\n        return this.filterProperties((property) => {\n            return property.flags.primary_key === true;\n        });\n    }\n\n    /**\n     * returns an Object containing all associations fields of this definition\n     * @returns {Object}\n     */\n    getAssociationFields() {\n        return this.filterProperties((property) => {\n            return property.type === 'association';\n        });\n    }\n\n    /**\n     * returns all toMany associationFields\n     * @returns {Object}\n     */\n    getToManyAssociations() {\n        return this.filterProperties((property) => {\n            if (property.type !== 'association') {\n                return false;\n            }\n\n            return ['one_to_many', 'many_to_many'].includes(property.relation);\n        });\n    }\n\n    /**\n     * returns all toMany associationFields\n     * @returns {Object}\n     */\n    getToOneAssociations() {\n        return this.filterProperties((property) => {\n            if (property.type !== 'association') {\n                return false;\n            }\n\n            return ['one_to_one', 'many_to_one'].includes(property.relation);\n        });\n    }\n\n    /**\n     * returns all translatable fields\n     * @returns {Object}\n     */\n    getTranslatableFields() {\n        return this.filterProperties((property) => {\n            return this.isTranslatableField(property);\n        });\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n    getRequiredFields() {\n        return this.filterProperties((property) => {\n            return property.flags.required === true;\n        });\n    }\n\n    /**\n     * Filter field definitions by a given predicate\n     * @param {Function} filter\n     */\n    filterProperties(filter) {\n        if (typeof filter !== 'function') {\n            return {};\n        }\n\n        const result = {};\n        Object.keys(this.properties).forEach((propertyName) => {\n            if (filter(this.properties[propertyName]) === true) {\n                result[propertyName] = this.properties[propertyName];\n            }\n        });\n\n        return result;\n    }\n\n    getField(name) {\n        return this.properties[name];\n    }\n\n    forEachField(callback) {\n        if (typeof callback !== 'function') {\n            return;\n        }\n\n        Object.keys(this.properties).forEach((propertyName) => {\n            callback(this.properties[propertyName], propertyName, this.properties);\n        });\n    }\n\n    isScalarField(field) {\n        return scalarTypes.includes(field.type);\n    }\n\n    isJsonField(field) {\n        return jsonTypes.includes(field.type);\n    }\n\n    isJsonObjectField(field) {\n        return field.type === 'json_object';\n    }\n\n    isJsonListField(field) {\n        return field.type === 'json_list';\n    }\n\n    isToManyAssociation(field) {\n        return field.type === 'association' && ['one_to_many', 'many_to_many'].includes(field.relation);\n    }\n\n    isToOneAssociation(field) {\n        return field.type === 'association' && ['many_to_one', 'one_to_one'].includes(field.relation);\n    }\n\n    isTranslatableField(field) {\n        return (field.type === 'string' || field.type === 'text') && field.flags.translatable === true;\n    }\n}\n","import EntityDefinition, { getScalarTypes, getJsonTypes } from 'src/core/data/entity-definition.data';\n\nexport default {\n    getScalarTypes,\n    getJsonTypes,\n    getDefinitionRegistry,\n    has,\n    get,\n    add,\n    remove,\n    getTranslatedFields,\n    getAssociationFields,\n    getRequiredFields,\n};\n\nconst entityDefinitionRegistry = new Map();\n\nfunction getDefinitionRegistry() {\n    return entityDefinitionRegistry;\n}\n\n/**\n * Checks the EntityDefinition object for a given entity\n * @param entityName\n * @returns {Boolean}\n */\nfunction has(entityName) {\n    return entityDefinitionRegistry.has(entityName);\n}\n\n/**\n * returns the EntityDefinition object for a given entity\n * @param entityName\n * @returns {EntityDefinition}\n */\nfunction get(entityName) {\n    const definition = entityDefinitionRegistry.get(entityName);\n\n    if (typeof definition === 'undefined') {\n        throw new Error(`[EntityDefinitionRegistry] No definition found for entity type ${entityName}`);\n    }\n\n    return definition;\n}\n\n/**\n * takes a plain schema object and converts it to a shopware EntityDefinition\n * @param entityName\n * @param schema\n */\nfunction add(entityName, schema) {\n    entityDefinitionRegistry.set(entityName, new EntityDefinition(schema));\n}\n\n/**\n * removes an entity definition from the registry\n * @param entityName\n * @returns {boolean}\n */\nfunction remove(entityName) {\n    return entityDefinitionRegistry.delete(entityName);\n}\n\nfunction getTranslatedFields(entityName) {\n    return get(entityName).getTranslatableFields();\n}\n\nfunction getAssociationFields(entityName) {\n    return get(entityName).getAssociationFields();\n}\n\nfunction getRequiredFields(entityName) {\n    return get(entityName).getRequiredFields();\n}\n","/**\n * @module core/factory/worker-notification\n */\nimport MiddlewareHelper from 'src/core/helper/middleware.helper';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\nimport types from 'src/core/service/utils/types.utils';\n\nexport default {\n    getRegistry,\n    register,\n    remove,\n    override,\n    initialize,\n    resetHelper,\n};\n\n/**\n * Registry which holds all worker notification middleware functions\n * @type {Map}\n */\nconst registry = new Map();\n\n/**\n * Middleware helper instance\n * @type {MiddlewareHelper}\n */\nlet helper = new MiddlewareHelper();\n\n/**\n * Indicates if the middleware helper is initialized\n * @type {boolean}\n */\nlet initialized = false;\n\n/**\n * Returns the registry\n * @return {Map}\n */\nfunction getRegistry() {\n    return registry;\n}\n\n/**\n * Registers a new worker notification middleware function.\n * @param {String} name\n * @param {Object} opts\n * @return {boolean}\n */\nfunction register(name, opts) {\n    if (!name || !name.length) {\n        return false;\n    }\n\n    if (registry.has(name)) {\n        return false;\n    }\n\n    if (!validateOpts(opts)) {\n        return false;\n    }\n\n    registry.set(name, opts);\n    return true;\n}\n\n/**\n * Removes an existing worker notification middleware function.\n * @param {String} name\n * @return {boolean}\n */\nfunction remove(name) {\n    if (!name || !name.length) {\n        return false;\n    }\n\n    if (!registry.has(name)) {\n        return false;\n    }\n\n    registry.delete(name);\n    return true;\n}\n\n/**\n * Overrides an existing worker notification middleware function.\n * @param {String} name\n * @param {Object} opts\n * @return {boolean}\n */\nfunction override(name, opts) {\n    if (!registry.has(name)) {\n        return false;\n    }\n\n    if (!validateOpts(opts)) {\n        return false;\n    }\n\n    registry.set(name, opts);\n    return true;\n}\n\n/**\n * Initializes the middleware helper. If the helper was initialized before, the instance of the helper will be returned.\n * @return {MiddlewareHelper}\n */\nfunction initialize() {\n    if (initialized) {\n        return helper;\n    }\n\n    initialized = true;\n    getRegistry().forEach(({ fn, name }) => {\n        helper.use(middlewareFunctionWrapper(name, fn));\n    });\n    return helper;\n}\n\n/**\n * Helper method which wraps the middleware function.\n * @param {String} name\n * @param {Function} fn\n * @return {Function}\n */\nfunction middlewareFunctionWrapper(name, fn) {\n    return (next, data) => {\n        const entry = data.queue.find(\n            (q) => q.name === name,\n        ) || null;\n        const mergedData = { ...data, ...{ entry, name } };\n\n        if (entry === null) {\n            next();\n        } else {\n            fn.call(null, next, mergedData);\n        }\n    };\n}\n\n/**\n * Validates the options object\n * @param {Object} opts\n * @return {Boolean|boolean}\n */\nfunction validateOpts(opts) {\n    return (hasOwnProperty(opts, 'name')\n        && opts.name.length > 0\n        && hasOwnProperty(opts, 'fn')\n        && types.isFunction(opts.fn));\n}\n\n/**\n * Helper method for unit tests\n * @return {boolean}\n */\nfunction resetHelper() {\n    helper = new MiddlewareHelper();\n    initialized = false;\n    return true;\n}\n","/**\n * @module core/data/ShopwareError\n */\nimport utils from 'src/core/service/util.service';\n\n/**\n * @class\n * @description Simple data structure to hold information about Api Errors.\n * @memberOf module:core/data/ShopwareError\n */\nexport default class ShopwareError {\n    constructor({\n        code,\n        meta = {},\n        status = '',\n        detail = '',\n    } = {}) {\n        if (typeof code !== 'string' || code === '') {\n            throw new Error('[ShopwareError] can not identify error by code');\n        }\n\n        this._id = utils.createId();\n        this._code = code;\n        this._parameters = meta.parameters;\n        this._status = status;\n        this._detail = detail;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get code() {\n        return this._code;\n    }\n\n    set code(value) {\n        this._code = value;\n    }\n\n    get parameters() {\n        return this._parameters;\n    }\n\n    set parameters(value) {\n        this._parameters = value;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    set status(value) {\n        this._status = value;\n    }\n\n    get detail() {\n        return this._detail;\n    }\n\n    set detail(value) {\n        this._trace = value;\n    }\n}\n","import { warn } from 'src/core/service/utils/debug.utils';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * The flat tree converts a collection of flat objects into a data tree hierarchy.\n * @class\n */\nclass FlatTree {\n    /**\n     * Creates a new instance of registered nodes.\n     *\n     * @memberOf FlatTree\n     * @constructor\n     */\n    constructor(sorting = () => 0, defaultPosition = 1) {\n        this._registeredNodes = new Map();\n        this._defaultPosition = defaultPosition;\n        this._sorting = sorting;\n    }\n\n    /**\n     * Converts the flat objects into the data tree hierarchy\n     *\n     * @returns {Array} registered nodes as a data tree\n     */\n    convertToTree() {\n        return this._tree(this._registeredNodes);\n    }\n\n    /**\n     * Internal method which will be called recursively to build up the tree\n     *\n     * @private\n     * @param {String|undefined} parent\n     * @param {Map|Array} elements\n     * @param {Number} [level=1]\n     * @returns {Array}\n     */\n    _tree(elements, level = 1, parent) {\n        const children = [];\n        elements.forEach((element) => {\n            if (element.parent !== parent) {\n                return;\n            }\n            element.level = level;\n\n            const newParent = element.id || element.path;\n            element.children = this._tree(elements, level + 1, newParent);\n            children.push(element);\n        });\n\n        return children.sort(this._sorting);\n    }\n\n    /**\n     * Adds a new flat node to the {@link #_registeredNodes} collection map.\n     *\n     * @chainable\n     * @param {Object} node\n     * @returns {FlatTree}\n     */\n    add(node) {\n        const nodeIdentifier = node.id || node.path;\n\n        if (!nodeIdentifier) {\n            warn(\n                'FlatTree',\n                'The node needs an \"id\" or \"path\" property. Abort registration.',\n                node,\n            );\n            return this;\n        }\n\n        if (hasOwnProperty(node, 'link') && !hasOwnProperty(node, 'target')) {\n            node.target = '_self';\n        }\n\n        if (!node.position) {\n            node.position = this._defaultPosition;\n        }\n\n        if (this._registeredNodes.has(nodeIdentifier)) {\n            warn(\n                'FlatTree',\n                `Tree contains node with unique identifier ${nodeIdentifier} already.`,\n                'Please remove it first before adding a new one.',\n                this._registeredNodes.get(nodeIdentifier),\n            );\n            return this;\n        }\n\n        this._registeredNodes.set(nodeIdentifier, node);\n        return this;\n    }\n\n    /**\n     * Removes a node using the provided nodeIdentifier, if it is registered.\n     *\n     * @chainable\n     * @param {String} nodeIdentifier - router path of the node\n     * @returns {FlatTree}\n     */\n    remove(nodeIdentifier) {\n        this._registeredNodes.delete(nodeIdentifier);\n        return this;\n    }\n\n    /**\n     * Returns the collection of the registered nodes for the data tree\n     *\n     * @deprecated tag:v6.5.0 will be removed as registered nodes should be private\n     *\n     * @returns {Map}\n     */\n    getRegisteredNodes() {\n        return this._registeredNodes;\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 will be removed. treat as private\n     */\n    get defaultPosition() {\n        return this._defaultPosition;\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 set in constructor. treat as private\n     */\n    set defaultPosition(value) {\n        this._defaultPosition = value;\n    }\n}\n\nexport default FlatTree;\n","/**\n * @module core/helper/device\n */\nimport utils from 'src/core/service/util.service';\n\n/**\n * The DeviceHelper provides methods to get device and browser information like the current viewport size.\n * The helper methods can be accessed with \"this.$device\" in every Vue component.\n *\n * @constructor\n */\nfunction DeviceHelper() {\n    this.listeners = [];\n\n    window.addEventListener('resize', this.resize.bind(this));\n}\n\nDeviceHelper.prototype = Object.assign(DeviceHelper.prototype, {\n    /**\n     * Resize method which will be fired when the user resizes the browser.\n     *\n     * @returns {void}\n     */\n    resize: utils.debounce(function debouncedResize(event) {\n        this.listeners.forEach((listenerObject) => {\n            listenerObject.listener.call(listenerObject.scope, event);\n        });\n    }, 100),\n\n    /**\n     * Registers an event register for the browser \"resize\" event.\n     *\n     * @param {Function} callback\n     * @param {Any} scope\n     * @param {Object} component\n     * @returns {number}\n     */\n    onResize({ listener, scope, component }) {\n        if (!scope) {\n            scope = window;\n        }\n        this.listeners.push({ listener, scope, component });\n        return this.listeners.length - 1;\n    },\n\n    removeResizeListener(component) {\n        this.listeners = this.listeners.filter((listenerObject) => {\n            return component !== listenerObject.component;\n        });\n\n        return true;\n    },\n\n    /**\n     * Returns the user agent string.\n     *\n     * @returns {string}\n     */\n    getUserAgent() {\n        return window.navigator.userAgent;\n    },\n\n    /**\n     * Returns the current viewport with in pixels.\n     * @returns {number}\n     */\n    getViewportWidth() {\n        return window.innerWidth;\n    },\n\n    /**\n     * Returns the current viewport height in pixels.\n     *\n     * @returns {number}\n     */\n    getViewportHeight() {\n        return window.innerHeight;\n    },\n\n    /**\n     * Returns the pixel ratio of the device as a number.\n     *\n     * @returns {number}\n     */\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    },\n\n    /**\n     * Returns the device screen width in pixels.\n     *\n     * @returns {number}\n     */\n    getScreenWidth() {\n        return window.screen.width;\n    },\n\n    /**\n     * Returns the device screen height in pixels.\n     *\n     * @returns {number}\n     */\n    getScreenHeight() {\n        return window.screen.height;\n    },\n\n    /**\n     * Returns information about the screen orientation.\n     *\n     * @returns {object}\n     */\n    getScreenOrientation() {\n        return window.screen.orientation;\n    },\n\n    /**\n     * Returns the current browser language as a string.\n     *\n     * @returns {string}\n     */\n    getBrowserLanguage() {\n        return window.navigator.language;\n    },\n\n    /**\n     * Returns the current platform (e.g. \"Win32\") as a string.\n     *\n     * @returns {string}\n     */\n    getPlatform() {\n        return window.navigator.platform;\n    },\n\n    /**\n     * Returns the system-key (e.g. \"CTRL\") as a string depending of the current operating system.\n     *\n     * @returns {string}\n     */\n    getSystemKey() {\n        return this.getPlatform().indexOf('Mac') > -1\n            ? 'CTRL'\n            : 'ALT';\n    },\n});\n\nexport default DeviceHelper;\n","import types from 'src/core/service/utils/types.utils';\n\nfunction castValueToNullIfNecessary(value) {\n    if (value === '' || typeof value === 'undefined') {\n        return null;\n    }\n    return value;\n}\n\nexport default class ChangesetGenerator {\n    /**\n     * returns the primary key data of an entity\n     * @param entity\n     */\n    getPrimaryKeyData(entity) {\n        const definition = Shopware.EntityDefinition.get(entity.getEntityName());\n        const pkFields = definition.getPrimaryKeyFields();\n        const pkData = {};\n\n        Object.keys(pkFields).forEach((fieldName) => {\n            pkData[fieldName] = entity[fieldName];\n        });\n\n        return pkData;\n    }\n\n    /**\n     * Creates the change set for the provided entity.\n     * @param entity\n     * @returns {{changes: *, deletionQueue: Array}}\n     */\n    generate(entity) {\n        const deletionQueue = [];\n        const changes = this.recursion(entity, deletionQueue);\n\n        return { changes, deletionQueue };\n    }\n\n    /**\n     * @private\n     * @param {Entity} entity\n     * @param deletionQueue\n     * @returns {null}\n     */\n    recursion(entity, deletionQueue) {\n        const definition = Shopware.EntityDefinition.get(entity.getEntityName());\n        const changes = {};\n\n        const origin = entity.getOrigin();\n        const draft = entity.getDraft();\n\n        definition.forEachField((field, fieldName) => {\n            if (field.readOnly) {\n                return;\n            }\n\n            if (field.flags.write_protected) {\n                return;\n            }\n\n            let draftValue = castValueToNullIfNecessary(draft[fieldName]);\n            let originValue = castValueToNullIfNecessary(origin[fieldName]);\n\n            if (definition.isScalarField(field)) {\n                if (draftValue !== originValue) {\n                    changes[fieldName] = draftValue;\n                }\n                return;\n            }\n\n            if (field.flags.extension) {\n                draftValue = castValueToNullIfNecessary(draft.extensions[fieldName]);\n                originValue = castValueToNullIfNecessary(origin.extensions[fieldName]);\n            }\n\n            if (definition.isJsonField(field)) {\n                if (!types.isEqual(originValue, draftValue)) {\n                    if (Array.isArray(draftValue) && draftValue.length <= 0) {\n                        changes[fieldName] = [];\n                        return;\n                    }\n\n                    changes[fieldName] = draftValue;\n                }\n\n                return;\n            }\n\n            if (field.type !== 'association') {\n                // if we don't know what kind of field we write send complete draft\n                if (draftValue !== originValue) {\n                    changes[fieldName] = draftValue;\n                }\n                return;\n            }\n\n            switch (field.relation) {\n                case 'one_to_many': {\n                    const associationChanges = this.handleOneToMany(field, draftValue, originValue, deletionQueue);\n                    if (associationChanges.length > 0) {\n                        changes[fieldName] = associationChanges;\n                    }\n                    break;\n                }\n                case 'many_to_many': {\n                    const associationChanges = this.handleManyToMany(draftValue, originValue, deletionQueue, field, entity);\n                    if (associationChanges.length > 0) {\n                        changes[fieldName] = associationChanges;\n                    }\n                    break;\n                }\n                case 'one_to_one': {\n                    if (!draftValue) {\n                        return;\n                    }\n\n                    const change = this.recursion(draftValue, deletionQueue);\n                    if (change !== null) {\n                        // if a change is detected, add id as identifier for updates\n                        change.id = draftValue.id;\n                        changes[fieldName] = change;\n                    }\n                    break;\n                }\n                case 'many_to_one':\n                default: {\n                    break;\n                }\n            }\n        });\n\n        if (Object.keys(changes).length > 0) {\n            return { ...this.getPrimaryKeyData(entity), ...changes };\n        }\n\n        return null;\n    }\n\n    /**\n     * @private\n     * @param {EntityCollection} draft\n     * @param {EntityCollection} origin\n     * @param {Object} field\n     * @param {Entity} entity\n     * @param deletionQueue\n     * @returns {Array}\n     */\n    handleManyToMany(draft, origin, deletionQueue, field, entity) {\n        const changes = [];\n        const originIds = origin.getIds();\n\n        draft.forEach((nested) => {\n            if (!originIds.includes(nested.id)) {\n                changes.push({ id: nested.id });\n            }\n        });\n\n        originIds.forEach((id) => {\n            if (!draft.has(id)) {\n                const primary = {\n                    [field.local]: entity.id,\n                    [field.reference]: id,\n                };\n\n                deletionQueue.push({\n                    route: draft.source,\n                    key: id,\n                    entity: field.mapping,\n                    primary: primary,\n                });\n            }\n        });\n\n        return changes;\n    }\n\n    /**\n     * @private\n     * @param {Object} field\n     * @param {EntityCollection} draft\n     * @param {EntityCollection} origin\n     * @param {Array} deletionQueue\n     * @returns {Array}\n     */\n    handleOneToMany(field, draft, origin, deletionQueue) {\n        const changes = [];\n        const originIds = origin.getIds();\n\n        // check for new and updated items\n        draft.forEach((entity) => {\n            // new record?\n            if (!originIds.includes(entity.id)) {\n                let change = this.recursion(entity, []);\n\n                if (change === null) {\n                    change = { id: entity.id };\n                } else {\n                    change.id = entity.id;\n                }\n\n                changes.push(change);\n\n                return;\n            }\n\n            // check if some properties changed\n            const change = this.recursion(entity, deletionQueue);\n            if (change !== null) {\n                // if a change is detected, add id as identifier for updates\n                change.id = entity.id;\n                changes.push(change);\n            }\n        });\n\n        if (field.flags?.cascade_delete) {\n            originIds.forEach((id) => {\n                if (!draft.has(id)) {\n                    const primary = {\n                        [field.primary]: id,\n                    };\n\n                    // still existing?\n                    deletionQueue.push({\n                        route: draft.source,\n                        key: id,\n                        entity: field.entity,\n                        primary,\n                    });\n                }\n            });\n            return changes;\n        }\n\n        if (!field.referenceField) {\n            return changes;\n        }\n\n        originIds.forEach((id) => {\n            if (!draft.has(id)) {\n                const data = { id };\n                data[field.referenceField] = null;\n                changes.push(data);\n            }\n        });\n\n        return changes;\n    }\n}\n","import Entity, { assignSetterMethod } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport Vue from 'vue';\n\nassignSetterMethod((draft, property, value) => {\n    // @ts-expect-error\n    Shopware.Application.view.setReactive(draft as Vue, property, value);\n});\n\nexport default Entity;\n","import utils from 'src/core/service/util.service';\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport Entity from './entity.data';\nimport EntityCollection from './entity-collection.data';\nimport Criteria from './criteria.data';\n\nexport default class EntityFactory {\n    /**\n     * Creates a new entity for the provided entity name.\n     * Returns null for unknown entities.\n     *\n     * @param {String} entityName\n     * @param {String|null} id\n     * @param {Object} context\n     * @returns {Entity|null}\n     */\n    create(entityName, id, context) {\n        id = id || utils.createId();\n\n        const definition = Shopware.EntityDefinition.get(entityName);\n\n        if (!definition) {\n            warn('Entity factory', `No schema found for entity ${entityName}`);\n            return null;\n        }\n\n        const data = {\n            extensions: {},\n        };\n\n        const toManyAssociations = definition.getToManyAssociations();\n        Object.keys(toManyAssociations).forEach((property) => {\n            const associatedProperty = toManyAssociations[property].entity;\n\n            if (toManyAssociations[property].flags.extension) {\n                data.extensions[property] = this.createCollection(\n                    entityName,\n                    `${id}/extensions`,\n                    property,\n                    associatedProperty,\n                    context,\n                );\n            } else {\n                data[property] = this.createCollection(entityName, id, property, associatedProperty, context);\n            }\n        });\n\n        const entity = new Entity(id, entityName, data);\n        entity.markAsNew();\n\n        return entity;\n    }\n\n    /**\n     * @private\n     * @param {String} entity\n     * @param {String} id\n     * @param {String} property\n     * @param {String} related\n     * @param {Object} context\n     * @returns {EntityCollection}\n     */\n    createCollection(entity, id, property, related, context) {\n        const subRoute = property.replace(/_/g, '-');\n        const route = entity.replace(/_/g, '-');\n        const source = `/${route}/${id}/${subRoute}`;\n\n        const criteria = new Criteria();\n        criteria.setLimit(10);\n        criteria.setPage(1);\n\n        return new EntityCollection(source, related, context, criteria);\n    }\n}\n","import types from 'src/core/service/utils/types.utils';\nimport { AxiosResponse } from 'axios';\nimport type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport EntityClass from './entity.data';\nimport Criteria from './criteria.data';\nimport EntityCollection from './entity-collection.data';\n\ntype meta = {\n    totalCountMode: number,\n    total: number,\n}\n\ntype links = {\n    [relation: string]: string,\n}\n\ntype row = {\n    id: string,\n    type: string,\n    attributes: {\n        [key: string|symbol]: unknown\n    },\n    links: links,\n    relationships: {\n        [key: string|symbol]: unknown\n    },\n    meta?: meta,\n}\n\ntype data = {\n    data: [row],\n    included: [row],\n    links: {\n        [relation: string]: string,\n    },\n    meta?: meta,\n    aggregations: [],\n}\n\ntype field = {\n    entity: string,\n}\n\ntype schema = {\n    properties: {\n        [key: string|symbol]: field,\n    },\n    isToManyAssociation: (field: field) => boolean,\n    isToOneAssociation: (field: field) => boolean,\n}\n\ntype toOneData = {\n    data: {\n        type: string,\n        id: string\n    }\n}\n\nexport default class EntityHydrator {\n    cache: { [key: string]: Entity } = {};\n\n    /**\n     * Hydrates the repository response to a SearchResult class with all entities and aggregations\n     */\n    hydrateSearchResult(\n        route: string,\n        entityName: string,\n        response: AxiosResponse<data>,\n        context: apiContext,\n        criteria: Criteria,\n    ): EntityCollection {\n        this.cache = {};\n        const entities = [] as Entity[];\n\n        response.data.data.forEach((item) => {\n            const entity = this.hydrateEntity(entityName, item, response.data, context, criteria);\n\n            if (entity !== null) {\n                entities.push(entity);\n            }\n        });\n\n        return new EntityCollection(\n            route,\n            entityName,\n            context,\n            criteria,\n            entities,\n            response.data.meta?.total,\n            response.data.aggregations,\n        );\n    }\n\n    /**\n     * Hydrates a collection of entities. Nested association will be hydrated into collections or entity classes.\n     */\n    hydrate(\n        route: string,\n        entityName: string,\n        data: data,\n        context: apiContext,\n        criteria: Criteria,\n    ): EntityCollection {\n        this.cache = {};\n\n        const collection = new EntityCollection(route, entityName, context, criteria);\n\n        data.data.forEach((row) => {\n            const entity = this.hydrateEntity(entityName, row, data, context, criteria);\n\n            if (entity !== null) {\n                collection.add(entity);\n            }\n        });\n\n        return collection;\n    }\n\n    /**\n     * @private\n     */\n    hydrateEntity(\n        entityName: string,\n        row: row,\n        response: data,\n        context: apiContext,\n        criteria: Criteria,\n    ): Entity|null {\n        if (!row) {\n            return null;\n        }\n\n        const id = row.id;\n        const cacheKey = `${entityName}-${id}`;\n\n        if (this.cache[cacheKey]) {\n            return this.cache[cacheKey];\n        }\n\n        const schema = Shopware.EntityDefinition.get(entityName);\n        // currently translation can not be hydrated\n        if (!schema) {\n            return null;\n        }\n\n        const data = row.attributes;\n        data.id = id;\n\n        // hydrate empty json fields\n        Object.entries(data).forEach(([attributeKey, attributeValue]) => {\n            const field = schema.getField(attributeKey) as string;\n\n            if (!field) {\n                return;\n            }\n\n            if (!schema.isJsonField(field)) {\n                return;\n            }\n\n            if (Array.isArray(attributeValue) && attributeValue.length <= 0 && schema.isJsonObjectField(field)) {\n                data[attributeKey] = {};\n                return;\n            }\n\n            const isEmptyObject = !Array.isArray(attributeValue)\n                && typeof attributeValue === 'object'\n                && attributeValue !== null\n                && Object.keys(attributeValue).length <= 0\n                && schema.isJsonListField(field);\n\n            if (isEmptyObject) {\n                data[attributeKey] = [];\n            }\n        });\n\n        Object.keys(row.relationships).forEach((property) => {\n            const value = row.relationships[property] as data;\n\n            if (property === 'extensions') {\n                data[property] = this.hydrateExtensions(id, value, schema, response, context, criteria);\n            }\n\n            const field = (schema.properties as {[key: string]: unknown})[property] as { entity: string};\n\n            if (!field) {\n                return true;\n            }\n\n            if (schema.isToManyAssociation(field)) {\n                data[property] = this.hydrateToMany(criteria, property, value, field.entity, context, response);\n\n                return true;\n            }\n\n            if (schema.isToOneAssociation(field) && types.isObject(value.data)) {\n                const nestedEntity = this.hydrateToOne(criteria, property, value, response, context);\n\n                // currently translation can not be hydrated\n                if (nestedEntity) {\n                    data[property] = nestedEntity;\n                }\n            }\n\n            return true;\n        });\n\n        const e = new EntityClass(id, entityName, data);\n\n        this.cache[cacheKey] = e;\n\n        return e;\n    }\n\n    /**\n     * Hydrates a to one association entity. The entity data is stored in the response included\n     */\n    hydrateToOne(\n        criteria: Criteria,\n        property: string,\n        value: unknown,\n        response: data,\n        context: apiContext,\n    ): Entity|null {\n        const associationCriteria = this.getAssociationCriteria(criteria, property);\n\n        const nestedRaw = this.getIncluded((value as toOneData).data.type, (value as toOneData).data.id, response);\n\n        return this.hydrateEntity((value as toOneData).data.type, nestedRaw, response, context, associationCriteria);\n    }\n\n    getAssociationCriteria(criteria: Criteria, property: string): Criteria {\n        if (criteria.hasAssociation(property)) {\n            return criteria.getAssociation(property);\n        }\n        return new Criteria();\n    }\n\n    /**\n     * Hydrates a many association (one to many and many to many) collection and hydrates the related entities\n     * @private\n     */\n    hydrateToMany(\n        criteria: Criteria,\n        property: string,\n        value: data,\n        entityName: string,\n        context: apiContext,\n        response: data,\n    ): EntityCollection {\n        const associationCriteria = this.getAssociationCriteria(criteria, property);\n        const apiResourcePath = context?.apiResourcePath as string ?? '';\n\n        const url = value.links.related.substr(\n            value.links.related.indexOf(apiResourcePath)\n            +\n            apiResourcePath.length,\n        );\n\n        const collection = new EntityCollection(url, entityName, context, associationCriteria);\n\n        if (value.data === null) {\n            return collection;\n        }\n\n        value.data.forEach((link) => {\n            const nestedRaw = this.getIncluded(link.type, link.id, response);\n            const nestedEntity = this.hydrateEntity(\n                link.type,\n                nestedRaw,\n                response,\n                context,\n                associationCriteria,\n            );\n\n            if (nestedEntity) {\n                collection.add(nestedEntity);\n            }\n        });\n        return collection;\n    }\n\n    /**\n     * Finds an included entity\n     * @private\n     */\n    getIncluded(entityName: string, id: string, response: data): row {\n        // @ts-expect-error\n        return response.included.find((included) => {\n            return (included.id === id && included.type === entityName);\n        });\n    }\n\n    /**\n     * @private\n     */\n    hydrateExtensions(\n        id: string,\n        relationship: data,\n        schema: schema,\n        response: data,\n        context: apiContext,\n        criteria: Criteria,\n    ): {[key: string]: unknown} {\n        const extension = this.getIncluded('extension', id, response);\n\n        const data = Object.assign({}, extension.attributes);\n\n        Object.keys(extension.relationships).forEach((property) => {\n            const value = extension.relationships[property] as data;\n\n            const field = schema.properties[property];\n\n            if (!field) {\n                return true;\n            }\n\n            if (schema.isToManyAssociation(field)) {\n                data[property] = this.hydrateToMany(criteria, property, value, field.entity, context, response);\n\n                return true;\n            }\n\n            if (schema.isToOneAssociation(field) && types.isObject(value.data)) {\n                const nestedEntity = this.hydrateToOne(criteria, property, value, response, context);\n\n                if (nestedEntity) {\n                    data[property] = nestedEntity;\n                }\n            }\n\n            return true;\n        });\n\n        return data;\n    }\n}\n","import { AxiosInstance, AxiosResponse } from 'axios';\nimport type { Entity } from '@shopware-ag/admin-extension-sdk/es/data/_internals/Entity';\nimport Criteria from './criteria.data';\nimport EntityHydrator from './entity-hydrator.data';\nimport ChangesetGenerator from './changeset-generator.data';\nimport ErrorResolver from './error-resolver.data';\nimport EntityFactory from './entity-factory.data';\nimport EntityDefinition from './entity-definition.data';\nimport EntityCollection from './entity-collection.data';\n\ntype options = {\n    [key: string]: unknown\n};\n\ntype IdSearchResult = {\n    total: number,\n    data: string[],\n};\n\ntype DeletionQueue = {\n    route: string,\n    key: string,\n    entity: string,\n    primary: unknown,\n}[]\n\ntype Changeset = {\n    changes: Changeset,\n    deletionQueue: DeletionQueue\n};\n\ntype Operation = {\n    action: string,\n    payload: unknown[],\n    entity: string,\n};\n\ntype Error = {\n    source: {\n        pointer: string,\n    }\n};\n\ntype ErrorResponse = {\n    response?: {\n        data?: {\n            errors?: Error[],\n            data: {\n                [key: string]: {\n                    result: {\n                        errors: Error[],\n                    }[],\n                }\n            },\n        }\n    }\n};\n\nexport default class Repository {\n    route: string;\n\n    entityName: string;\n\n    httpClient: AxiosInstance;\n\n    hydrator: EntityHydrator;\n\n    changesetGenerator: ChangesetGenerator;\n\n    entityFactory: EntityFactory;\n\n    errorResolver: ErrorResolver;\n\n    options: options;\n\n    constructor(\n        route: string,\n        entityName: string,\n        httpClient: AxiosInstance,\n        hydrator: EntityHydrator,\n        changesetGenerator: ChangesetGenerator,\n        entityFactory: EntityFactory,\n        errorResolver: ErrorResolver,\n        options: options,\n    ) {\n        this.route = route;\n        this.entityName = entityName;\n        this.httpClient = httpClient;\n        this.hydrator = hydrator;\n        this.changesetGenerator = changesetGenerator;\n        this.entityFactory = entityFactory;\n        this.errorResolver = errorResolver;\n        this.options = options;\n    }\n\n    get schema(): EntityDefinition {\n        return Shopware.EntityDefinition.get(this.entityName);\n    }\n\n    /**\n     * Sends a search request to the server to find entity ids for the provided criteria.\n     */\n    searchIds(criteria: Criteria, context = Shopware.Context.api): Promise<IdSearchResult> {\n        const headers = this.buildHeaders(context);\n\n        const url = `/search-ids${this.route}`;\n\n        return this.httpClient\n            .post(url, criteria.parse(), { headers })\n            .then((response) => {\n                return response.data as IdSearchResult;\n            });\n    }\n\n    /**\n     * Sends a search request for the repository entity.\n     */\n    search(criteria: Criteria, context = Shopware.Context.api): Promise<EntityCollection> {\n        const headers = this.buildHeaders(context);\n\n        const url = `/search${this.route}`;\n\n        return this.httpClient\n            .post(url, criteria.parse(), { headers })\n            .then((response) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                return this.hydrator.hydrateSearchResult(this.route, this.entityName, response, context, criteria);\n            });\n    }\n\n    /**\n     * Short hand to fetch a single entity from the server\n     */\n    get(id: string, context = Shopware.Context.api, criteria: Criteria | null = null): Promise<Entity | null> {\n        criteria = criteria || new Criteria();\n        criteria.setIds([id]);\n\n        return this.search(criteria, context).then((result) => {\n            return result.get(id);\n        });\n    }\n\n    /**\n     * Detects all entity changes and send the changes to the server.\n     * If the entity is marked as new, the repository will send a POST create. Updates will be send as PATCH request.\n     * Deleted associations will be send as additional request\n     */\n    save(entity: Entity, context = Shopware.Context.api): Promise<void | AxiosResponse> {\n        if (this.options.useSync === true) {\n            return this.saveWithSync(entity, context);\n        }\n\n        return this.saveWithRest(entity, context);\n    }\n\n    /**\n     * @private\n     */\n    async saveWithRest(entity: Entity, context: apiContext): Promise<void | AxiosResponse> {\n        const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n        if (!this.options.keepApiErrors) {\n            await this.errorResolver.resetApiErrors();\n        }\n\n        await this.sendDeletions(deletionQueue, context);\n        return this.sendChanges(entity, changes, context);\n    }\n\n    /**\n     * @private\n     */\n    async saveWithSync(entity: Entity, context: apiContext): Promise<void | AxiosResponse> {\n        const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n        if (entity.isNew()) {\n            Object.assign(changes || {}, { id: entity.id });\n        }\n\n        const operations = [];\n\n        if (deletionQueue.length > 0) {\n            operations.push(...this.buildDeleteOperations(deletionQueue));\n        }\n\n        if (changes !== null) {\n            operations.push({\n                key: 'write',\n                action: 'upsert',\n                entity: entity.getEntityName(),\n                payload: [changes],\n            });\n        }\n\n        const headers = this.buildHeaders(context);\n        headers['single-operation'] = true;\n\n        if (operations.length <= 0) {\n            return Promise.resolve();\n        }\n\n        if (!this.options.keepApiErrors) {\n            await this.errorResolver.resetApiErrors();\n        }\n\n\n        return this.httpClient\n            .post('_action/sync', operations, { headers })\n            .catch((errorResponse: ErrorResponse) => {\n                const errors: Error[] = [];\n                const result = errorResponse?.response?.data?.errors ?? [];\n\n                result.forEach((error) => {\n                    if (error.source.pointer.startsWith('/write/')) {\n                        error.source.pointer = error.source.pointer.substring(6);\n                        errors.push(error);\n                    }\n                });\n\n                this.errorResolver.handleWriteErrors({ errors }, [{ entity, changes }]);\n                throw errorResponse;\n            });\n    }\n\n    /**\n     * Clones an existing entity\n     */\n    clone(entityId: string, context = Shopware.Context.api, behavior: $TSDangerUnknownObject): Promise<unknown> {\n        if (!entityId) {\n            return Promise.reject(new Error('Missing required argument: id'));\n        }\n\n        return this.httpClient\n            .post(`/_action/clone${this.route}/${entityId}`, behavior, {\n                headers: this.buildHeaders(context),\n            })\n            .then((response) => {\n                return response.data as unknown;\n            });\n    }\n\n    /**\n     * Detects if the entity or the relations has remaining changes which are not synchronized with the server\n     */\n    hasChanges(entity: Entity): boolean {\n        const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n        return changes !== null || deletionQueue.length > 0;\n    }\n\n    /**\n     * Detects changes of all provided entities and send the changes to the server\n     */\n    saveAll(entities: EntityCollection, context = Shopware.Context.api): Promise<unknown> {\n        const promises: Promise<unknown>[] = [];\n\n        entities.forEach((entity) => {\n            promises.push(this.save(entity, context));\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Detects changes of all provided entities and send the changes to the server\n     */\n    async sync(entities: EntityCollection, context = Shopware.Context.api, failOnError = true): Promise<unknown> {\n        const { changeset, deletions } = this.getSyncChangeset(entities);\n\n        if (!this.options.keepApiErrors) {\n            await this.errorResolver.resetApiErrors();\n        }\n\n        await this.sendDeletions(deletions, context);\n        return this.sendUpserts(changeset, failOnError, context);\n    }\n\n    /**\n     * Detects changes of the provided entity and resets its first-level attributes to its origin state\n     */\n    discard(entity: Entity): void {\n        if (!entity) {\n            return;\n        }\n\n        const { changes } = this.changesetGenerator.generate(entity) as Changeset;\n\n        if (!changes) {\n            return;\n        }\n\n        const origin = entity.getOrigin();\n\n        Object.keys(changes).forEach((changedField) => {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            entity[changedField] = origin[changedField];\n        });\n    }\n\n    /**\n     * @private\n     */\n    sendUpserts(changeset: $TSDangerUnknownObject[], failOnError: boolean, context = Shopware.Context.api): Promise<void> {\n        if (changeset.length <= 0) {\n            return Promise.resolve();\n        }\n\n        const payload = changeset.map(({ changes }) => changes);\n        const headers = this.buildHeaders(context);\n        headers['fail-on-error'] = failOnError;\n\n        return this.httpClient.post(\n            '_action/sync',\n            {\n                [this.entityName]: {\n                    entity: this.entityName,\n                    action: 'upsert',\n                    payload,\n                },\n            },\n            { headers },\n        ).then(({ data }) => {\n            if ((data as { success: boolean}).success === false) {\n                throw data;\n            }\n            return Promise.resolve();\n        }).catch((errorResponse: ErrorResponse) => {\n            const errors = this.getSyncErrors(errorResponse);\n            this.errorResolver.handleWriteErrors(\n                { errors },\n                changeset,\n            );\n            throw errorResponse;\n        });\n    }\n\n    /**\n     * @private\n     */\n    getSyncErrors(errorResponse: ErrorResponse): Error[] {\n        if (Shopware.Feature.isActive('FEATURE_NEXT_15815')) {\n            const errors: Error[] = errorResponse?.response?.data?.errors ?? [];\n\n            errors.forEach((current) => {\n                if (!current.source || !current.source.pointer) {\n                    return;\n                }\n\n                const segments = current.source.pointer.split('/');\n\n                // remove first empty element in list\n                if (segments[0] === '') {\n                    segments.shift();\n                }\n                segments.shift();\n\n                current.source.pointer = segments.join('/');\n            });\n\n            return errors;\n        }\n\n        const operation = errorResponse?.response?.data?.data[this.entityName];\n        if (!operation) {\n            return [];\n        }\n\n        return operation.result.reduce((acc, result) => {\n            acc.push(...result.errors);\n            return acc;\n        }, [] as Error[]);\n    }\n\n    /**\n     * @private\n     */\n    getSyncChangeset(entities: EntityCollection): { changeset: $TSDangerUnknownObject[], deletions: DeletionQueue } {\n        return entities.reduce((acc, entity) => {\n            const { changes, deletionQueue } = this.changesetGenerator.generate(entity) as Changeset;\n\n            // @ts-expect-error\n            acc.deletions.push(...deletionQueue);\n\n            if (changes === null) {\n                return acc;\n            }\n\n            const pkData = this.changesetGenerator.getPrimaryKeyData(entity);\n            Object.assign(changes, pkData);\n\n            // @ts-expect-error\n            acc.changeset.push({ entity, changes });\n\n            return acc;\n        }, { changeset: [], deletions: [] });\n    }\n\n    /**\n     * Sends a create request for a many to many relation. This can only be used for many to many repository\n     * where the base route contains already the owner key, e.g. /product/{id}/categories\n     * The provided id contains the associated entity id.\n     */\n    assign(id: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        return this.httpClient.post(`${this.route}`, { id }, { headers });\n    }\n\n    /**\n     * Sends a delete request for the provided id.\n     */\n    delete(id: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        const url = `${this.route}/${id}`;\n        return this.httpClient.delete(url, { headers })\n            .catch((errorResponse: ErrorResponse) => {\n                const errors = errorResponse?.response?.data?.errors?.map((error) => {\n                    return { error, id, entityName: this.entityName };\n                });\n\n                this.errorResolver.handleDeleteError(errors);\n\n                throw errorResponse;\n            });\n    }\n\n    /**\n     * Allows to iterate all ids of the provided criteria.\n     */\n    iterateIds(\n        criteria: Criteria,\n        callback: (ids: string[]) => Promise<void>,\n        context = Shopware.Context.api,\n    ): Promise<unknown> {\n        if (criteria.getLimit() === null) {\n            criteria.setLimit(50);\n        }\n        criteria.setTotalCountMode(1);\n\n        return this.searchIds(criteria, context).then((response) => {\n            const ids = response.data;\n\n            if (ids.length <= 0) {\n                return Promise.resolve();\n            }\n\n            return callback(ids).then(() => {\n                if (ids.length < criteria.getLimit()) {\n                    return Promise.resolve();\n                }\n\n                criteria.setPage(criteria.getPage() + 1);\n\n                return this.iterateIds(criteria, callback);\n            });\n        });\n    }\n\n    /**\n     * Sends a delete request for a set of ids\n     */\n    syncDeleted(ids: string[], context = Shopware.Context.api): Promise<void> {\n        const headers = this.buildHeaders(context);\n\n        headers['fail-on-error'] = true;\n        const payload = ids.map((id) => {\n            return { id };\n        });\n\n        return this.httpClient.post(\n            '_action/sync',\n            {\n                [this.entityName]: {\n                    entity: this.entityName,\n                    action: 'delete',\n                    payload,\n                },\n            },\n            { headers },\n        ).then(({ data }) => {\n            if ((data as {success: boolean}).success === false) {\n                throw data;\n            }\n            return Promise.resolve();\n        }).catch((errorResponse: ErrorResponse) => {\n            const syncResult = errorResponse?.response?.data?.data[this.entityName].result;\n            if (!syncResult) {\n                return;\n            }\n\n            const errors = syncResult.reduce((acc, currentResult, index) => {\n                if (currentResult.errors) {\n                    currentResult.errors.forEach((error) => {\n                        acc.push({ error, entityName: this.entityName, id: ids[index] });\n                    });\n                }\n                return acc;\n            }, [] as { error: Error, entityName: string, id: string }[]);\n            this.errorResolver.handleDeleteError(errors);\n            throw errorResponse;\n        });\n    }\n\n    /**\n     * Creates a new entity for the local schema.\n     * To Many association are initialed with a collection with the corresponding remote api route\n     */\n    create(context = Shopware.Context.api, id: string | null = null): Entity | null {\n        return this.entityFactory.create(this.entityName, id, context) as unknown as Entity;\n    }\n\n    /**\n     * Creates a new version for the provided entity id. If no version id provided, the server\n     * will generate a new version id.\n     * If no version name provided, the server names the new version with `draft %date%`.\n     */\n    createVersion(\n        entityId: string,\n        context = Shopware.Context.api,\n        versionId: string | null = null,\n        versionName: string | null = null,\n    ): Promise<apiContext> {\n        const headers = this.buildHeaders(context);\n        const params: {\n            versionId?: string,\n            versionName?: string,\n        } = {};\n\n        if (versionId) {\n            params.versionId = versionId;\n        }\n        if (versionName) {\n            params.versionName = versionName;\n        }\n\n        const url = `_action/version/${this.entityName.replace(/_/g, '-')}/${entityId}`;\n\n        return this.httpClient.post(url, params, { headers })\n            .then((response: AxiosResponse<{versionId: string}>) => {\n                return { ...context, ...{ versionId: response.data.versionId } };\n            });\n    }\n\n    /**\n     * Sends a request to the server to merge all changes of the provided version id.\n     * The changes are squashed into a single change and the remaining version will be removed.\n     */\n    mergeVersion(versionId: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        const url = `_action/version/merge/${this.entityName.replace(/_/g, '-')}/${versionId}`;\n\n        return this.httpClient.post(url, {}, { headers });\n    }\n\n    /**\n     * Deletes the provided version from the server. All changes to this version are reverted\n     */\n    deleteVersion(entityId: string, versionId: string, context = Shopware.Context.api): Promise<AxiosResponse> {\n        const headers = this.buildHeaders(context);\n\n        const url = `/_action/version/${versionId}/${this.entityName.replace(/_/g, '-')}/${entityId}`;\n\n        return this.httpClient.post(url, {}, { headers });\n    }\n\n    /**\n     * @private\n     */\n    sendChanges(entity: Entity, changes: Changeset, context = Shopware.Context.api): Promise<AxiosResponse | void> {\n        const headers = this.buildHeaders(context);\n\n        if (entity.isNew()) {\n            changes = changes || {};\n            Object.assign(changes, { id: entity.id });\n\n            return this.httpClient.post(`${this.route}`, changes, { headers })\n                .catch((errorResponse: ErrorResponse) => {\n                    const errors = errorResponse?.response?.data?.errors;\n                    if (!errors) {\n                        return;\n                    }\n\n                    this.errorResolver.handleWriteErrors({ errors }, [{ entity, changes }]);\n                    throw errorResponse;\n                });\n        }\n\n        if (typeof changes === 'undefined' || changes === null) {\n            return Promise.resolve();\n        }\n\n        return this.httpClient.patch(`${this.route}/${entity.id}`, changes, { headers })\n            .catch((errorResponse: ErrorResponse) => {\n                const errors = errorResponse?.response?.data?.errors;\n                if (!errors) {\n                    return;\n                }\n\n                this.errorResolver.handleWriteErrors({ errors }, [{ entity, changes }]);\n                throw errorResponse;\n            });\n    }\n\n    /**\n     * Process the deletion queue\n     */\n    sendDeletions(\n        queue: DeletionQueue,\n        context = Shopware.Context.api,\n    ): Promise<AxiosResponse[]> {\n        const headers = this.buildHeaders(context);\n        const requests = queue.map((deletion) => {\n            return this.httpClient.delete(`${deletion.route}/${deletion.key}`, { headers })\n                .catch((errorResponse) => {\n                    this.errorResolver.handleDeleteError(errorResponse);\n                    throw errorResponse;\n                });\n        });\n\n        return Promise.all(requests);\n    }\n\n    /**\n     * Builds the request header for read and write operations\n     */\n    buildHeaders(context = Shopware.Context.api): {\n        Accept: string,\n        Authorization: string,\n        'Content-Type': string,\n        'sw-api-compatibility': boolean,\n        'sw-language-id'?: string,\n        'sw-currency-id'?: string,\n        'sw-version-id'?: string,\n        'sw-inheritance'?: boolean,\n        [key: string]: unknown,\n    } {\n        const { hasOwnProperty } = Shopware.Utils.object;\n        const compatibility = hasOwnProperty(this.options, 'compatibility') ? this.options.compatibility : true;\n\n        let headers = {\n            Accept: 'application/vnd.api+json',\n            // @ts-expect-error\n            Authorization: `Bearer ${context.authToken.access}`,\n            'Content-Type': 'application/json',\n            'sw-api-compatibility': compatibility as boolean,\n        };\n\n        if (context.languageId) {\n            headers = Object.assign(\n                { 'sw-language-id': context.languageId },\n                headers,\n            );\n        }\n\n        if (context.currencyId) {\n            headers = Object.assign(\n                { 'sw-currency-id': context.currencyId },\n                headers,\n            );\n        }\n\n        if (context.versionId) {\n            headers = Object.assign(\n                { 'sw-version-id': context.versionId },\n                headers,\n            );\n        }\n\n        if (context.inheritance) {\n            headers = Object.assign(\n                { 'sw-inheritance': context.inheritance },\n                headers,\n            );\n        }\n\n        return headers;\n    }\n\n    /**\n     * @private\n     */\n    buildDeleteOperations(deletionQueue: DeletionQueue): Operation[] {\n        const grouped: {[key: string]: unknown[]} = {};\n\n        deletionQueue.forEach((deletion) => {\n            const entityName = deletion.entity;\n\n            if (!entityName) {\n                return;\n            }\n\n            if (!grouped.hasOwnProperty(entityName)) {\n                grouped[entityName] = [];\n            }\n\n            grouped[entityName].push(deletion.primary);\n        });\n\n        const operations: Operation[] = [];\n\n        Object.keys(grouped).forEach((entity) => {\n            const deletions = grouped[entity];\n\n            operations.push({\n                action: 'delete',\n                payload: deletions,\n                entity: entity,\n            });\n        });\n\n        return operations;\n    }\n}\n","export default class ErrorResolver {\n    constructor() {\n        this.EntityDefinition = Shopware.EntityDefinition;\n        this.ShopwareError = Shopware.Classes.ShopwareError;\n        this.merge = Shopware.Utils.object.merge;\n    }\n\n    resetApiErrors() {\n        return Shopware.State.dispatch('error/resetApiErrors');\n    }\n\n    /**\n     * @param errors\n     * @param changeset\n     */\n    handleWriteErrors({ errors } = {}, changeset) {\n        if (!errors) {\n            throw new Error('[error-resolver] handleWriteError was called without errors');\n        }\n\n        const writeErrors = this.reduceErrorsByWriteIndex(errors);\n\n        this.handleErrors(writeErrors, changeset);\n\n        this.addSystemErrors(writeErrors.system);\n    }\n\n    handleDeleteError(errors) {\n        errors.forEach(({ error, entityName, id }) => {\n            const shopwareError = new this.ShopwareError(error);\n            Shopware.State.dispatch('error/addSystemError', { error: shopwareError });\n\n            Shopware.State.dispatch('error/addApiError', {\n                expression: `${entityName}.${id}`,\n                error: shopwareError,\n            });\n        });\n    }\n\n    reduceErrorsByWriteIndex(errors) {\n        let writeErrors = {\n            system: [],\n        };\n\n        errors.forEach((current) => {\n            if (!current.source || !current.source.pointer) {\n                writeErrors.system.push(new this.ShopwareError(current));\n                return;\n            }\n\n            const segments = current.source.pointer.split('/');\n\n            // remove first empty element in list\n            if (segments[0] === '') {\n                segments.shift();\n            }\n\n            const denormalized = {};\n            const lastIndex = segments.length - 1;\n\n            segments.reduce((pointer, segment, index) => {\n                // skip translations\n                if (segment === 'translations' || segments[index - 1] === 'translations') {\n                    return pointer;\n                }\n\n                if (index === lastIndex) {\n                    pointer[segment] = new this.ShopwareError(current);\n                } else {\n                    pointer[segment] = {};\n                }\n\n                return pointer[segment];\n            }, denormalized);\n\n            writeErrors = this.merge(writeErrors, denormalized);\n        });\n\n        return writeErrors;\n    }\n\n    /**\n     * @private\n     * @param {Object[]} systemErrors\n     */\n    addSystemErrors(systemErrors) {\n        systemErrors.forEach((error) => {\n            Shopware.State.dispatch('error/addSystemError', error);\n        });\n    }\n\n    /**\n     * @private\n     * @param writeErrors\n     * @param changeset\n     */\n    handleErrors(writeErrors, changeset) {\n        changeset.forEach(({ entity, changes }, writeIndex) => {\n            const errors = writeErrors[writeIndex];\n\n            // entity has no errors\n            if (!errors) {\n                return;\n            }\n\n            const definition = this.EntityDefinition.get(entity.getEntityName());\n            Object.keys(errors).forEach((fieldName) => {\n                this.resolveError(fieldName, errors[fieldName], definition, entity, changes);\n            });\n        });\n    }\n\n    /**\n     * @private\n     * @param fieldName\n     * @param error\n     * @param definition\n     * @param entity\n     * @param changeset\n     */\n    resolveError(fieldName, error, definition, entity, changeset) {\n        const field = definition.getField(fieldName);\n\n        if (!field) {\n            this.errorStore.addSystemError(error);\n            return;\n        }\n\n        if (definition.isToManyAssociation(field)) {\n            const associationChanges = this.buildAssociationChangeset(entity, changeset, error, fieldName);\n            this.handleErrors(error, associationChanges);\n            return;\n        }\n\n        if (definition.isToOneAssociation(field)) {\n            this.resolveOneToOneFieldError(\n                `${entity.getEntityName()}.${entity.id}.${fieldName}`,\n                error,\n            );\n            return;\n        }\n\n        if (definition.isJsonField(field)) {\n            this.resolveJsonFieldError(\n                `${entity.getEntityName()}.${entity.id}.${fieldName}`,\n                error,\n            );\n            return;\n        }\n\n        Shopware.State.dispatch('error/addApiError', {\n            expression: this.getErrorPath(entity, fieldName),\n            error: new this.ShopwareError(error),\n        });\n    }\n\n    buildAssociationChangeset(entity, changeset, error, associationName) {\n        if (!Shopware.Utils.object.hasOwnProperty(changeset, associationName)) {\n            Shopware.State.dispatch('error/addApiError', {\n                expression: this.getErrorPath(entity, associationName),\n                error: new this.ShopwareError(error),\n            });\n        }\n\n        return changeset[associationName].map((associationChange) => {\n            const association = entity[associationName].find((a) => {\n                return a.id === associationChange.id;\n            });\n\n            return { entity: association, changes: associationChange };\n        });\n    }\n\n    resolveJsonFieldError(basePath, error) {\n        Object.keys(error).forEach((fieldName) => {\n            const path = `${basePath}.${fieldName}`;\n\n            if (error[fieldName] instanceof this.ShopwareError) {\n                Shopware.State.dispatch('error/addApiError', {\n                    expression: path,\n                    error: error[fieldName],\n                });\n                return;\n            }\n\n            this.resolveJsonFieldError(path, error[fieldName]);\n        });\n    }\n\n    resolveOneToOneFieldError(basePath, error) {\n        Object.keys(error).forEach((fieldName) => {\n            const path = `${basePath}.${fieldName}`;\n\n            if (error[fieldName] instanceof this.ShopwareError) {\n                Shopware.State.dispatch('error/addApiError', {\n                    expression: path,\n                    error: error[fieldName],\n                });\n            }\n        });\n    }\n\n    /**\n     * @private\n     */\n    getErrorPath(entity, currentField) {\n        return `${entity.getEntityName()}.${entity.id}.${currentField}`;\n    }\n}\n","import { types } from '../service/util.service';\n\n/**\n * @module core/data/ErrorStore\n */\n\n/**\n * Stores an Error from the api\n * @param {String} expression\n * @param {ShopwareError} error\n * @param {Object} state\n * @param {function} setReactive\n */\nfunction addApiError(expression, error, state, setReactive = Object.defineProperty) {\n    if (typeof setReactive !== 'function') {\n        throw new Error('[ErrorStore] createApiError: setReactive is not a function');\n    }\n\n    const { store, field } = createPathToError(expression, state.api, setReactive);\n    setReactive(store, field, error);\n}\n\n/**\n * @private\n * @param {String} expression\n * @param {Object} state\n * @param {function} setReactive\n * @returns {{store: Object, field: String}}\n */\nfunction createPathToError(expression, state, setReactive) {\n    const path = expression.split('.');\n    const field = path.pop();\n\n    const store = path.reduce((currentStore, next) => {\n        if (!currentStore.hasOwnProperty(next)) {\n            setReactive(currentStore, next, {});\n        }\n        return currentStore[next];\n    }, state);\n\n    return { store, field };\n}\n\n/**\n * Removes the error for a given\n * @param {String} expression\n * @param {Object} state\n * @param {function} deleteReactive\n */\nfunction removeApiError(expression, state, deleteReactive = null) {\n    const path = expression.split('.');\n    const field = path.pop();\n\n    const store = path.reduce((currentStore, next) => {\n        if (currentStore?.[next]) {\n            return currentStore[next];\n        }\n\n        return null;\n    }, state.api);\n\n    if (store === null) {\n        return;\n    }\n\n    if (typeof deleteReactive === 'function') {\n        deleteReactive(store, field);\n    } else {\n        delete store.field;\n    }\n\n    if (path.length <= 0) {\n        return;\n    }\n\n    if (types.isEmpty(store)) {\n        removeApiError(path.join('.'), state, deleteReactive);\n    }\n}\n\n/**\n * removes all api errors\n * @param state\n */\nfunction resetApiErrors(state) {\n    state.api = {};\n}\n\n/**\n * stores an system error\n * @param {ShopwareError} error\n * @param id\n * @param state\n * @param setReactive\n */\nfunction addSystemError(error, id, state, setReactive = Object.defineProperty) {\n    if (typeof setReactive !== 'function') {\n        throw new Error('[ErrorStore] createApiError: setReactive is not a function');\n    }\n\n    setReactive(state.system, id, error);\n}\n\n/**\n * removes a system error by a given id\n * @param id\n * @param state\n * @param deleteReactive\n */\nfunction removeSystemError(id, state, deleteReactive = null) {\n    if (typeof deleteReactive === 'function') {\n        deleteReactive(state.system, id);\n    } else {\n        delete state.system[id];\n    }\n}\n\nexport default {\n    addApiError,\n    removeApiError,\n    resetApiErrors,\n    addSystemError,\n    removeSystemError,\n};\n","export default class FilterFactory {\n    constructor() {\n        this.STRING_FILTER_INPUT = 'string-filter';\n        this.NUMBER_FILTER_INPUT = 'number-filter';\n        this.DATE_FILTER_INPUT = 'date-filter';\n        this.ASSOCIATION_FILTER_INPUT = 'multi-select-filter';\n        this.BOOLEAN_FILTER_INPUT = 'boolean-filter';\n        this.PRICE_FILTER_INPUT = 'price-filter';\n        this.EXISTENCE_FILTER_INPUT = 'existence-filter';\n    }\n\n    /**\n     * Creates a filter objects for each module.\n     *\n     * @param {String} entityName\n     * @param {Object|null} filters\n     * @returns {Array} filters\n     */\n    create(entityName, filters) {\n        return Object.entries(filters).map(([key, filter]) => {\n            filter.name = key;\n\n            const property = this.getFilterProperties(entityName, filter.property);\n\n            if (filter.type || !property) {\n                return filter;\n            }\n\n            filter.schema = property;\n\n            switch (property.type) {\n                case 'string':\n                    filter.type = this.STRING_FILTER_INPUT;\n                    break;\n                case 'int':\n                    filter.type = this.NUMBER_FILTER_INPUT;\n                    break;\n                case 'date':\n                    filter.type = this.DATE_FILTER_INPUT;\n                    break;\n                case 'association':\n                    filter.type = (property.relation === 'many_to_many' || property.relation === 'many_to_one')\n                        ? this.ASSOCIATION_FILTER_INPUT\n                        : this.EXISTENCE_FILTER_INPUT;\n                    break;\n                case 'boolean':\n                    filter.type = this.BOOLEAN_FILTER_INPUT;\n                    break;\n                default:\n                    filter.type = this.STRING_FILTER_INPUT;\n            }\n\n            if (filter.property === 'price') {\n                filter.type = this.NUMBER_FILTER_INPUT;\n            }\n\n            return filter;\n        });\n    }\n\n    /**\n     * Get filter entity properties\n     *\n     * @param {String} entityName\n     * @param {string} accessor\n     * @returns {Object}\n     */\n    getFilterProperties(entityName, accessor) {\n        const { properties } = Shopware.EntityDefinition.get(entityName);\n\n        const parts = accessor.split('.');\n\n        // Get the first accessor element\n        const first = parts.shift();\n\n        const property = properties[first];\n\n        if (!property) {\n            throw new Error(`No definition found for property ${first}`);\n        }\n\n        // If there are more parts remaining\n        if (parts.length > 0 && property.entity) {\n            // recursion call for nested associations\n            return this.getFilterProperties(property.entity, parts.join('.'));\n        }\n\n        let returnProperty = { ...property };\n\n        // Check for foreign key association\n        if (property.type === 'uuid') {\n            Object.keys(properties).forEach(key => {\n                if (properties[key].type === 'association' && properties[key].localField === first) {\n                    returnProperty = properties[key];\n                }\n            });\n        }\n\n        return returnProperty;\n    }\n}\n","import ChangesetGenerator from './changeset-generator.data';\nimport Criteria from './criteria.data';\nimport Entity from './entity.data';\nimport EntityCollection from './entity-collection.data';\nimport EntityDefinition from './entity-definition.data';\nimport EntityFactory from './entity-factory.data';\nimport EntityHydrator from './entity-hydrator.data';\nimport Repository from './repository.data';\nimport ErrorResolver from './error-resolver.data';\nimport ErrorStore from './error-store.data';\nimport FilterFactory from './filter-factory.data';\n\nexport default {\n    ChangesetGenerator,\n    Criteria,\n    Entity,\n    EntityCollection,\n    EntityDefinition,\n    EntityFactory,\n    EntityHydrator,\n    Repository,\n    ErrorResolver,\n    ErrorStore,\n    FilterFactory,\n};\n","import type Bottle from 'bottlejs';\nimport Vue from 'vue';\nimport type ViewAdapter from './adapter/view.adapter';\nimport { ContextState } from '../app/state/context.store';\n/**\n * @module core/application\n */\n\ninterface bundlesSinglePluginResponse {\n    css?: string | string[],\n    js?: string | string[],\n    html?: string,\n    baseUrl?: null | string,\n    type?: 'app'|'plugin',\n    version?: string,\n}\n\ninterface bundlesPluginResponse {\n    [key: string]: bundlesSinglePluginResponse\n}\n\n/**\n * The application bootstrapper bootstraps the application and registers the necessary\n * and optional parts of the application in a shared DI container which provides you\n * with an easy-to-use way to add new services as well as decoration these services.\n *\n * The bootstrapper provides you with the ability to register middleware for all or specific\n * services too.\n */\nclass ApplicationBootstrapper {\n    public $container: Bottle;\n\n    public view: null | ViewAdapter;\n\n    /**\n     * Provides the necessary class properties for the class to work probably\n     */\n    constructor(container: Bottle) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        const noop = (): void => {};\n        this.$container = container;\n\n        this.view = null;\n\n        // Create an empty DI container for the core initializers & services, so we can separate the core initializers\n        // and the providers\n        this.$container.service('service', noop);\n        this.$container.service('init', noop);\n        this.$container.service('factory', noop);\n    }\n\n    /**\n     * Returns all containers. Use this method if you're want to get initializers in your services.\n     */\n    getContainer<T extends Bottle.IContainerChildren>(containerName: T): Bottle.IContainer[T] {\n        if (typeof containerName === 'string' && this.$container.container[containerName]) {\n            return this.$container.container[containerName];\n        }\n\n        // @ts-expect-error\n        return this.$container.container;\n    }\n\n    /**\n     * Adds a factory to the application. A factory creates objects for the domain.\n     *\n     * The factory will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addFactory('module', (container) => {\n     *    return ModuleFactory();\n     * });\n     */\n    addFactory<T extends keyof FactoryContainer>(\n        name: T,\n        factory: (container: Bottle.IContainer) => FactoryContainer[T],\n    ): ApplicationBootstrapper {\n        this.$container.factory(`factory.${name}`, factory.bind(this));\n\n        return this;\n    }\n\n    /**\n     * Registers a factory middleware for either every factory in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addFactoryMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addFactoryMiddleware('module', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addFactoryMiddleware<SERVICE extends keyof Bottle.IContainer['factory']>(\n        nameOrMiddleware: SERVICE|Bottle.Middleware,\n        middleware? : Bottle.Middleware,\n    ): ApplicationBootstrapper {\n        return this._addMiddleware('factory', nameOrMiddleware, middleware);\n    }\n\n    /**\n     * Registers a decorator for either every factory in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addFactoryDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addFactoryDecorator('module', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addFactoryDecorator(\n        nameOrDecorator: keyof FactoryContainer|Bottle.Decorator,\n        decorator? : Bottle.Decorator,\n    ): ApplicationBootstrapper {\n        return this._addDecorator('factory', nameOrDecorator, decorator);\n    }\n\n    /**\n     * Adds an initializer to the application. An initializer is a necessary part of the application which needs to be\n     * initialized before we can boot up the application.\n     *\n     * The initializer will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addInitializer('httpClient', (container) => {\n     *    return HttpFactory(container.apiContext);\n     * });\n     */\n    addInitializer<I extends keyof InitContainer>(name: I, initializer: () => InitContainer[I]): ApplicationBootstrapper {\n        this.$container.factory(`init.${name}`, initializer.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers optional services & provider for the application. Services are usually\n     * API gateways but can be a simple service.\n     *\n     * The service will be added to a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addServiceProvider('productService', (container) => {\n     *    return new ProductApiService(container.mediaService);\n     * });\n     */\n    addServiceProvider<S extends keyof ServiceContainer>(\n        name: S,\n        provider: (serviceContainer: ServiceContainer) => ServiceContainer[S],\n    ): ApplicationBootstrapper {\n        // @ts-expect-error\n        this.$container.factory(`service.${name}`, provider.bind(this));\n        return this;\n    }\n\n    registerConfig(config: { apiContext?: ContextState['api'], appContext?: ContextState['app'] }): ApplicationBootstrapper {\n        if (config.apiContext) {\n            this.registerApiContext(config.apiContext);\n        }\n        if (config.appContext) {\n            this.registerAppContext(config.appContext);\n        }\n\n        return this;\n    }\n\n    /**\n     * Registers the api context (api path, path to resources etc.)\n     */\n    registerApiContext(context: ContextState['api']): ApplicationBootstrapper {\n        Shopware.Context.api = Shopware.Classes._private.ApiContextFactory(context);\n\n        return this;\n    }\n\n    /**\n     * Registers the app context (firstRunWizard, etc.)\n     */\n    registerAppContext(context: ContextState['app']): ApplicationBootstrapper {\n        Shopware.Context.app = Shopware.Classes._private.AppContextFactory(context);\n\n        return this;\n    }\n\n    /**\n     * Registers a service provider middleware for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addServiceProviderMiddleware<SERVICE extends keyof ServiceContainer>(\n        nameOrMiddleware: SERVICE|Bottle.Middleware,\n        middleware? : Bottle.Middleware,\n    ): ApplicationBootstrapper {\n        return this._addMiddleware('service', nameOrMiddleware, middleware);\n    }\n\n    /**\n     * Helper method which registers a middleware\n     */\n    private _addMiddleware<CONTAINER extends Bottle.IContainerChildren>(\n        containerName: CONTAINER,\n        nameOrMiddleware: keyof Bottle.IContainer[CONTAINER]|Bottle.Middleware,\n        middleware? : Bottle.Middleware,\n    ): ApplicationBootstrapper {\n        if (typeof nameOrMiddleware === 'string' && !!middleware) {\n            this.$container.middleware(`${containerName}.${nameOrMiddleware}`, middleware);\n        }\n\n        if (typeof nameOrMiddleware === 'function' && !!nameOrMiddleware) {\n            this.$container.middleware(containerName, nameOrMiddleware);\n        }\n\n        return this;\n    }\n\n    /**\n     * Initializes the feature flags from context settings\n     */\n    initializeFeatureFlags(): ApplicationBootstrapper {\n        const features = Shopware.Context.app.features;\n\n        if (!features) {\n            throw new Error(`\n                Feature initialization does not work\n                because the context does not contain any features.\n            `);\n        }\n\n        Shopware.Feature.init(features);\n\n        return this;\n    }\n\n    /**\n     * Registers a service provider decorator for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     */\n    addServiceProviderDecorator(\n        nameOrDecorator: keyof ServiceContainer|Bottle.Decorator,\n        decorator? : Bottle.Decorator,\n    ): ApplicationBootstrapper {\n        return this._addDecorator('service', nameOrDecorator, decorator);\n    }\n\n    /**\n     * Helper method which registers a decorator\n     */\n    _addDecorator<CONTAINER extends Bottle.IContainerChildren>(\n        containerName: CONTAINER,\n        nameOrDecorator: keyof Bottle.IContainer[CONTAINER]|Bottle.Decorator,\n        decorator? : Bottle.Decorator,\n    ): ApplicationBootstrapper {\n        if (typeof nameOrDecorator === 'string' && !!decorator) {\n            this.$container.decorator(`${containerName}.${nameOrDecorator}`, decorator);\n        }\n\n        if (typeof nameOrDecorator === 'function' && !!nameOrDecorator) {\n            this.$container.decorator(containerName, nameOrDecorator);\n        }\n\n        return this;\n    }\n\n    /**\n     * Starts the bootstrapping process of the application.\n     */\n    start(config = {}): Promise<void|ApplicationBootstrapper> {\n        return this.initState()\n            .registerConfig(config)\n            .initializeFeatureFlags()\n            .startBootProcess();\n    }\n\n    /**\n     * Get the global state\n     */\n    initState(): ApplicationBootstrapper {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const initaliziation = this.getContainer('init').state;\n\n        if (initaliziation) {\n            return this;\n        }\n\n        throw new Error('State could not be initialized');\n    }\n\n    /**\n     * Returns the root of the application e.g. a new Vue instance\n     */\n    getApplicationRoot(): Vue | boolean {\n        if (!this.view?.root) {\n            return false;\n        }\n\n        return this.view.root;\n    }\n\n    setViewAdapter(viewAdapterInstance: ViewAdapter): void {\n        this.view = viewAdapterInstance;\n    }\n\n    /**\n     * Boot the application depending on login status\n     */\n    startBootProcess(): Promise<void|ApplicationBootstrapper> {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const loginService = this.getContainer('service').loginService;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n        const isUserLoggedIn = loginService.isLoggedIn();\n\n        // if user is not logged in\n        if (!isUserLoggedIn) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            loginService.logout();\n            return this.bootLogin();\n        }\n\n        return this.bootFullApplication();\n    }\n\n    /**\n     * Boot the login.\n     */\n    bootLogin(): Promise<void|ApplicationBootstrapper> {\n        // set force reload after successful login\n        sessionStorage.setItem('sw-login-should-reload', 'true');\n\n        /**\n         * Login Application Booting:\n         *\n         * 1. Initialize all login initializer\n         * 2. Initialize the conversion of dependencies in view adapter\n         * 3. Create the application root\n         */\n\n        return this.initializeLoginInitializer()\n            .then(() => {\n                if (!this.view) {\n                    return Promise.reject();\n                }\n\n                return this.view.initDependencies();\n            })\n            .then(() => this.createApplicationRoot())\n            .catch((error) => this.createApplicationRootError(error));\n    }\n\n    /**\n     * Boot the whole application.\n     */\n    bootFullApplication(): Promise<void | ApplicationBootstrapper> {\n        const initContainer = this.getContainer('init');\n\n        /**\n         * Normal Application Booting:\n         *\n         * 1. Initialize all initializer\n         * 2. Load plugins\n         * 3. Wait until plugin promises are resolved\n         * 4. Initialize the conversion of dependencies in view adapter\n         * 5. Create the application root\n         */\n\n        return this.initializeInitializers(initContainer)\n            .then(() => this.loadPlugins())\n            .then(() => Promise.all(Shopware.Plugin.getBootPromises()))\n            .then(() => {\n                if (!this.view) { return Promise.reject(); }\n\n                return this.view.initDependencies();\n            })\n            .then(() => this.createApplicationRoot())\n            .catch((error) => this.createApplicationRootError(error));\n    }\n\n    /**\n     * Creates the application root and injects the provider container into the\n     * view instance to keep the dependency injection of Vue.js in place.\n     */\n    createApplicationRoot(): Promise<ApplicationBootstrapper> {\n        const initContainer = this.getContainer('init');\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        const router = initContainer.router.getRouterInstance();\n\n        // We're in a test environment, we're not needing an application root\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (Shopware.Context.app.environment === 'testing') {\n            return Promise.resolve(this);\n        }\n\n        if (!this.view) {\n            return Promise.reject(new Error('The ViewAdapter was not defined in the application.'));\n        }\n\n        this.view.init(\n            '#app',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            router,\n            // @ts-expect-error\n            this.getContainer('service'),\n        );\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n        const firstRunWizard = Shopware.Context.app.firstRunWizard;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        if (firstRunWizard && !router.history.current.name.startsWith('sw.first.run.wizard.')) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n            router.push({\n                name: 'sw.first.run.wizard.index',\n            });\n        }\n\n        if (typeof this._resolveViewInitialized === 'function') {\n            this._resolveViewInitialized();\n        }\n\n        return Promise.resolve(this);\n    }\n\n    _resolveViewInitialized: undefined | ((arg0?: unknown) => void);\n\n    /**\n     * You can use this Promise to do things after the view\n     * was initialized.\n     */\n    viewInitialized = new Promise((resolve) => {\n        this._resolveViewInitialized = resolve;\n    })\n\n    /**\n     * Creates the application root and show the error message.\n     */\n    createApplicationRootError(error: unknown): void {\n        console.error(error);\n        const container = this.getContainer('init');\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        const router = container.router.getRouterInstance();\n\n        this.view?.init(\n            '#app',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            router,\n            // @ts-expect-error\n            this.getContainer('service'),\n        );\n\n        // @ts-expect-error\n        if (this.view?.root?.initError) {\n            // @ts-expect-error\n            this.view.root.initError = error;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n        router.push({\n            name: 'error',\n        });\n    }\n\n    /**\n     * Initialize the initializers right away cause these are the mandatory services for the application\n     * to boot successfully.\n     */\n    private initializeInitializers(container: InitContainer, prefix = 'init'): Promise<unknown[]> {\n        const services = container.$list().map((serviceName) => {\n            return `${prefix}.${serviceName}`;\n        });\n        this.$container.digest(services);\n\n        const asyncInitializers = this.getAsyncInitializers(container);\n        return Promise.all(asyncInitializers);\n    }\n\n    /**\n     * Initialize the initializers right away cause these are the mandatory services for the application\n     * to boot successfully.\n     */\n    private initializeLoginInitializer(): Promise<unknown[]> {\n        const loginInitializer = [\n            'login',\n            'baseComponents',\n            'locale',\n            'apiServices',\n            'svgIcons',\n        ];\n\n        const initContainer = this.getContainer('init');\n        loginInitializer.forEach((key) => {\n            const exists = initContainer.hasOwnProperty(key);\n\n            if (!exists) {\n                console.error(`The initializer \"${key}\" does not exists`);\n            }\n        });\n\n        this.$container.digest(loginInitializer.map(key => `init.${key}`));\n\n        const asyncInitializers = this.getAsyncInitializers(loginInitializer);\n        return Promise.all(asyncInitializers);\n    }\n\n    getAsyncInitializers(initializer: InitContainer | string[]): unknown[] {\n        const initContainer = this.getContainer('init');\n        const asyncInitializers: unknown[] = [];\n\n        Object.keys(initializer).forEach((serviceKey) => {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const service = initContainer[serviceKey];\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (service?.constructor?.name === 'Promise') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                asyncInitializers.push(service);\n            }\n        });\n\n        return asyncInitializers;\n    }\n\n    /**\n     * Load all plugins from the server and inject them into the Site.\n     */\n    private async loadPlugins():Promise<(unknown[] | null)[]> {\n        const isDevelopmentMode = process.env.NODE_ENV;\n\n        let plugins: bundlesPluginResponse;\n        // only in webpack dev mode\n        if (isDevelopmentMode === 'development') {\n            const response = await fetch('./sw-plugin-dev.json');\n            plugins = await response.json() as bundlesPluginResponse;\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            plugins = Shopware.Context.app.config.bundles as bundlesPluginResponse;\n        }\n\n        const injectAllPlugins = Object.values(plugins).map((plugin) => this.injectPlugin(plugin));\n\n        // inject iFrames of plugins\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const bundles = Shopware.Context.app.config.bundles as bundlesPluginResponse;\n        Object.entries(bundles).forEach(([bundleName, bundle]) => {\n            if (!bundle.baseUrl) {\n                return;\n            }\n\n            if (isDevelopmentMode === 'development') {\n                // replace the baseUrl with the webpack url of the html file\n                Object.entries(plugins).forEach(([pluginName, entryFiles]) => {\n                    const stringUtils = Shopware.Utils.string;\n                    const camelCasePluginName = stringUtils.upperFirst(stringUtils.camelCase(pluginName));\n\n                    if (bundleName === camelCasePluginName && !!entryFiles.html) {\n                        bundle.baseUrl = entryFiles.html;\n                    }\n\n                    // add origin if not set yet\n                    if (bundle.baseUrl) {\n                        bundle.baseUrl = (new URL(bundle.baseUrl, window.origin)).toString();\n                    }\n                });\n            }\n\n            this.injectIframe({\n                bundleName,\n                bundleVersion: bundle.version,\n                iframeSrc: bundle.baseUrl,\n                bundleType: bundle.type,\n            });\n        });\n\n        if (isDevelopmentMode === 'development') {\n            // inject iFrames of plugins which aren't detected yet from the config (no files in public folder)\n            Object.entries(plugins).forEach(([pluginName, entryFiles]) => {\n                const stringUtils = Shopware.Utils.string;\n                const camelCasePluginName = stringUtils.upperFirst(stringUtils.camelCase(pluginName));\n\n                if (Object.keys(bundles).includes(camelCasePluginName) || !entryFiles.html) {\n                    return;\n                }\n\n                this.injectIframe({\n                    bundleVersion: undefined,\n                    bundleName: camelCasePluginName,\n                    iframeSrc: entryFiles.html,\n                });\n            });\n        }\n\n        return Promise.all(injectAllPlugins);\n    }\n\n    /**\n     * Inject plugin scripts and styles\n     */\n    private async injectPlugin(plugin: bundlesSinglePluginResponse): Promise<unknown[] | null> {\n        let allScripts = [];\n        let allStyles = [];\n\n        // load multiple js scripts\n        if (plugin.js && Array.isArray(plugin.js)) {\n            allScripts = plugin.js.map(src => this.injectJs(src));\n        } else if (plugin.js) {\n            allScripts.push(this.injectJs(plugin.js));\n        }\n\n        // load multiple css styling\n        if (plugin.css && Array.isArray(plugin.css)) {\n            allStyles = plugin.css.map(src => this.injectCss(src));\n        } else if (plugin.css) {\n            allStyles.push(this.injectCss(plugin.css));\n        }\n\n        try {\n            return await Promise.all([...allScripts, ...allStyles]);\n        } catch (_) {\n            console.warn('Error while loading plugin', plugin);\n\n            return null;\n        }\n    }\n\n    /**\n     * Inject js to end of body\n     */\n    private injectJs(scriptSrc: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            // create script tag with src\n            const script = document.createElement('script');\n            script.src = scriptSrc;\n            script.async = true;\n\n            // resolve when script was loaded succcessfully\n            script.onload = ():void => {\n                resolve();\n            };\n\n            // when script get not loaded successfully\n            script.onerror = ():void => {\n                reject();\n            };\n\n            // Append the script to the end of body\n            document.body.appendChild(script);\n        });\n    }\n\n    /**\n     * Inject js to end of head\n     */\n    private injectCss(styleSrc: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            // create style link with src\n            const link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.href = styleSrc;\n\n            // resolve when script was loaded succcessfully\n            link.onload = ():void => {\n                resolve();\n            };\n\n            // when style get not loaded successfully\n            link.onerror = ():void => {\n                reject();\n            };\n\n            // Append the style to the end of head\n            document.head.appendChild(link);\n        });\n    }\n\n    /**\n     * Inject hidden iframes\n     */\n    private injectIframe({\n        bundleName,\n        iframeSrc,\n        bundleVersion,\n        bundleType,\n    }: {\n        bundleName: string,\n        iframeSrc: string,\n        bundleVersion?: string,\n        bundleType?: 'app'|'plugin',\n    }): void {\n        const bundles = Shopware.Context.app.config.bundles;\n        let permissions = null;\n\n        if (bundles && bundles.hasOwnProperty(bundleName)) {\n            permissions = bundles[bundleName].permissions;\n        }\n\n        const extension = {\n            name: bundleName,\n            baseUrl: iframeSrc,\n            version: bundleVersion,\n            type: bundleType,\n        };\n\n        // To keep permissions reactive no matter if empty or not\n        Vue.set(extension, 'permissions', permissions ?? Vue.observable({}));\n\n        Shopware.State.commit('extensions/addExtension', extension);\n    }\n}\n\nexport default ApplicationBootstrapper;\n","import { AxiosInstance } from 'axios';\nimport Repository from './repository.data';\nimport EntityHydrator from './entity-hydrator.data';\nimport ChangesetGenerator from './changeset-generator.data';\nimport EntityFactory from './entity-factory.data';\nimport ErrorResolver from './error-resolver.data';\n\nexport default class RepositoryFactory {\n    private hydrator: EntityHydrator;\n\n    private changesetGenerator: ChangesetGenerator;\n\n    private entityFactory: EntityFactory;\n\n    private httpClient: AxiosInstance;\n\n    private errorResolver: ErrorResolver;\n\n    constructor(\n        hydrator: EntityHydrator,\n        changesetGenerator: ChangesetGenerator,\n        entityFactory: EntityFactory,\n        httpClient: AxiosInstance,\n        errorResolver: ErrorResolver,\n    ) {\n        this.hydrator = hydrator;\n        this.changesetGenerator = changesetGenerator;\n        this.entityFactory = entityFactory;\n        this.httpClient = httpClient;\n        this.errorResolver = errorResolver;\n    }\n\n    /**\n     * Creates a repository for the provided entity.\n     * The route parameter allows to configure a custom route for the entity - used for association loading.\n     */\n    create(entityName: string, route = '', options = {}): Repository {\n        if (!route) {\n            route = `/${entityName.replace(/_/g, '-')}`;\n        }\n\n        const definition = Shopware.EntityDefinition.get(entityName);\n\n        return new Repository(\n            route,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            definition.entity,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.httpClient,\n            this.hydrator,\n            this.changesetGenerator,\n            this.entityFactory,\n            this.errorResolver,\n            options,\n        );\n    }\n}\n","/**\n * @module core/factory/context\n * @param {Object} context\n * @type factory\n */\nexport default function createContext(context = {}) {\n    const Defaults = Shopware.Defaults;\n    const isDevMode = (process.env.NODE_ENV !== 'production');\n    const installationPath = getInstallationPath(context, isDevMode);\n    const apiPath = `${installationPath}/api`;\n\n    const languageId = localStorage.getItem('sw-admin-current-language') || Defaults.systemLanguageId;\n\n    // set initial context\n    Shopware.State.commit('context/setApiInstallationPath', installationPath);\n    Shopware.State.commit('context/setApiApiPath', apiPath);\n    Shopware.State.commit('context/setApiApiResourcePath', `${apiPath}`);\n    Shopware.State.commit('context/setApiAssetsPath', getAssetsPath(context.assetPath, isDevMode));\n    Shopware.State.commit('context/setApiLanguageId', languageId);\n    Shopware.State.commit('context/setApiInheritance', false);\n\n    if (isDevMode) {\n        Shopware.State.commit('context/setApiSystemLanguageId', Defaults.systemLanguageId);\n        Shopware.State.commit('context/setApiLiveVersionId', Defaults.versionId);\n    }\n\n    // assign unknown context information\n    Object.entries(context).forEach(([key, value]) => {\n        Shopware.State.commit('context/addApiValue', { key, value });\n    });\n\n    return Shopware.Context.api;\n}\n\n/**\n * Provides the installation path of the application. The path provides the scheme, host and sub directory.\n *\n * @param {Object} context\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getInstallationPath(context, isDevMode) {\n    if (isDevMode) {\n        return '';\n    }\n\n    let fullPath = '';\n    if (context.schemeAndHttpHost?.length) {\n        fullPath = `${context.schemeAndHttpHost}${context.basePath}`;\n    }\n\n    return fullPath;\n}\n\n/**\n * Provides the path to the assets directory.\n *\n * @param {String} installationPath\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getAssetsPath(installationPath, isDevMode) {\n    if (isDevMode) {\n        return '/bundles/';\n    }\n\n    return `${installationPath}/bundles/`;\n}\n","/**\n * @module core/factory/context\n * @param {Object} context\n * @type factory\n */\nexport default function createContext(context = {}) {\n    // set initial context\n    Shopware.State.commit('context/setAppEnvironment', process.env.NODE_ENV);\n    Shopware.State.commit('context/setAppFallbackLocale', 'en-GB');\n\n    // assign unknown context information\n    Object.entries(context).forEach(([key, value]) => {\n        Shopware.State.commit('context/addAppValue', { key, value });\n    });\n\n    return Shopware.Context.app;\n}\n","/**\n * @module core/factory/router\n */\n\n/**\n * Initializes the router for the application.\n *\n * @constructor\n * @param {VueRouter} Router\n * @param {ViewFactory} View\n * @param {ModuleFactory} moduleFactory\n * @param {LoginService} LoginService\n * @returns {{}}\n */\nexport default function createRouter(Router, View, moduleFactory, LoginService) {\n    const allRoutes = [];\n    const moduleRoutes = [];\n    let instance = null;\n\n    return {\n        addRoutes,\n        addModuleRoutes,\n        createRouterInstance,\n        getViewComponent,\n        getRouterInstance,\n        _setModuleFavicon: setModuleFavicon,\n    };\n\n    /**\n     * Creates the router instance for the application.\n     *\n     * @memberof module:core/factory/router\n     * @param {Object} [opts={}]\n     * @returns {VueRouter} router\n     */\n    function createRouterInstance(opts = {}) {\n        // convert moduleRoutes to view Route\n        const viewModuleRoutes = moduleRoutes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        // convert allRoutes to view Route\n        const viewAllRoutes = allRoutes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        // merge all routes together\n        const mergedRoutes = registerModuleRoutesAsChildren(viewAllRoutes, viewModuleRoutes);\n\n        // assign to view router options\n        const options = Object.assign({}, opts, {\n            routes: mergedRoutes,\n        });\n\n        // create router\n        const router = new Router(options);\n\n        beforeRouterInterceptor(router);\n        instance = router;\n\n        return router;\n    }\n\n    /**\n     * Returns the current router instance\n     *\n     * @returns {VueRouter}\n     */\n    function getRouterInstance() {\n        return instance;\n    }\n\n    /**\n     * Installs the navigation guard interceptor which provides every route, if possible, with the module definition.\n     * This is useful to generalize the route managing.\n     *\n     * @memberof module:core/factory/router\n     * @param {VueRouter} router\n     * @returns {VueRouter} router\n     */\n    function beforeRouterInterceptor(router) {\n        const assetPath = getAssetPath();\n\n        router.beforeEach((to, from, next) => {\n            setModuleFavicon(to, assetPath);\n            const loggedIn = LoginService.isLoggedIn();\n            const tokenHandler = new Shopware.Helper.RefreshTokenHelper();\n            const loginAllowlist = [\n                '/login', '/login/info', '/login/recovery',\n            ];\n\n            if (to.meta && to.meta.forceRoute === true) {\n                return next();\n            }\n\n            // The login route will be called and the user is not logged in, let him see the login.\n            if ((to.name === 'login' ||\n                loginAllowlist.includes(to.path) ||\n                to.path.startsWith('/login/user-recovery/'))\n                && !loggedIn\n            ) {\n                return next();\n            }\n\n            // The login route will be called and the user is logged in, redirect to the dashboard.\n            if ((to.name === 'login' ||\n                loginAllowlist.includes(to.path) ||\n                to.path.startsWith('/login/user-recovery/'))\n                && loggedIn\n            ) {\n                return next({ name: 'core' });\n            }\n\n            // User tries to access a protected route, therefore redirect him to the login.\n            if (!loggedIn) {\n                // Save the last route in case the user gets logged out in the mean time.\n                sessionStorage.setItem('sw-admin-previous-route', JSON.stringify({\n                    fullPath: to.fullPath,\n                    name: to.name,\n                }));\n\n                if (!tokenHandler.isRefreshing) {\n                    return tokenHandler.fireRefreshTokenRequest().then(() => {\n                        return resolveRoute(to, from, next);\n                    }).catch(() => {\n                        return next({\n                            name: 'sw.login.index',\n                        });\n                    });\n                }\n            }\n\n            // User tries to access a route which needs a special privilege\n            if (to.meta.privilege && !Shopware.Service('acl').can(to.meta.privilege)) {\n                return next({ name: 'sw.privilege.error.index' });\n            }\n\n            // User tries to access store page when store is not installed. Then redirect to landing page.\n            if (to.name && to.name.includes('sw.extension.store') && to.matched.length <= 0) {\n                return next({ name: 'sw.extension.store.landing-page' });\n            }\n\n            return resolveRoute(to, from, next);\n        });\n\n        return router;\n    }\n\n    /**\n     * Resolves the route and provides module additional information.\n     *\n     * @param {Route} to\n     * @param {Route} from\n     * @param {Function} next\n     * @return {*}\n     */\n    function resolveRoute(to, from, next) {\n        const moduleInfo = getModuleInfo(to);\n\n        if (moduleInfo !== null) {\n            to.meta.$module = moduleInfo.manifest;\n        }\n\n        const navigationInfo = getNavigationInfo(to, moduleInfo);\n        if (navigationInfo !== null) {\n            to.meta.$current = navigationInfo;\n        }\n\n        return next();\n    }\n\n    /**\n     * Fetches module information based on the route the user wants to enter.\n     * After the module information got fetched the router navigation guard hook will be resolved.\n     *\n     * @param {Route} to\n     * @returns {Route} to\n     */\n    function getModuleInfo(to) {\n        // Provide information about the module\n        const moduleRegistry = moduleFactory.getModuleRegistry();\n\n        let foundModule = null;\n        let parentModule = null;\n\n        moduleRegistry.forEach((module) => {\n            if (foundModule) {\n                return;\n            }\n\n            if (module.routes.has(to.name)) {\n                foundModule = module;\n                return;\n            }\n\n            const parentPath = to.meta?.parentPath ? to.meta.parentPath : undefined;\n\n            if (parentPath && module.routes.has(to.meta.parentPath)) {\n                parentModule = module;\n            }\n        });\n\n        return foundModule || parentModule;\n    }\n\n    /**\n     * Add the current navigation definition to the meta data.\n     *\n     * @param {Route} to\n     * @param {Object} module\n     * @return {Object|null}\n     */\n    function getNavigationInfo(to, module) {\n        if (!module || !module.navigation) {\n            return null;\n        }\n\n        const navigation = module.navigation;\n        let currentNavigationEntry = null;\n\n        navigation.forEach((item) => {\n            if (item.path === to.name) {\n                currentNavigationEntry = item;\n            }\n        });\n\n        return currentNavigationEntry;\n    }\n\n    /**\n     * Registers the module routes as child routes of the root core route to automatically\n     * providing the administration base structure to every module.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} core - Core routes\n     * @param {Array} module - Module routes\n     * @returns {Array} core - new core routes definition\n     */\n    function registerModuleRoutesAsChildren(core, module) {\n        const moduleRootRoutes = [];\n        const moduleNormalRoutes = [];\n\n        // Separate core routes from the normal routes\n        module.forEach((moduleRoute) => {\n            if (moduleRoute.coreRoute === true) {\n                moduleRootRoutes.push(moduleRoute);\n                return;\n            }\n\n            moduleNormalRoutes.push(moduleRoute);\n        });\n\n        core.map((route) => {\n            if (route.root === true) {\n                route.children = moduleNormalRoutes;\n            }\n\n            return route;\n        });\n\n        // Merge the module core routes with the routes from the routes file\n        core = [...core, ...moduleRootRoutes];\n        return core;\n    }\n\n    /**\n     * Registers the core module routes. The provided component name will be remapped to the corresponding\n     * view component.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} routes\n     * @returns {Array} moduleRoutes - converted routes array\n     */\n    function addModuleRoutes(routes) {\n        moduleRoutes.push(...routes);\n\n        return moduleRoutes;\n    }\n\n    /**\n     * Registers module routes to the router. The method will loop through the provided routes\n     * and remaps the component names (e.g. either `route.component` or `route.components`) to\n     * the corresponding view component which should be registered under the same name.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} routes\n     * @returns {Array} allRoutes - converted routes array\n     */\n    function addRoutes(routes) {\n        allRoutes.push(...routes);\n\n        return allRoutes;\n    }\n\n    /**\n     * Converts the `route.component` / `route.components` property which is usually a component name\n     * to a view component, so the router works with component instead of looking up component names\n     * in the internal registry of the view framework.\n     *\n     * @memberof module:core/factory/router\n     * @param {Object} route - Route definition\n     * @returns {Object} route - Converted route definition\n     */\n    function convertRouteComponentToViewComponent(route) {\n        const hasOwnProperty = Shopware.Utils.object.hasOwnProperty;\n\n        if (hasOwnProperty(route, 'components') && Object.keys(route.components).length) {\n            const componentList = {};\n\n            Object.keys(route.components).forEach((componentKey) => {\n                let component = route.components[componentKey];\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                componentList[componentKey] = component;\n            });\n\n            route = iterateChildRoutes(route);\n\n            route.components = componentList;\n        }\n\n        if (typeof route.component === 'string') {\n            route.component = getViewComponent(route.component);\n        }\n\n        return route;\n    }\n\n    /**\n     * Transforms the child routes component list into View components to work with the application.\n     *\n     * @param {Object} route\n     * @returns {Object}\n     */\n    function iterateChildRoutes(route) {\n        if (route.children?.length) {\n            route.children = route.children.map((child) => {\n                let component = child.component;\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                child.component = component;\n\n                if (child.children) {\n                    child = iterateChildRoutes(child);\n                }\n\n                return child;\n            });\n        }\n\n        return route;\n    }\n\n    /**\n     * Get a component using the argument `componentName` from the view layer.\n     *\n     * @memberof module:core/factory/router\n     * @param {String} componentName\n     * @returns {Vue|null} - View component or null\n     */\n    function getViewComponent(componentName) {\n        return Shopware.Application.view.getComponent(componentName);\n    }\n\n    function getAssetPath() {\n        return Shopware.Context.api.assetsPath;\n    }\n\n    function setModuleFavicon(routeDestination, assetsPath) {\n        const moduleInfo = getModuleInfo(routeDestination);\n        if (!moduleInfo) {\n            return false;\n        }\n        const favicon = moduleInfo.manifest.favicon || null;\n        const favRef = document.getElementById('dynamic-favicon');\n\n        favRef.rel = 'shortcut icon';\n\n        const faviconSrc = moduleInfo.manifest.faviconSrc || 'administration';\n        if (assetsPath.length !== 0) {\n            assetsPath = `${assetsPath}${faviconSrc}/`;\n        }\n\n        favRef.href = favicon\n            ? `${assetsPath}static/img/favicon/modules/${favicon}`\n            : `${assetsPath}static/img/favicon/favicon-32x32.png`;\n\n        return true;\n    }\n}\n","export default () => {\n    const context = require.context('./', false, /(?<!index)\\.js|\\.ts$/);\n    return context.keys().reduce((accumulator, item) => {\n        const service = context(item).default;\n\n        accumulator.push(service);\n        return accumulator;\n    }, []);\n};\n","/**\n * @module core/extension-api\n */\n\nimport { ShopwareMessageTypes } from '@shopware-ag/admin-extension-sdk/es/messages.types';\nimport { handleFactory, MessageDataType } from '@shopware-ag/admin-extension-sdk/es/channel';\n\nexport default {\n    get handle(): <MESSAGE_TYPE extends keyof ShopwareMessageTypes>(\n        type: MESSAGE_TYPE,\n        // eslint-disable-next-line max-len\n        method: (data: MessageDataType<MESSAGE_TYPE>, additionalInformation: { _event_: MessageEvent<string>}) => Promise<ShopwareMessageTypes[MESSAGE_TYPE]['responseType']> | ShopwareMessageTypes[MESSAGE_TYPE]['responseType'],\n    ) => () => void {\n        return handleFactory(Shopware.State.get('extensions'));\n    },\n};\n","/**\n * Shopware End Developer API\n * @module Shopware\n * @ignore\n */\nimport Bottle from 'bottlejs';\n\nimport ModuleFactory from 'src/core/factory/module.factory';\nimport ComponentFactory from 'src/core/factory/component.factory';\nimport AsyncComponentFactory from 'src/core/factory/async-component.factory';\nimport TemplateFactory from 'src/core/factory/template.factory';\nimport EntityFactory from 'src/core/factory/entity.factory';\nimport StateFactory from 'src/core/factory/state.factory';\nimport ServiceFactory from 'src/core/factory/service.factory';\nimport ClassesFactory from 'src/core/factory/classes-factory';\nimport MixinFactory from 'src/core/factory/mixin.factory';\nimport FilterFactory from 'src/core/factory/filter.factory';\nimport DirectiveFactory from 'src/core/factory/directive.factory';\nimport LocaleFactory from 'src/core/factory/locale.factory';\nimport ShortcutFactory from 'src/core/factory/shortcut.factory';\nimport PluginBootFactory from 'src/core/factory/plugin-boot.factory';\nimport ApiServiceFactory from 'src/core/factory/api-service.factory';\nimport EntityDefinitionFactory from 'src/core/factory/entity-definition.factory';\nimport WorkerNotificationFactory from 'src/core/factory/worker-notification.factory';\n\nimport Feature from 'src/core/feature';\nimport ShopwareError from 'src/core/data/ShopwareError';\nimport ApiService from 'src/core/service/api.service';\nimport utils from 'src/core/service/util.service';\nimport FlatTreeHelper from 'src/core/helper/flattree.helper';\nimport SanitizerHelper from 'src/core/helper/sanitizer.helper';\nimport DeviceHelper from 'src/core/helper/device.helper';\nimport MiddlewareHelper from 'src/core/helper/middleware.helper';\nimport data from 'src/core/data/index';\nimport ApplicationBootstrapper from 'src/core/application';\n\nimport RefreshTokenHelper from 'src/core/helper/refresh-token.helper';\nimport HttpFactory from 'src/core/factory/http.factory';\nimport RepositoryFactory from 'src/core/data/repository-factory.data';\nimport ApiContextFactory from 'src/core/factory/api-context.factory';\nimport AppContextFactory from 'src/core/factory/app-context.factory';\nimport RouterFactory from 'src/core/factory/router.factory';\nimport ApiServices from 'src/core/service/api';\nimport ModuleFilterFactory from 'src/core/data/filter-factory.data';\nimport ExtensionApi from './extension-api';\n\n/** Initialize feature flags at the beginning */\nif (window.hasOwnProperty('_features_')) {\n    Feature.init(_features_);\n}\n\n// strict mode was set to false because it was defined wrong previously\nBottle.config = { strict: false };\nconst container = new Bottle();\n\nconst application = new ApplicationBootstrapper(container);\n\napplication\n    .addFactory('component', () => {\n        if (Shopware.Feature.isActive('FEATURE_NEXT_19822')) {\n            return AsyncComponentFactory;\n        }\n\n        return ComponentFactory;\n    })\n    .addFactory('template', () => {\n        return TemplateFactory;\n    })\n    .addFactory('module', () => {\n        return ModuleFactory;\n    })\n    .addFactory('entity', () => {\n        return EntityFactory;\n    })\n    .addFactory('state', () => {\n        return StateFactory;\n    })\n    .addFactory('serviceFactory', () => {\n        return ServiceFactory;\n    })\n    .addFactory('classesFactory', () => {\n        return ClassesFactory;\n    })\n    .addFactory('mixin', () => {\n        return MixinFactory;\n    })\n    .addFactory('filter', () => {\n        return FilterFactory;\n    })\n    .addFactory('directive', () => {\n        return DirectiveFactory;\n    })\n    .addFactory('locale', () => {\n        return LocaleFactory;\n    })\n    .addFactory('shortcut', () => {\n        return ShortcutFactory;\n    })\n    .addFactory('plugin', () => {\n        return PluginBootFactory;\n    })\n    .addFactory('apiService', () => {\n        return ApiServiceFactory;\n    })\n    .addFactory('entityDefinition', () => {\n        return EntityDefinitionFactory;\n    })\n    .addFactory('workerNotification', () => {\n        return WorkerNotificationFactory;\n    });\n\nclass ShopwareClass {\n    public Module = {\n        register: ModuleFactory.registerModule,\n        getModuleRegistry: ModuleFactory.getModuleRegistry,\n        getModuleRoutes: ModuleFactory.getModuleRoutes,\n        getModuleByEntityName: ModuleFactory.getModuleByEntityName,\n    };\n\n    public Component = Feature.isActive('FEATURE_NEXT_19822')\n        ? {\n            register: AsyncComponentFactory.register,\n            extend: AsyncComponentFactory.extend,\n            override: AsyncComponentFactory.override,\n            build: AsyncComponentFactory.build,\n            getTemplate: AsyncComponentFactory.getComponentTemplate,\n            getComponentRegistry: AsyncComponentFactory.getComponentRegistry,\n            getComponentHelper: AsyncComponentFactory.getComponentHelper,\n            registerComponentHelper: AsyncComponentFactory.registerComponentHelper,\n            markComponentAsSync: AsyncComponentFactory.markComponentAsSync,\n            isSyncComponent: AsyncComponentFactory.isSyncComponent,\n        }\n        : {\n            register: ComponentFactory.register,\n            extend: ComponentFactory.extend,\n            override: ComponentFactory.override,\n            build: ComponentFactory.build,\n            getTemplate: ComponentFactory.getComponentTemplate,\n            getComponentRegistry: ComponentFactory.getComponentRegistry,\n            getComponentHelper: ComponentFactory.getComponentHelper,\n            registerComponentHelper: ComponentFactory.registerComponentHelper,\n        };\n\n    public Template = {\n        register: TemplateFactory.registerComponentTemplate,\n        extend: TemplateFactory.extendComponentTemplate,\n        override: TemplateFactory.registerTemplateOverride,\n        getRenderedTemplate: TemplateFactory.getRenderedTemplate,\n    };\n\n    public Entity = {\n        addDefinition: EntityFactory.addEntityDefinition,\n        getDefinition: EntityFactory.getEntityDefinition,\n        getDefinitionRegistry: EntityFactory.getDefinitionRegistry,\n        getRawEntityObject: EntityFactory.getRawEntityObject,\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        getPropertyBlacklist: EntityFactory.getPropertyBlacklist,\n        getRequiredProperties: EntityFactory.getRequiredProperties,\n        getAssociatedProperties: EntityFactory.getAssociatedProperties,\n        getTranslatableProperties: EntityFactory.getTranslatableProperties,\n    };\n\n    public State = StateFactory();\n\n    public Mixin = {\n        register: MixinFactory.register,\n        getByName: MixinFactory.getByName,\n    };\n\n    public Filter = {\n        register: FilterFactory.register,\n        getByName: FilterFactory.getByName,\n        getRegistry: FilterFactory.getRegistry,\n    };\n\n    public Directive = {\n        register: DirectiveFactory.registerDirective,\n        getByName: DirectiveFactory.getDirectiveByName,\n        getDirectiveRegistry: DirectiveFactory.getDirectiveRegistry,\n    };\n\n    public Locale = {\n        register: LocaleFactory.register,\n        extend: LocaleFactory.extend,\n        getByName: LocaleFactory.getLocaleByName,\n        getLocaleRegistry: LocaleFactory.getLocaleRegistry,\n    };\n\n    public Shortcut = {\n        getShortcutRegistry: ShortcutFactory.getShortcutRegistry,\n        getPathByCombination: ShortcutFactory.getPathByCombination,\n        register: ShortcutFactory.register,\n    };\n\n    public Plugin = {\n        addBootPromise: PluginBootFactory.addBootPromise,\n        getBootPromises: PluginBootFactory.getBootPromises,\n    };\n\n    public Service = ServiceFactory;\n\n    public Utils = utils;\n\n    public Application = application;\n\n    public Feature = Feature;\n\n    public ApiService = {\n        register: ApiServiceFactory.register,\n        getByName: ApiServiceFactory.getByName,\n        getRegistry: ApiServiceFactory.getRegistry,\n        getServices: ApiServiceFactory.getServices,\n        has: ApiServiceFactory.has,\n    };\n\n    public EntityDefinition = {\n        getScalarTypes: EntityDefinitionFactory.getScalarTypes,\n        getJsonTypes: EntityDefinitionFactory.getJsonTypes,\n        getDefinitionRegistry: EntityDefinitionFactory.getDefinitionRegistry,\n        has: EntityDefinitionFactory.has,\n        get: EntityDefinitionFactory.get,\n        add: EntityDefinitionFactory.add,\n        remove: EntityDefinitionFactory.remove,\n        getTranslatedFields: EntityDefinitionFactory.getTranslatedFields,\n        getAssociationFields: EntityDefinitionFactory.getAssociationFields,\n        getRequiredFields: EntityDefinitionFactory.getRequiredFields,\n    };\n\n    public ExtensionAPI = ExtensionApi;\n\n    public WorkerNotification = {\n        register: WorkerNotificationFactory.register,\n        getRegistry: WorkerNotificationFactory.getRegistry,\n        override: WorkerNotificationFactory.override,\n        remove: WorkerNotificationFactory.remove,\n        initialize: WorkerNotificationFactory.initialize,\n    };\n\n    public Defaults = {\n        systemLanguageId: '2fbb5fe2e29a4d70aa5854ce7ce3e20b',\n        defaultLanguageIds: ['2fbb5fe2e29a4d70aa5854ce7ce3e20b'],\n        versionId: '0fa91ce3e96a4bc2be4bd9ce752c3425',\n        storefrontSalesChannelTypeId: '8a243080f92e4c719546314b577cf82b',\n        productComparisonTypeId: 'ed535e5722134ac1aa6524f73e26881b',\n        apiSalesChannelTypeId: 'f183ee5650cf4bdb8a774337575067a6',\n        defaultSalutationId: 'ed643807c9f84cc8b50132ea3ccb1c3b',\n    };\n\n    public Data = data;\n\n    public Classes = {\n        ShopwareError,\n        ApiService,\n        _private: {\n            HttpFactory,\n            RepositoryFactory,\n            ApiContextFactory,\n            AppContextFactory,\n            RouterFactory,\n            FilterFactory: ModuleFilterFactory,\n        },\n    }\n\n    public Helper = {\n        FlatTreeHelper: FlatTreeHelper,\n        MiddlewareHelper: MiddlewareHelper,\n        RefreshTokenHelper: RefreshTokenHelper,\n        SanitizerHelper: SanitizerHelper,\n        DeviceHelper: DeviceHelper,\n    };\n\n    public get Context(): VuexRootState['context'] {\n        return this.State.get('context');\n    }\n\n    private _private = {\n        ApiServices: ApiServices,\n    }\n}\n\nconst ShopwareInstance = new ShopwareClass();\n\nwindow.Shopware = ShopwareInstance;\n\nexport default ShopwareInstance;\nexport { ShopwareClass };\n","var map = {\n\t\"./acl.api.service.js\": \"A45n\",\n\t\"./app-action-button.service.js\": \"s5md\",\n\t\"./app-cms-blocks.service.js\": \"ZnZ0\",\n\t\"./app-modules.service.js\": \"sqsB\",\n\t\"./app-url-change.service.js\": \"Cv5K\",\n\t\"./business-events.api.service.js\": \"8jby\",\n\t\"./cache.api.service.js\": \"juyG\",\n\t\"./calculate-price.api.service.js\": \"jVYu\",\n\t\"./cart-store-api.api.service.js\": \"pCCB\",\n\t\"./checkout-store.api.service.js\": \"MLY4\",\n\t\"./config.api.service.js\": \"Mt2o\",\n\t\"./customer-group-registration.api.service.js\": \"KpoE\",\n\t\"./customer-validation.api.service.js\": \"wqx3\",\n\t\"./document.api.service.js\": \"SnjH\",\n\t\"./excludedSearchTerm.api.service.js\": \"p0GD\",\n\t\"./extension-sdk.service.ts\": \"egkI\",\n\t\"./first-run-wizard.api.service.js\": \"lnsc\",\n\t\"./flow-actions.api.service.js\": \"in9x\",\n\t\"./import-export.api.service.js\": \"JUxB\",\n\t\"./integration.api.service.js\": \"tGtW\",\n\t\"./known-ips.api.service.js\": \"Lz4t\",\n\t\"./language-plugin.api.service.js\": \"J5bW\",\n\t\"./mail.api.service.js\": \"umIt\",\n\t\"./marketing.service.js\": \"UPBq\",\n\t\"./media-folder.api.service.js\": \"RT+Y\",\n\t\"./media.api.service.js\": \"SWCa\",\n\t\"./message-queue.api.service.js\": \"m9g7\",\n\t\"./notifications.service.js\": \"NOZM\",\n\t\"./number-range.api.service.js\": \"T+rS\",\n\t\"./order-document.api.service.js\": \"XwGQ\",\n\t\"./order-state-machine.api.service.js\": \"czq7\",\n\t\"./order.api.service.js\": \"cNT7\",\n\t\"./product-export.api.service.js\": \"A0sK\",\n\t\"./product-stream-preview.service.js\": \"+ZSk\",\n\t\"./promotion-sync.api.service.js\": \"lWuk\",\n\t\"./recommendations.api.service.js\": \"vVie\",\n\t\"./sales-channel.api.service.js\": \"OUny\",\n\t\"./scheduled-task.api.service.js\": \"earh\",\n\t\"./search.api.service.js\": \"JMVm\",\n\t\"./seo-url-template.api.service.js\": \"OW7U\",\n\t\"./seo-url.api.service.js\": \"iXTH\",\n\t\"./snippet-set.api.service.js\": \"7g5+\",\n\t\"./snippet.api.service.js\": \"tTBJ\",\n\t\"./state-machine.api.service.js\": \"gNKo\",\n\t\"./store-context.api.service.js\": \"a6Wd\",\n\t\"./store.api.service.js\": \"ssgS\",\n\t\"./sync.api.service.js\": \"6CVo\",\n\t\"./system-config.api.service.js\": \"hFIz\",\n\t\"./update.api.service.js\": \"fLuy\",\n\t\"./user-activity.service.js\": \"C0V+\",\n\t\"./user-config.api.service.js\": \"wjWR\",\n\t\"./user-input-sanitize.service.js\": \"AXza\",\n\t\"./user-recovery.api.service.js\": \"yoR4\",\n\t\"./user-validation.api.service.js\": \"cPrm\",\n\t\"./user.api.service.js\": \"uaRI\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"I404\";","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"language-plugins\"\n * @class\n * @extends ApiService\n */\nclass LanguagePluginApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'language-plugins') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'languagePluginService';\n    }\n\n    /**\n     * Get language-plugins\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getPlugins(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`/_action/store/${this.apiEndpoint}`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default LanguagePluginApiService;\n","import ApiService from '../api.service';\n\nconst { Criteria } = Shopware.Data;\n\n/**\n * Gateway for the API end point 'product'\n * @class\n * @extends ApiService\n */\nclass SearchApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = '_admin/search') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'searchService';\n    }\n\n    /* eslint-disable no-unused-vars */\n    /** @deprecated tag:v6.5.0 - Will removed, using searchQuery instead */\n    search({ term, page = 1, limit = 5, additionalParams = {}, additionalHeaders = {} }) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const criteria = new Criteria();\n        criteria.setTerm(term);\n        criteria.setLimit(limit);\n        criteria.setPage(page);\n\n        const entities = [\n            'landing_page',\n            'order',\n            'customer',\n            'product',\n            'category',\n            'media',\n            'product_manufacturer',\n            'tag',\n            'cms_page',\n        ];\n\n        const queries = {};\n\n        entities.forEach(entity => {\n            queries[entity] = criteria;\n        });\n\n        return this.searchQuery(queries, additionalHeaders);\n    }\n    /* eslint-enable no-unused-vars */\n\n    /**\n     *\n     * @param {object} queries\n     * @param {object} additionalHeaders\n     * */\n    searchQuery(queries = {}, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        Object.keys(queries).forEach(entity => {\n            if (typeof queries[entity].parse === 'function') {\n                queries[entity] = queries[entity].parse();\n            }\n        });\n\n        return this.httpClient\n            .post(this.getApiBasePath(), queries, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SearchApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"import-export\"\n * @class\n * @extends ApiService\n */\nclass ImportExportApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'import-export') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'importExportService';\n    }\n\n    getFeatures() {\n        const apiRoute = `/_action/${this.getApiBasePath()}/features`;\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    initiate(profileId, expireDate, file) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/initiate`;\n        const formData = new FormData();\n        if (file) {\n            formData.append('file', file);\n        }\n        formData.append('profileId', profileId);\n        formData.append('expireDate', expireDate);\n\n        return this.httpClient.post(\n            apiRoute,\n            formData,\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    process(logId, offset) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/process`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                logId: logId,\n                offset: offset,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    cancel(logId) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/cancel`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                logId: logId,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDownloadUrl(fileId, accessToken) {\n        const baseUrl = `${Shopware.Context.api.apiPath}`;\n        return `/${baseUrl}/_action/${this.getApiBasePath()}/file/download?fileId=${fileId}&accessToken=${accessToken}`;\n    }\n}\n\nexport default ImportExportApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"customer-group-registration\"\n * @class\n * @extends ApiService\n */\nclass CustomerGroupRegistrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'customer-group-registration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'customerGroupRegistrationService';\n    }\n\n    accept(customerId, additionalParams = {}, additionalHeaders = {}, additionalRequest = {}) {\n        const route = `/_action/${this.getApiBasePath()}/accept`;\n        return this.httpClient.post(\n            route,\n            {\n                customerIds: Array.isArray(customerId) ? customerId : [customerId],\n                ...additionalRequest,\n            },\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    decline(customerId, additionalParams = {}, additionalHeaders = {}, additionalRequest = {}) {\n        const route = `/_action/${this.getApiBasePath()}/decline`;\n        return this.httpClient.post(\n            route,\n            {\n                customerIds: Array.isArray(customerId) ? customerId : [customerId],\n                ...additionalRequest,\n            },\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default CustomerGroupRegistrationApiService;\n","/**\n * @module core/service/utils/types\n */\n\nimport isObject from 'lodash/isObject';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isEmpty from 'lodash/isEmpty';\nimport isRegExp from 'lodash/isRegExp';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport isDate from 'lodash/isDate';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\nimport isEqual from 'lodash/isEqual';\nimport isNumber from 'lodash/isNumber';\n\nexport default {\n    isObject,\n    isPlainObject,\n    isEmpty,\n    isRegExp,\n    isArray,\n    isFunction,\n    isDate,\n    isString,\n    isBoolean,\n    isEqual,\n    isNumber,\n    isUndefined,\n};\n\n\n/**\n * Checks if a value is undefined\n */\nexport function isUndefined(value: unknown): boolean {\n    return typeof value === 'undefined';\n}\n\n","import ApiService from '../api.service';\n\n/**\n * @class\n * @extends ApiService\n */\nclass KnownIpsApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'known-ips') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'knownIpsService';\n    }\n\n    /**\n     * Get snippets\n     *\n     * @returns {Promise<Array<{name: String, value: String}>>}\n     */\n    getKnownIps() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get('/_admin/known-ips', {\n                headers,\n            }).then(response => {\n                return response.data.ips;\n            });\n    }\n}\n\nexport default KnownIpsApiService;\n","import objectMerge from 'lodash/merge';\nimport objectMergeWith from 'lodash/mergeWith';\nimport objectCopy from 'lodash/cloneDeep';\nimport objectGet from 'lodash/get';\nimport objectSet from 'lodash/set';\nimport objectPick from 'lodash/pick';\nimport type from 'src/core/service/utils/types.utils';\n\n/**\n * @module core/service/utils/object\n */\nexport default {\n    deepCopyObject,\n    hasOwnProperty,\n    getObjectDiff,\n    getArrayChanges,\n    merge: objectMerge,\n    mergeWith: objectMerge,\n    cloneDeep: objectCopy,\n    get: objectGet,\n    set: objectSet,\n    pick: objectPick,\n};\n\n/**\n * Lodash import for object merges.\n */\nexport const merge = objectMerge;\n\nexport const mergeWith = objectMergeWith;\n\nexport const cloneDeep = objectCopy;\n\nexport const get = objectGet;\n\nexport const set = objectSet;\n\nexport const pick = objectPick;\n\n/**\n * Shorthand method for `Object.prototype.hasOwnProperty`\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasOwnProperty(scope: any, prop: string): boolean {\n    return Object.prototype.hasOwnProperty.call(scope, prop);\n}\n\n/**\n * Deep copy an object\n */\nexport function deepCopyObject<O extends object>(copyObject: O): O {\n    return JSON.parse(JSON.stringify(copyObject)) as O;\n}\n\n/**\n * Deep merge two objects\n */\nexport function deepMergeObject<FO extends object, SO extends object>(firstObject: FO, secondObject: SO): FO & SO {\n    return mergeWith(firstObject, secondObject, (objValue, srcValue) => {\n        if (Array.isArray(objValue)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return objValue.concat(srcValue);\n        }\n        return undefined;\n    });\n}\n\n/**\n * Get a simple recursive diff of two objects.\n * Does not consider an entity schema or entity related logic.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {*}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObjectDiff(a: any, b: any): any {\n    if (a === b) {\n        return {};\n    }\n\n    if (!type.isObject(a) || !type.isObject(b)) {\n        return b;\n    }\n\n    if (type.isDate(a) || type.isDate(b)) {\n        if (a.valueOf() === b.valueOf()) {\n            return {};\n        }\n\n        return b;\n    }\n\n    return Object.keys(b).reduce((acc, key) => {\n        if (!hasOwnProperty(a, key)) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            return { ...acc, [key]: b[key] };\n        }\n\n        // @ts-expect-error\n        if (type.isArray(b[key])) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-argument\n            const changes = getArrayChanges(a[key], b[key]);\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (Object.keys(changes).length > 0) {\n                // @ts-expect-error\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                return { ...acc, [key]: b[key] };\n            }\n\n            return acc;\n        }\n\n        // @ts-expect-error\n        if (type.isObject(b[key])) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const changes = getObjectDiff(a[key], b[key]);\n\n            if (!type.isObject(changes) || Object.keys(changes).length > 0) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                return { ...acc, [key]: changes };\n            }\n\n            return acc;\n        }\n\n        // @ts-expect-error\n        if (a[key] !== b[key]) {\n            // @ts-expect-error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            return { ...acc, [key]: b[key] };\n        }\n\n        return acc;\n    }, {});\n}\n\n/**\n * Check if the compared array has changes.\n * Works a little bit different like the object diff because it does not return a real changeset.\n * In case of a change we will always use the complete compare array,\n * because it always holds the newest state regarding deletions, additions and the order.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getArrayChanges(a: any[], b: any[]): any[] {\n    if (a === b) {\n        return [];\n    }\n\n    if (!type.isArray(a) || !type.isArray(b)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return b;\n    }\n\n    if (a.length <= 0 && b.length <= 0) {\n        return [];\n    }\n\n    if (a.length !== b.length) {\n        return b;\n    }\n\n    if (!type.isObject(b[0])) {\n        return b.filter(item => !a.includes(item));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const changes: any[] = [];\n\n    b.forEach((item, index) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const objDiff = getObjectDiff(a[index], b[index]);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (Object.keys(objDiff).length > 0) {\n            changes.push(b[index]);\n        }\n    });\n\n    return changes;\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass CheckoutStoreService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'checkout') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'checkoutStoreService';\n    }\n\n    checkout(salesChannelId, contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy-order/${salesChannelId}`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n        return this.httpClient\n            .post(route, {}, { additionalParams, headers });\n    }\n}\n\nexport default CheckoutStoreService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"config\"\n * @class\n * @extends ApiService\n */\nclass ConfigApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'config') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'configService';\n    }\n\n    /**\n     * Get information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getConfig(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return new Promise((resolve) => {\n            this.httpClient\n                .get('/_info/config', {\n                    params,\n                    headers,\n                })\n                .then((response) => {\n                    resolve(ApiService.handleResponse(response));\n                });\n        });\n    }\n}\n\nexport default ConfigApiService;\n","import ApiService from '../api.service';\n\nexport default class NotificationsService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'notificationsService';\n    }\n\n    fetchNotifications(limit, latestTimestamp = null) {\n        return this.httpClient.get(\n            'notification/message',\n            {\n                params: { limit, latestTimestamp },\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return data;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"application\"\n * @class\n * @extends ApiService\n */\nclass SalesChannelApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sales-channel') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'salesChannelService';\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/access-key/sales-channel', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SalesChannelApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"seo-url-template\"\n * @class\n * @extends ApiService\n */\nclass SeoUrlTemplateApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'seo-url-template') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'seoUrlTemplateService';\n    }\n\n    validate(urlTemplate, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/validate`;\n\n        return this.httpClient.post(\n            apiRoute,\n            urlTemplate,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    preview(urlTemplate, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/preview`;\n\n        return this.httpClient.post(\n            apiRoute,\n            urlTemplate,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            if (response.status === 204) {\n                return null;\n            }\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getContext(urlTemplate, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/context`;\n\n        return this.httpClient.post(\n            apiRoute,\n            urlTemplate,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDefault(route, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/default/${route}`;\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SeoUrlTemplateApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"media-folder\"\n * @class\n * @extends ApiService\n */\nclass MediaFolderApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'media-folder') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'mediaFolderService';\n    }\n\n    dissolveFolder(id) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/dissolve`;\n        return this.httpClient.post(\n            apiRoute,\n            '',\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    moveFolder(id, targetId) {\n        if (targetId) {\n            targetId = `/${targetId}`;\n        }\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/move${targetId}`;\n        return this.httpClient.post(\n            apiRoute,\n            '',\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MediaFolderApiService;\n","/**\n * This class wraps an upload and stores information about it. For use in core/data/UploadStore\n * @class\n */\nexport default class UploadTask {\n    constructor({ uploadTag, src, targetId, fileName, extension = 'dat' }) {\n        this.running = false;\n        this.src = src;\n        this.uploadTag = uploadTag;\n        this.targetId = targetId;\n        this.fileName = fileName;\n        this.extension = extension;\n        this.error = null;\n    }\n}\n","import { fileReader, array } from 'src/core/service/util.service';\nimport UploadTask from 'src/core/helper/upload-task.helper';\nimport ApiService from '../api.service';\n\nconst UploadEvents = {\n    UPLOAD_ADDED: 'media-upload-add',\n    UPLOAD_FINISHED: 'media-upload-finish',\n    UPLOAD_FAILED: 'media-upload-fail',\n    UPLOAD_CANCELED: 'media-upload-cancel',\n};\n\n/**\n * Gateway for the API end point \"media\"\n * @class\n * @extends ApiService\n */\nclass MediaApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'media') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'mediaService';\n        this.uploads = [];\n        this.$listeners = {};\n    }\n\n    hasListeners(uploadTag) {\n        if (!uploadTag) {\n            return false;\n        }\n\n        return this.$listeners.hasOwnProperty(uploadTag);\n    }\n\n    hasDefaultListeners() {\n        return this.hasListeners('default');\n    }\n\n    addListener(uploadTag, callback) {\n        if (!this.hasListeners(uploadTag)) {\n            this.$listeners[uploadTag] = [];\n        }\n        this.$listeners[uploadTag].push(callback);\n    }\n\n    removeListener(uploadTag, callback) {\n        if (!this.hasListeners(uploadTag)) {\n            return;\n        }\n\n        if (callback === undefined) {\n            array.remove(this.$listeners[uploadTag], () => true);\n            return;\n        }\n\n        array.remove(this.$listeners[uploadTag], (listener) => {\n            return listener === callback;\n        });\n    }\n\n    removeDefaultListener(callback) {\n        this.removeListener('default', callback);\n    }\n\n    addDefaultListener(callback) {\n        this.addListener('default', callback);\n    }\n\n    getListenerForTag(uploadTag) {\n        const tagListener = this.hasListeners(uploadTag) ? this.$listeners[uploadTag] : [];\n        const defaultListeners = this.hasDefaultListeners() ? this.$listeners.default : [];\n\n        return [...tagListener, ...defaultListeners];\n    }\n\n    _createUploadEvent(action, uploadTag, payload) {\n        return { action, uploadTag, payload };\n    }\n\n    addUpload(uploadTag, uploadData) {\n        this.addUploads(uploadTag, [uploadData]);\n    }\n\n    addUploads(uploadTag, uploadCollection) {\n        const tasks = uploadCollection.map((uploadData) => {\n            return new UploadTask({ uploadTag, ...uploadData });\n        });\n\n        this.uploads.push(...tasks);\n\n        this.getListenerForTag(uploadTag).forEach((listener) => {\n            listener(this._createUploadEvent(\n                UploadEvents.UPLOAD_ADDED,\n                uploadTag,\n                { data: tasks },\n            ));\n        });\n    }\n\n    cancelUpload(uploadTag, uploadData) {\n        const tasks = new UploadTask({ uploadTag, ...uploadData });\n        this.getListenerForTag(uploadTag).forEach((listener) => {\n            listener(this._createUploadEvent(\n                UploadEvents.UPLOAD_CANCELED,\n                uploadTag,\n                { data: tasks },\n            ));\n        });\n    }\n\n    removeByTag(uploadTag) {\n        array.remove(this.uploads, (upload) => {\n            return upload.uploadTag === uploadTag;\n        });\n    }\n\n    runUploads(tag) {\n        const affectedUploads = array.remove(this.uploads, (upload) => {\n            return upload.uploadTag === tag;\n        });\n        const affectedListeners = this.getListenerForTag(tag);\n\n        if (affectedUploads.length === 0) {\n            return Promise.resolve();\n        }\n\n        const totalUploads = affectedUploads.length;\n        let successUploads = 0;\n        let failureUploads = 0;\n        return Promise.all(affectedUploads.map((task) => {\n            if (task.running) {\n                return Promise.resolve();\n            }\n\n            task.running = true;\n            return this._startUpload(task).then(() => {\n                task.running = false;\n                successUploads += 1;\n                affectedListeners.forEach((listener) => {\n                    listener(this._createUploadEvent(\n                        UploadEvents.UPLOAD_FINISHED,\n                        tag,\n                        {\n                            targetId: task.targetId,\n                            successAmount: successUploads,\n                            failureAmount: failureUploads,\n                            totalAmount: totalUploads,\n                        },\n                    ));\n                });\n            }).catch((cause) => {\n                task.error = cause;\n                task.running = false;\n                failureUploads += 1;\n                task.successAmount = successUploads;\n                task.failureAmount = failureUploads;\n                task.totalAmount = totalUploads;\n                affectedListeners.forEach((listener) => {\n                    listener(this._createUploadEvent(\n                        UploadEvents.UPLOAD_FAILED,\n                        tag,\n                        task,\n                    ));\n                });\n            });\n        }));\n    }\n\n    _startUpload(task) {\n        if (task.src instanceof File) {\n            return fileReader.readAsArrayBuffer(task.src).then((buffer) => {\n                return this.uploadMediaById(\n                    task.targetId,\n                    task.src.type,\n                    buffer,\n                    task.extension,\n                    task.fileName,\n                );\n            });\n        }\n\n        if (task.src instanceof URL) {\n            return this.uploadMediaFromUrl(\n                task.targetId,\n                task.src.href,\n                task.extension,\n                task.fileName,\n            );\n        }\n\n        return Promise.reject(new Error('src of upload must either be an instance of File or URL'));\n    }\n\n    uploadMediaById(id, mimeType, data, extension, fileName = id) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/upload`;\n        const headers = this.getBasicHeaders({ 'Content-Type': mimeType });\n        const params = {\n            extension,\n            fileName,\n        };\n\n        return this.httpClient.post(\n            apiRoute,\n            data,\n            { params, headers },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    uploadMediaFromUrl(id, url, extension, fileName = id) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/upload`;\n        const headers = this.getBasicHeaders({ 'Content-Type': 'application/json' });\n        const params = {\n            extension,\n            fileName,\n        };\n\n        const body = JSON.stringify({ url });\n\n        return this.httpClient.post(\n            apiRoute,\n            body,\n            { params, headers },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    renameMedia(id, fileName) {\n        const apiRoute = `/_action/${this.getApiBasePath(id)}/rename`;\n        return this.httpClient.post(\n            apiRoute,\n            JSON.stringify({\n                fileName,\n            }),\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    provideName(fileName, extension, mediaId = null) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/provide-name`;\n        return this.httpClient.get(\n            apiRoute,\n            {\n                params: { fileName, extension, mediaId },\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport { MediaApiService as default, UploadEvents };\n","import ApiService from '../api.service';\n\nconst DocumentEvents = {\n    DOCUMENT_FAILED: 'create-document-fail',\n    DOCUMENT_FINISHED: 'create-document-finished',\n};\n\n/**\n * Gateway for the API end point \"document\"\n * @class\n * @extends ApiService\n */\nclass DocumentApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'document') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'documentService';\n        this.$listener = () => ({});\n    }\n\n    createDocument(orderId,\n        documentTypeName,\n        documentConfig = {},\n        referencedDocumentId = null,\n        additionalParams = {},\n        additionalHeaders = {},\n        file = null) {\n        let route = `/_action/order/${orderId}/document/${documentTypeName}`;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const params = {\n            config: documentConfig,\n            referenced_document_id: referencedDocumentId,\n        };\n\n        if (file) {\n            params.static = true;\n        }\n\n        let docCreated = this.httpClient\n            .post(route, params, {\n                additionalParams,\n                headers,\n            }).then((response) => {\n                if (file && response.data.documentId) {\n                    const fileName = file.name.split('.').shift();\n                    const fileExtension = file.name.split('.').pop();\n                    // eslint-disable-next-line max-len\n                    route = `/_action/document/${response.data.documentId}/upload?fileName=${documentConfig.documentNumber}_${fileName}&extension=${fileExtension}`;\n                    headers['Content-Type'] = file.type;\n                    docCreated = this.httpClient.post(route, file, {\n                        additionalParams,\n                        headers,\n                    });\n                }\n\n                this.$listener(this.createDocumentEvent(DocumentEvents.DOCUMENT_FINISHED));\n\n                return docCreated;\n            }).catch((error) => {\n                if (error.response?.data?.errors) {\n                    this.$listener(\n                        this.createDocumentEvent(DocumentEvents.DOCUMENT_FAILED, error.response.data.errors.pop()),\n                    );\n                }\n            });\n    }\n\n    getDocumentPreview(orderId, orderDeepLink, documentTypeName, params) {\n        const config = JSON.stringify(params);\n\n        return this.httpClient\n            .get(\n                `/_action/order/${orderId}/${orderDeepLink}/document/${documentTypeName}/preview`,\n                {\n                    params: { config },\n                    responseType: 'blob',\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n\n    getDocument(documentId, documentDeepLink, context, download = false) {\n        return this.httpClient\n            .get(\n                `/_action/document/${documentId}/${documentDeepLink}${download ? '?download=1' : ''}`,\n                {\n                    responseType: 'blob',\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n\n    createDocumentEvent(action, payload) {\n        return { action, payload };\n    }\n\n    setListener(callback) {\n        this.$listener = callback;\n    }\n}\n\nexport { DocumentApiService as default, DocumentEvents };\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"number-range\"\n * @class\n * @extends ApiService\n */\nclass NumberRangeApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'number-range') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'numberRangeService';\n    }\n\n    /**\n     * reserve a number range value\n     *\n     * @param {string} typeName\n     * @param {string} [salesChannelId]\n     * @param {boolean} preview [preview=false]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    reserve(typeName, salesChannelId = '', preview = false, additionalHeaders = {}) {\n        const urlSuffix = salesChannelId ? `/${salesChannelId}` : '';\n        const url = `_action/number-range/reserve/${typeName}${urlSuffix}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const params = {\n            preview: preview,\n        };\n\n        return this.httpClient\n            .get(url, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * get preview of next number range value\n     *\n     * @param {string} typeName\n     * @param {string} pattern\n     * @param {int} start\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    previewPattern(typeName, pattern, start, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const params = {\n            pattern: pattern,\n            start: start,\n        };\n\n        return this.httpClient\n            .get(`_action/number-range/preview-pattern/${typeName}`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default NumberRangeApiService;\n","import ApiService from 'src/core/service/api.service';\n\nexport default class MarketingService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, 'marketing');\n        this.name = 'marketingService';\n    }\n\n    getActiveDiscountCampaigns() {\n        // to enable the mock you need to disable this line\n        return Promise.resolve({});\n\n        // return mock value instead of value from the SBP\n        // eslint-disable-next-line no-unreachable\n        return this._getActiveDiscountCampaignsMock();\n\n        // eslint-disable-next-line no-unreachable\n        return this.httpClient\n            .post(`/${this.getApiBasePath()}/campaigns`, {}, {\n                headers: this.basicHeaders(Shopware.Context.api),\n            });\n    }\n\n    /**\n     * This returns a mock discount campaign and should be removed\n     * in the final code.\n     * @returns {Promise<unknown>}\n     * @private\n     */\n    _getActiveDiscountCampaignsMock() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve({\n                    name: 'An example campaign',\n                    title: 'string',\n                    phase: 'comingSoonPhase',\n                    comingSoonStartDate: '2005-08-15T15:52:01',\n                    startDate: '2005-08-15T15:52:01',\n                    lastCallStartDate: '2005-08-15T15:52:01',\n                    endDate: '2025-08-15T15:52:01',\n                    components: {\n                        storeBanner: {\n                            background: {\n                                color: '#ffffff',\n                                // eslint-disable-next-line max-len\n                                image: 'https://images.unsplash.com/photo-1518695075031-b83a29bf0012?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\n                                position: '50% 70%',\n                            },\n                            content: {\n                                textColor: '#fff',\n                                headline: {\n                                    'de-DE': 'Super Angebot',\n                                    'en-GB': 'Amazing offer',\n                                },\n                                description: {\n                                    'de-DE': 'Günstiger geht es nicht',\n                                    'en-GB': 'It will not get cheaper',\n                                },\n                                cta: {\n                                    category: 'GitHub',\n                                    text: {\n                                        'de-DE': 'Zeige GitHub',\n                                        'en-GB': 'Show GitHub',\n                                    },\n                                },\n                            },\n                        },\n                        dashboardBanner: {\n                            background: {\n                                color: '#ffffff',\n                                // eslint-disable-next-line max-len\n                                image: 'https://images.unsplash.com/photo-1493606278519-11aa9f86e40a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80',\n                                position: '100% 75%',\n                            },\n                            leftImage: {\n                                src: {\n                                    // eslint-disable-next-line max-len\n                                    'en-GB': 'https://images.unsplash.com/photo-1587049016823-69ef9d68bd44?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n                                    // eslint-disable-next-line max-len\n                                    'de-DE': 'https://images.unsplash.com/photo-1527866959252-deab85ef7d1b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80',\n                                },\n                                bgColor: '#ffffff',\n                                hideInSmallViewports: false,\n                                srcset: {\n                                    // eslint-disable-next-line max-len\n                                    'en-GB': 'https://images.unsplash.com/photo-1587049016823-69ef9d68bd44?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80 634w',\n                                    // eslint-disable-next-line max-len\n                                    'de-DE': 'https://images.unsplash.com/photo-1527866959252-deab85ef7d1b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80 1050w',\n                                },\n                            },\n                            content: {\n                                textColor: '#171717',\n                                linkColor: '#26af44',\n                                headline: {\n                                    'de-DE': 'Tolle Kampagne',\n                                    'en-GB': 'Amazing campaign',\n                                },\n                                description: {\n                                    text: {\n                                        // eslint-disable-next-line max-len\n                                        'de-DE': 'Es ist {goToShopwareHomePage}, öffne den {goToExtensionStoreAndOpenCategory} oder gehe zum {goToExtensionStore}',\n                                        // eslint-disable-next-line max-len\n                                        'en-GB': 'Its {goToShopwareHomePage}, open {goToExtensionStoreAndOpenCategory} or go to the {goToExtensionStore}',\n                                    },\n                                    inlineActions: [\n                                        {\n                                            placeholder: 'goToExtensionStore',\n                                            text: {\n                                                'de-DE': 'Erweiterungs Store',\n                                                'en-GB': 'Extension Store',\n                                            },\n                                            route: 'sw.extension.store.index.extensions',\n                                        },\n                                        {\n                                            placeholder: 'goToExtensionStoreAndOpenCategory',\n                                            text: {\n                                                'de-DE': 'Sommer Sale',\n                                                'en-GB': 'Summer Sale',\n                                            },\n                                            execution: {\n                                                method: 'linkToExtensionStoreAndSelectCategory',\n                                                arguments: ['category', 'summerSale'],\n                                            },\n                                        },\n                                        {\n                                            placeholder: 'goToShopwareHomePage',\n                                            text: {\n                                                'de-DE': 'Shopware',\n                                                'en-GB': 'Shopware',\n                                            },\n                                            externalLink: {\n                                                'de-DE': 'https://www.shopware.de',\n                                                'en-GB': 'https://www.shopware.com',\n                                            },\n                                        },\n                                    ],\n                                },\n                                label: {\n                                    bgColor: '#ac2c2c',\n                                    textColor: '#ffffff',\n                                    text: {\n                                        'de-DE': 'Wichtig',\n                                        'en-GB': 'Important',\n                                    },\n                                },\n                                mainAction: {\n                                    buttonVariant: 'ghost',\n                                    bannerIsClickable: true,\n                                    cta: {\n                                        'de-DE': 'Kampagne öffnen',\n                                        'en-GB': 'Open campaign',\n                                    },\n                                    execution: {\n                                        method: 'linkToExtensionStoreAndSelectCategory',\n                                        arguments: ['category', 'summerSale'],\n                                    },\n                                },\n                            },\n                        },\n                    },\n                });\n            }, 1500);\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order/document\"\n * @class\n * @extends ApiService\n */\nexport default class OrderDocumentApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order/document') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'orderDocumentApiService';\n    }\n\n    create(payload, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient.post(`/_admin/${this.apiEndpoint}/create`, payload, {\n            additionalParams,\n            headers: this.getBasicHeaders(additionalHeaders),\n        });\n    }\n}\n","import ApiService from '../api.service';\n\nexport default class AppCmsBlocksService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appCmsBlocks';\n    }\n\n    /**\n     * Fetches CMS blocks which are provided by third-party applications.\n     * @returns {Promise<Object>}\n     */\n    fetchAppBlocks() {\n        return this.httpClient.get(\n            'app-system/cms/blocks',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return data.blocks;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"sales-channel-context\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass StoreContextService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sales-channel-context') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'contextStoreService';\n    }\n\n    updateCustomerContext(\n        customerId,\n        salesChannelId,\n        contextToken,\n        additionalParams = {},\n        additionalHeaders = {},\n        permissions = ['allowProductPriceOverwrites'],\n    ) {\n        const route = '_proxy/switch-customer';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient\n            .patch(\n                route,\n                { customerId: customerId, salesChannelId: salesChannelId, permissions: permissions },\n                { additionalParams, headers },\n            );\n    }\n\n    updateContext(\n        context,\n        salesChannelId,\n        contextToken,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/context`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient\n            .patch(\n                route,\n                context,\n                { additionalParams, headers },\n            );\n    }\n\n    getContext(salesChannelId, source, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/${source}`;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(route, {}, { additionalParams, headers });\n    }\n}\n\nexport default StoreContextService;\n","// @ts-expect-error\nimport MD5 from 'md5-es';\n\n/**\n * @module core/service/utils/format\n */\nexport default {\n    currency,\n    date,\n    dateWithUserTimezone,\n    md5,\n    fileSize,\n    toISODate,\n};\n\ninterface CurrencyOptions extends Intl.NumberFormatOptions {\n    language?: string\n}\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n * Defaults to the currencyISOCode of the standard currency and locale of the user.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @param {Number} [decimalPlaces] - Number of decimal places\n * @param {Object} additionalOptions\n * @returns {string} Formatted string\n */\nexport function currency(val: number, sign: string, decimalPlaces: number, additionalOptions: CurrencyOptions = {}): string {\n    const decimalOpts = decimalPlaces !== undefined ? {\n        minimumFractionDigits: decimalPlaces,\n        maximumFractionDigits: decimalPlaces,\n    } : {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 20,\n    };\n\n    const opts = {\n        style: 'currency',\n        currency: sign || Shopware.Context.app.systemCurrencyISOCode as string,\n        ...decimalOpts,\n        ...additionalOptions,\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n    return val.toLocaleString((additionalOptions.language ?? Shopware.State.get('session').currentLocale) ?? 'en-US', opts);\n}\n\n/**\n * Formats a Date object to a localized string\n *\n * @param {string} val\n * @param {Object} options\n * @returns {string}\n */\nexport function date(val: string, options: Intl.DateTimeFormatOptions = {}): string {\n    // should return an empty string when no date is given\n    if (!val) {\n        return '';\n    }\n\n    const givenDate = new Date(val);\n\n    // check if given date value is valid\n    // @ts-expect-error\n    // eslint-disable-next-line\n    if (isNaN(givenDate)) {\n        return '';\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    const lastKnownLang = Shopware.Application.getContainer('factory').locale.getLastKnownLocale() as string;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const userTimeZone = (Shopware?.State?.get('session')?.currentUser?.timeZone as string) ?? 'UTC';\n\n    const dateTimeFormatter = new Intl.DateTimeFormat(lastKnownLang, {\n        timeZone: userTimeZone,\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        ...options,\n    });\n\n    return dateTimeFormatter.format(givenDate);\n}\n\n/**\n * Formats a Date object to the currently selected timezone.\n *\n * @param {Date} dateObj\n * @returns {Date}\n */\nexport function dateWithUserTimezone(dateObj: Date = new Date()) : Date {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const userTimeZone = (Shopware.State.get('session').currentUser?.timeZone as string) ?? 'UTC';\n\n    // Language and options are set in order to re-create the date object\n    const localizedDate = dateObj.toLocaleDateString('en-GB', {\n        timeZone: userTimeZone,\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n    });\n\n    return new Date(localizedDate);\n}\n\n/**\n * Generates a md5 hash of the given value.\n *\n * @param {String} value\n * @return {String}\n */\nexport function md5(value: string): string {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n    return MD5.hash(value) as string;\n}\n\n/**\n * Formats a number of bytes to a string with a unit\n */\nexport function fileSize(bytes: number, locale = 'de-DE'): string {\n    const denominator = 1024;\n    const units = ['B', 'KB', 'MB', 'GB'];\n\n    let result = Number.parseInt(String(bytes), 10);\n    let i = 0;\n\n    for (; i < units.length; i += 1) {\n        const currentResult = result / denominator;\n\n        if (currentResult < 0.9) {\n            break;\n        }\n\n        result = currentResult;\n    }\n\n    // @ts-expect-error\n    return `${result.toFixed(2).toLocaleString(locale)}${units[i]}`;\n}\n\nexport function toISODate(dateObj: Date, useTime = true): string {\n    const isoDate = dateObj.toISOString();\n\n    return useTime ? isoDate : isoDate.split('T')[0];\n}\n\n","/**\n * @module core/service/utils/dom\n */\n\nimport { warn } from './debug.utils';\n\n/**\n * Returns the scrollbar height of an HTML element.\n */\nfunction getScrollbarHeight(element: HTMLElement): number {\n    if (!(element instanceof HTMLElement)) {\n        warn('DOM Utilities', 'The provided element needs to be an instance of \"HTMLElement\".', element);\n        return 0;\n    }\n    return (element.offsetHeight - element.clientHeight);\n}\n\n/**\n * Returns the scrollbar width of an HTML element.\n */\nfunction getScrollbarWidth(element: HTMLElement): number {\n    if (!(element instanceof HTMLElement)) {\n        warn('DOM Utilities', 'The provided element needs to be an instance of \"HTMLElement\".', element);\n        return 0;\n    }\n    return (element.offsetWidth - element.clientWidth);\n}\n\n/**\n * uses the browser's copy function to copy a string\n */\nfunction copyToClipboard(stringToCopy: string): void {\n    const tempTextArea = document.createElement('textarea');\n    tempTextArea.value = stringToCopy;\n    document.body.appendChild(tempTextArea);\n    tempTextArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempTextArea);\n}\n\nexport default {\n    getScrollbarHeight,\n    getScrollbarWidth,\n    copyToClipboard,\n};\n","/**\n * @module core/service/utils/file-reader\n */\n\nfunction registerPromiseOnFileReader(\n    fileReader: FileReader,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    resolve: (value?: any) => void,\n    reject: (reason?: unknown) => void,\n):void {\n    fileReader.onerror = ():void => {\n        fileReader.abort();\n        reject(new DOMException('Problem parsing file.'));\n    };\n\n    fileReader.onload = ():void => {\n        resolve(fileReader.result);\n    };\n}\n\nfunction splitFileNameAndExtension(completeFileName: string): {extension: string | undefined, fileName: string} {\n    const fileParts = completeFileName.split('.');\n\n    // no dot in filename\n    if (fileParts.length === 1) {\n        return {\n            extension: '',\n            fileName: completeFileName,\n        };\n    }\n\n    // hidden file without extension\n    if (fileParts.length === 2 && !fileParts[0]) {\n        return {\n            extension: '',\n            fileName: completeFileName,\n        };\n    }\n\n    return {\n        extension: fileParts.pop(),\n        fileName: fileParts.join('.'),\n    };\n}\n\nfunction readFileAsArrayBuffer<FILE = unknown>(inputFile: Blob): Promise<FILE> {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsArrayBuffer(inputFile);\n    });\n}\n\nfunction readFileAsDataURL<FILE = unknown>(inputFile: Blob): Promise<FILE> {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsDataURL(inputFile);\n    });\n}\n\nfunction readFileAsText<FILE = unknown>(inputFile: Blob): Promise<FILE> {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsText(inputFile);\n    });\n}\n\nfunction getNameAndExtensionFromFile(fileHandle: File): {extension: string | undefined, fileName: string} {\n    return splitFileNameAndExtension(fileHandle.name);\n}\n\nfunction getNameAndExtensionFromUrl(urlObject: URL): {extension: string | undefined, fileName: string} {\n    let ref = urlObject.href.split('/').pop();\n\n    if (!ref) {\n        throw new Error('Invalid URL');\n    }\n\n    const indexOfQueryIndicator = ref.indexOf('?');\n    if (indexOfQueryIndicator > 0) {\n        ref = ref.substring(0, indexOfQueryIndicator);\n    }\n\n    ref = decodeURI(ref);\n\n    return splitFileNameAndExtension(ref);\n}\n\nexport default {\n    readFileAsArrayBuffer,\n    readFileAsDataURL,\n    readFileAsText,\n    getNameAndExtensionFromFile,\n    getNameAndExtensionFromUrl,\n};\n","\n/**\n * @module core/service/utils/sort\n */\nexport default {\n    afterSort,\n};\n\n\ninterface SortElements {\n    id: string,\n    data: {\n        [key: string]: unknown\n    }\n}\n\n/**\n * Sorts the elements by their after id property chain\n *\n * @param {array} elements\n * @param {string} property\n * @returns {array}\n */\nfunction afterSort(elements: SortElements[], property = 'afterId'): SortElements[] {\n    if (elements.length === 0) {\n        return elements;\n    }\n\n    // pre-sort elements to pull elements without an after id parent to the front\n    elements.sort((a, b) => {\n        if (a.data[property] === b.data[property] && a.data[property] === null) {\n            return 0;\n        }\n\n        if (b.data[property] === null) {\n            return 1;\n        }\n\n        if (a.data[property] === null) {\n            return -1;\n        }\n\n        return 0;\n    });\n\n    // add first element to sorted list as this will be the absolute first item\n    const firstItem = elements.shift();\n    const sortedElements = [firstItem];\n\n    let lastId = firstItem && firstItem.id;\n\n    while (elements.length > 0) {\n        let loop = true;\n        /* eslint-disable no-loop-func */\n        elements.forEach((leaf, key) => {\n            if (leaf.data[property] !== lastId) {\n                return;\n            }\n\n            // find the next element in the chain and set it as the new parent\n            sortedElements.push(leaf);\n            lastId = leaf.id;\n\n            elements.splice(key, 1);\n            loop = false;\n        });\n        /* eslint-enable no-loop-func */\n\n        // chain is broken, continue with next element as parent\n        if (loop) {\n            const nextItem = elements.shift();\n\n            sortedElements.push(nextItem);\n\n            if (!elements.length) {\n                break;\n            }\n\n            lastId = nextItem && nextItem.data[property] as string;\n        }\n    }\n\n    return sortedElements as SortElements[];\n}\n","/**\n * @module core/service/utils\n */\nimport throttle from 'lodash/throttle';\nimport flow from 'lodash/flow';\nimport debounce from 'lodash/debounce';\nimport flattenDeep from 'lodash/flattenDeep';\nimport uuidV4 from 'uuid/v4';\nimport remove from 'lodash/remove';\nimport slice from 'lodash/slice';\nimport uniqBy from 'lodash/uniqBy';\nimport chunk from 'lodash/chunk';\nimport intersectionBy from 'lodash/intersectionBy';\n\nimport {\n    deepCopyObject,\n    hasOwnProperty,\n    getObjectDiff,\n    getArrayChanges,\n    cloneDeep,\n    merge,\n    mergeWith,\n    deepMergeObject,\n    get,\n    set,\n    pick,\n} from './utils/object.utils';\nimport { warn, error } from './utils/debug.utils';\nimport { currency, date, dateWithUserTimezone, fileSize, md5, toISODate } from './utils/format.utils';\nimport domUtils from './utils/dom.utils';\nimport stringUtils from './utils/string.utils';\nimport typesUtils, { isUndefined } from './utils/types.utils';\nimport fileReaderUtils from './utils/file-reader.utils';\nimport sortUtils from './utils/sort.utils';\n\nexport const object = {\n    deepCopyObject: deepCopyObject,\n    hasOwnProperty: hasOwnProperty,\n    getObjectDiff: getObjectDiff,\n    getArrayChanges: getArrayChanges,\n    cloneDeep: cloneDeep,\n    merge: merge,\n    mergeWith: mergeWith,\n    deepMergeObject: deepMergeObject,\n    get: get,\n    set: set,\n    pick: pick,\n};\n\nexport const debug = {\n    warn: warn,\n    error: error,\n};\n\nexport const format = {\n    currency: currency,\n    date: date,\n    dateWithUserTimezone: dateWithUserTimezone,\n    fileSize: fileSize,\n    md5: md5,\n    toISODate: toISODate,\n};\n\nexport const dom = {\n    getScrollbarHeight: domUtils.getScrollbarHeight,\n    getScrollbarWidth: domUtils.getScrollbarWidth,\n    copyToClipboard: domUtils.copyToClipboard,\n};\n\nexport const string = {\n    capitalizeString: stringUtils.capitalizeString,\n    camelCase: stringUtils.camelCase,\n    upperFirst: stringUtils.upperFirst,\n    kebabCase: stringUtils.kebabCase,\n    snakeCase: stringUtils.snakeCase,\n    md5: md5,\n    isEmptyOrSpaces: stringUtils.isEmptyOrSpaces,\n    isUrl: stringUtils.isUrl,\n    isValidIp: stringUtils.isValidIp,\n};\n\nexport const types = {\n    isObject: typesUtils.isObject,\n    isPlainObject: typesUtils.isPlainObject,\n    isEmpty: typesUtils.isEmpty,\n    isRegExp: typesUtils.isRegExp,\n    isArray: typesUtils.isArray,\n    isFunction: typesUtils.isFunction,\n    isDate: typesUtils.isDate,\n    isString: typesUtils.isString,\n    isBoolean: typesUtils.isBoolean,\n    isEqual: typesUtils.isEqual,\n    isNumber: typesUtils.isNumber,\n    isUndefined: isUndefined,\n};\n\nexport const fileReader = {\n    readAsArrayBuffer: fileReaderUtils.readFileAsArrayBuffer,\n    readAsDataURL: fileReaderUtils.readFileAsDataURL,\n    readAsText: fileReaderUtils.readFileAsText,\n    getNameAndExtensionFromFile: fileReaderUtils.getNameAndExtensionFromFile,\n    getNameAndExtensionFromUrl: fileReaderUtils.getNameAndExtensionFromUrl,\n};\n\nexport const sort = {\n    afterSort: sortUtils.afterSort,\n};\n\nexport const array = {\n    flattenDeep: flattenDeep,\n    remove: remove,\n    slice: slice,\n    uniqBy: uniqBy,\n    chunk: chunk,\n    intersectionBy: intersectionBy,\n};\n\nexport default {\n    createId,\n    throttle,\n    debounce,\n    flow,\n    get,\n    object,\n    debug,\n    format,\n    dom,\n    string,\n    types,\n    fileReader,\n    sort,\n    array,\n};\n\n/**\n * Returns a uuid string in hex format.\n *\n * @returns {String}\n */\nfunction createId(): string {\n    // eslint-disable-next-line max-len\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-member-access\n    return uuidV4().replace(/-/g, '');\n}\n","/**\n * @module core/feature-config\n */\n\n/**\n * A static registry containing a list of all registered flags and the associated activation state\n */\nexport default class Feature {\n    static flags: { [featureName: string]: boolean } = {};\n\n    static init(flagConfig: { [featureName: string]: boolean }): void {\n        Object.entries(flagConfig).forEach(([flagName, isActive]) => {\n            this.flags[flagName] = isActive;\n        });\n    }\n\n    static getAll(): { [featureName: string]: boolean } {\n        return this.flags;\n    }\n\n    static isActive(flagName:string):boolean {\n        if (!this.flags.hasOwnProperty(flagName)) {\n            // if not set, its false\n            return false;\n        }\n\n        return this.flags[flagName];\n    }\n}\n","import { deepCopyObject } from 'src/core/service/utils/object.utils';\nimport utils from 'src/core/service/util.service';\nimport ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order\"\n * @class\n * @extends ApiService\n */\nclass OrderApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'orderService';\n    }\n\n    recalculateOrder(orderId, versionId, additionalParams = {}, additionalHeaders = {}) {\n        const route = `/_action/order/${orderId}/recalculate`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(route, {}, { additionalParams, headers });\n    }\n\n    addProductToOrder(orderId, versionId, productId, quantity, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/product/${productId}`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(\n                route,\n                { quantity: quantity },\n                { additionalParams, headers },\n            );\n    }\n\n    addCustomLineItemToOrder(orderId, versionId, item, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/lineItem`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        const dummyPrice = deepCopyObject(item.priceDefinition);\n        dummyPrice.taxRules = item.priceDefinition.taxRules;\n        dummyPrice.isCalculated = true;\n\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { label: item.label,\n                        quantity: item.quantity,\n                        type: item.type,\n                        identifier: utils.createId(),\n                        description: item.description,\n                        priceDefinition: dummyPrice },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    addCreditItemToOrder(orderId, versionId, item, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/creditItem`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        const dummyPrice = deepCopyObject(item.priceDefinition);\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { label: item.label,\n                        quantity: item.quantity,\n                        type: item.type,\n                        identifier: utils.createId(),\n                        description: item.description,\n                        priceDefinition: dummyPrice },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    addPromotionToOrder(orderId, versionId, code, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/promotion-item`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { code },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    toggleAutomaticPromotions(orderId, versionId, skipAutomaticPromotions, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/toggleAutomaticPromotions`;\n        const headers = Object.assign(ApiService.getVersionHeader(versionId), this.getBasicHeaders(additionalHeaders));\n\n        return this.httpClient\n            .post(route,\n                JSON.stringify(\n                    { skipAutomaticPromotions },\n                ), {\n                    additionalParams,\n                    headers,\n                });\n    }\n\n    changeOrderAddress(orderAddressId, customerAddressId, additionalParams, additionalHeaders) {\n        const route = `_action/order-address/${orderAddressId}/customer-address/${customerAddressId}`;\n        const params = Object.assign({ }, additionalParams);\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, {}, {\n                params,\n                headers,\n            });\n    }\n}\n\nexport default OrderApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"check-email-unique\"\n * @class\n * @extends ApiService\n */\nclass UserValidationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'check-email-unique') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userValidationService';\n    }\n\n    checkUserEmail({ email, id }, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            email,\n            id,\n        };\n\n        return this.httpClient\n            .post(`/_action/user/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    checkUserUsername({ username, id }, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            username,\n            id,\n        };\n\n        return this.httpClient\n            .post('/_action/user/check-username-unique', payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserValidationApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"order/state-machine\"\n * @class\n * @extends ApiService\n */\nclass OrderStateMachineApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'orderStateMachineService';\n    }\n\n    transitionOrderState(orderId, actionName, mediaIds = {}, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_action/order/${orderId}/state/${actionName}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, mediaIds, {\n                additionalParams,\n                headers,\n            });\n    }\n\n    transitionOrderTransactionState(\n        orderTransactionId,\n        actionName,\n        mediaIds = {},\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_action/order_transaction/${orderTransactionId}/state/${actionName}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, mediaIds, {\n                additionalParams,\n                headers,\n            });\n    }\n\n    transitionOrderDeliveryState(\n        orderDeliveryStateId,\n        actionName,\n        mediaIds = {},\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_action/order_delivery/${orderDeliveryStateId}/state/${actionName}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, mediaIds, {\n                additionalParams,\n                headers,\n            });\n    }\n}\n\nexport default OrderStateMachineApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"scheduled-task\"\n * @class\n * @extends ApiService\n */\nclass ScheduledTaskApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'scheduled-task') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'scheduledTaskService';\n    }\n\n    /**\n     * Run all due scheduled tasks\n     *\n     * @returns {Promise<T>}\n     */\n    runTasks() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/run`, null, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get the minimum run interval of all tasks\n     *\n     * @returns {Promise<T>}\n     */\n    getMinRunInterval() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/min-run-interval`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default ScheduledTaskApiService;\n","import { AxiosInstance, AxiosResponse } from 'axios';\nimport ApiService from '../api.service';\nimport { LoginService } from '../login.service';\n\nexport type action = {\n    url: string,\n    entity: string,\n    action: string,\n    appName: string,\n};\n\nexport default class ExtensionSdkService extends ApiService {\n    constructor(httpClient: AxiosInstance, loginService: LoginService) {\n        super(httpClient, loginService, 'extension-sdk', 'application/json');\n\n        this.name = 'extensionSdkService';\n    }\n\n    /**\n     * @internal Only to be used by the extension sdk\n     */\n    runAction(action: action, entityIdList: string[]): Promise<unknown> {\n        return this.httpClient.post(\n            `/_action/${this.getApiBasePath()}/run-action`,\n            {\n                ...action,\n                ids: entityIdList,\n            },\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response: AxiosResponse<unknown>) => {\n            ApiService.handleResponse(response);\n        });\n    }\n}\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"update\"\n * @class\n * @extends ApiService\n */\nclass UpdateService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'update') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'updateService';\n    }\n\n    checkForUpdates() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/check`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    checkRequirements() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/check-requirements`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    pluginCompatibility() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/plugin-compatibility`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    downloadUpdate(offset) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/download-latest-update?offset=${offset}`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    deactivatePlugins(offset, pluginDeactivationStrategy = '') {\n        const headers = this.getBasicHeaders();\n        const actionUrlPart = `/_action/${this.getApiBasePath()}`;\n        const offsetParam = `offset=${offset}&deactivationFilter=${pluginDeactivationStrategy}`;\n\n        return this.httpClient\n            .get(`${actionUrlPart}/deactivate-plugins?${offsetParam}`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    unpackUpdate(offset) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(\n                `/_action/${this.getApiBasePath()}/unpack?offset=${offset}`,\n                { headers },\n            ).then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getBasicParams(additionalParams = {}) {\n        const basicParams = {\n            language: localStorage.getItem('sw-admin-locale'),\n        };\n\n        return Object.assign({}, basicParams, additionalParams);\n    }\n}\n\nexport default UpdateService;\n","/**\n * @module core/service/utils/string\n */\nimport capitalizeString from 'lodash/capitalize';\nimport camelCase from 'lodash/camelCase';\nimport kebabCase from 'lodash/kebabCase';\nimport snakeCase from 'lodash/snakeCase';\nimport upperFirst from 'lodash/upperFirst';\n\nexport default {\n    capitalizeString,\n    upperFirst,\n    camelCase,\n    kebabCase,\n    snakeCase,\n    isEmptyOrSpaces,\n    isUrl,\n    isValidIp,\n};\n\n/**\n * Gets if the content of the string is really empty.\n * This does also remove any whitespaces that might\n * exist in the text.\n */\nfunction isEmptyOrSpaces(value: string): boolean {\n    return (!value || value.length <= 0) ? true : value.trim().length <= 0;\n}\n\n/**\n * Checks if the provided value is a URL\n */\nfunction isUrl(value: string): boolean {\n    try {\n        return Boolean(new URL(value));\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isValidIp(ip: string): boolean {\n    // https://regex101.com/r/qHTUIe/1\n    // eslint-disable-next-line max-len\n    return RegExp('((^\\\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\\\s*$)|(^\\\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)(\\\\.(25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]?\\\\d)){3}))|:)))(%.+)?\\\\s*$))').test(ip);\n}\n","import Criteria from '@shopware-ag/admin-extension-sdk/es/data/Criteria';\n\nexport default Criteria;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"state-machine\"\n * @class\n * @extends ApiService\n */\nclass StateMachineApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'state-machine') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'stateMachineService';\n    }\n\n    /**\n     * @param {string} stateFieldName (optional) Specify a different property of the base entity\n     *   that holds the state id (e.g. `stateId`)\n     */\n    getState(\n        entity,\n        entityId,\n        additionalParams = {},\n        additionalHeaders = {},\n        stateFieldName = null,\n        additionalQueryParams = {},\n    ) {\n        const query = ApiService.makeQueryParams({\n            stateFieldName,\n            ...additionalQueryParams,\n        });\n        const route = `_action/state-machine/${entity}/${entityId}/state${query}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(route, {\n                additionalParams,\n                headers,\n            });\n    }\n\n    /**\n     * @param {string} stateFieldName (optional) Specify a different property of the base entity\n     *   that holds the state id (e.g. `stateId`)\n     */\n    transitionState(\n        entity,\n        entityId,\n        actionName,\n        additionalParams = {},\n        additionalHeaders = {},\n        stateFieldName = null,\n        additionalQueryParams = {},\n    ) {\n        const query = ApiService.makeQueryParams({\n            stateFieldName,\n            ...additionalQueryParams,\n        });\n        const route = `_action/state-machine/${entity}/${entityId}/state/${actionName}${query}`;\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(route, {}, {\n                additionalParams,\n                headers,\n            });\n    }\n}\n\nexport default StateMachineApiService;\n","export default {\n    warn,\n    error,\n};\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function warn(name = 'Core', ...message: any[]): void {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        // @ts-expect-error\n        console.warn.apply(this, message);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function error(name = 'Core', ...message: any[]): void {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        // @ts-expect-error\n        console.error.apply(this, message);\n    }\n}\n","import ApiService from '../api.service';\n\n\nclass SystemConfigApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'system-config') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'systemConfigApiService';\n    }\n\n    checkConfig(domain, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .get('_action/system-config/check', {\n                params: { domain, ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getConfig(domain, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .get('_action/system-config/schema', {\n                params: { domain, ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getValues(domain, salesChannelId = null, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .get('_action/system-config', {\n                params: { domain, salesChannelId, ...additionalParams },\n                headers: this.getBasicHeaders(additionalHeaders),\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            }).then((data) => {\n                // If config is empty we will receive an empty array.\n                // We have to return an empty object instead because of reactivity\n                return Array.isArray(data) ? {} : data;\n            });\n    }\n\n    saveValues(values, salesChannelId = null, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .post('_action/system-config',\n                values,\n                {\n                    params: { salesChannelId, ...additionalParams },\n                    headers: this.getBasicHeaders(additionalHeaders),\n                })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    batchSave(values, additionalParams = {}, additionalHeaders = {}) {\n        return this.httpClient\n            .post('_action/system-config/batch',\n                values,\n                {\n                    params: { ...additionalParams },\n                    headers: this.getBasicHeaders(additionalHeaders),\n                })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SystemConfigApiService;\n","/**\n * Refresh token helper which manages a cache of requests to retry them after the token got refreshed.\n * @class\n */\nclass RefreshTokenHelper {\n    constructor() {\n        this._isRefreshing = false;\n        this._subscribers = [];\n        this._errorSubscribers = [];\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        this._whitelist = [\n            '/oauth/token',\n        ];\n    }\n\n    /**\n     * Subscribe a new callback to the cache queue\n     *\n     * @param {Function} [callback = () => {}]\n     * @param {Function} [errorCallback = () => {}]\n     */\n    subscribe(callback = () => {}, errorCallback = () => {}) {\n        this._subscribers.push(callback);\n        this._errorSubscribers.push(errorCallback);\n    }\n\n    /**\n     * Event handler which will be fired when the token got refresh. It iterates over the registered\n     * subscribers and fires the callbacks with the new token.\n     *\n     * @param {String} token - Renewed access token\n     */\n    onRefreshToken(token) {\n        this._subscribers = this._subscribers.reduce((accumulator, callback) => {\n            callback.call(null, token);\n            return accumulator;\n        }, []);\n        this._errorSubscribers = [];\n    }\n\n    /**\n     * Event handler which will be fired when the refresh token couldn't be fetched from the API\n     *\n     * @param {Error} err\n     */\n    onRefreshTokenFailed(err) {\n        this._errorSubscribers = this._errorSubscribers.reduce((accumulator, callback) => {\n            callback.call(null, err);\n            return accumulator;\n        }, []);\n        this._subscribers = [];\n    }\n\n    /**\n     * Fires the refresh token request and renews the bearer authentication in the login service.\n     *\n     * @returns {Promise<String>}\n     */\n    fireRefreshTokenRequest() {\n        const loginService = Shopware.Service('loginService');\n        this.isRefreshing = true;\n\n        return loginService.refreshToken().then((newToken) => {\n            this.onRefreshToken(newToken);\n        }).finally(() => {\n            this.isRefreshing = false;\n        }).catch(() => {\n            loginService.logout();\n            this.onRefreshTokenFailed();\n            return Promise.reject();\n        });\n    }\n\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    get whitelist() {\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        return this._whitelist;\n    }\n\n    // eslint-disable-next-line inclusive-language/use-inclusive-words\n    set whitelist(urls) {\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        this._whitelists = urls;\n    }\n\n    get isRefreshing() {\n        return this._isRefreshing;\n    }\n\n    set isRefreshing(value) {\n        this._isRefreshing = value;\n    }\n}\n\nconst refreshTokenHelper = new RefreshTokenHelper();\n\nexport default function getRefreshTokenHelper() {\n    return refreshTokenHelper;\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"seo-url\"\n * @class\n * @extends ApiService\n */\nclass SeoUrlApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'seo-url') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'seoUrlService';\n    }\n\n    updateCanonicalUrl(seoUrl, languageId, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/canonical`;\n\n        Object.assign(additionalHeaders, { 'sw-language-id': languageId });\n\n        return this.httpClient.patch(\n            apiRoute,\n            seoUrl,\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    createCustomUrl(routeName, urls, additionalParams = {}, additionalHeaders = {}) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/create-custom-url`;\n\n        return this.httpClient.post(\n            apiRoute,\n            { routeName, urls },\n            {\n                params: additionalParams,\n                headers: this.getBasicHeaders(additionalHeaders),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default SeoUrlApiService;\n","import ApiService from '../api.service';\n\n/**\n * @class\n * @extends ApiService\n */\nclass FlowActionApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'actions') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'flowActionService';\n    }\n\n    /**\n     * Get all actions\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getActions(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_info/flow-actions.json', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default FlowActionApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"calculate-price\"\n * @class\n * @extends ApiService\n */\nclass CalculatePriceApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'calculate-price') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'calculate-price';\n    }\n\n    calculatePrice({ taxId, price, output = 'gross', currencyId }, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const payload = {\n            taxId,\n            price,\n            output,\n            currencyId,\n        };\n\n        return this.httpClient\n            .post(`/_action/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default CalculatePriceApiService;\n","class CacheApiService {\n    constructor(httpClient, loginService) {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.name = 'cacheApiService';\n    }\n\n    info() {\n        const headers = this.getHeaders();\n        return this.httpClient.get('/_action/cache_info', { headers });\n    }\n\n    index(skip = []) {\n        const headers = this.getHeaders();\n        return this.httpClient.post('/_action/index', { skip }, { headers });\n    }\n\n    clear() {\n        const headers = this.getHeaders();\n        return this.httpClient.delete('/_action/cache', { headers }).then((response) => {\n            if (response.status === 204) {\n                return this.httpClient.delete('/_action/container_cache', { headers });\n            }\n            return Promise.reject();\n        });\n    }\n\n    cleanupOldCaches() {\n        const headers = this.getHeaders();\n        return this.httpClient.delete('/_action/cleanup', { headers });\n    }\n\n    clearAndWarmup() {\n        const headers = this.getHeaders();\n        return this.httpClient.delete('/_action/cache_warmup', { headers });\n    }\n\n    getHeaders() {\n        return {\n            Accept: 'application/json',\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json',\n        };\n    }\n}\n\nexport default CacheApiService;\n","import SyncApiService from './sync.api.service';\n\nexport default class PromotionSyncApiService extends SyncApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sync') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'promotionSyncService';\n    }\n\n    async loadPackagers() {\n        return this.httpClient.get(\n            '/_action/promotion/setgroup/packager',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return response.data;\n        });\n    }\n\n    async loadSorters() {\n        return this.httpClient.get(\n            '/_action/promotion/setgroup/sorter',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return response.data;\n        });\n    }\n}\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"frw\"\n * @class\n * @extends ApiService\n */\nclass FirstRunWizardApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'frw') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'firstRunWizardService';\n    }\n\n    /**\n     * Check shopwareId\n     *\n     * @param {Object} [payload = {}]\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    checkShopwareId(payload = {}, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_action/store/${this.apiEndpoint}/login`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get license domains\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getLicenseDomains(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/store/license-domains', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Verify license domain\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    verifyLicenseDomain(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/store/verify-license-domain', {}, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Set wizard start message\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    setFRWStart(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/store/frw/start', {}, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Set wizard finish message\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    setFRWFinish(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post('/_action/store/frw/finish', {}, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default FirstRunWizardApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"message-queue\"\n * @class\n * @extends ApiService\n */\nclass MessageQueueApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'message-queue') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'messageQueueService';\n    }\n\n    /**\n     * Run all due scheduled tasks\n     *\n     * @returns {Promise<T>}\n     */\n    consume(receiver) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/consume`, { receiver }, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default MessageQueueApiService;\n","/**\n * @module core/factory/http\n */\nimport Axios from 'axios';\nimport getRefreshTokenHelper from 'src/core/helper/refresh-token.helper';\nimport cacheAdapterFactory from 'src/core/factory/cache-adapter.factory';\n\n/**\n * Initializes the HTTP client with the provided context. The context provides the API end point and will be used as\n * the base url for the HTTP client.\n *\n * @method createHTTPClient\n * @memberOf module:core/factory/http\n * @param {Context} context Information about the environment\n * @returns {AxiosInstance}\n */\nexport default function createHTTPClient(context) {\n    return createClient(context);\n}\n\n/**\n * Provides CancelToken so a request's promise from Http Client could be canceled.\n *\n * @returns { CancelToken, isCancel, Cancel}\n */\nexport const { CancelToken, isCancel, Cancel } = Axios;\n\n/**\n * Creates the HTTP client with the provided context.\n *\n * @param {Context} context Information about the environment\n * @returns {AxiosInstance}\n */\nfunction createClient() {\n    const client = Axios.create({\n        baseURL: Shopware.Context.api.apiPath,\n    });\n\n    refreshTokenInterceptor(client);\n    globalErrorHandlingInterceptor(client);\n    client.CancelToken = CancelToken;\n\n    /**\n     * Don´t use cache in unit tests because it is possible\n     * that the test uses the same route with different responses\n     * (e.g. error, success) in a short amount of time.\n     * So in test cases we are using the originalAdapter directly\n     * and skipping the caching mechanism.\n     */\n    if (process?.env?.NODE_ENV !== 'test') {\n        requestCacheAdapterInterceptor(client);\n    }\n\n    return client;\n}\n\n/**\n * Sets up an interceptor to handle automatic cache of same requests in short time amount\n *\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction requestCacheAdapterInterceptor(client) {\n    const requestCaches = {};\n\n    client.interceptors.request.use((config) => {\n        const originalAdapter = config.adapter;\n\n        config.adapter = cacheAdapterFactory(originalAdapter, requestCaches);\n\n        return config;\n    });\n}\n\n/**\n * Sets up an interceptor to process global request errors\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction globalErrorHandlingInterceptor(client) {\n    client.interceptors.response.use(response => response, error => {\n        const { response: { status, data: { errors, data } } } = error;\n\n        try {\n            handleErrorStates({ status, errors, error, data });\n        } catch (e) {\n            Shopware.Utils.debug.error(e);\n\n            if (errors) {\n                errors.forEach(singleError => {\n                    Shopware.State.dispatch('notification/createNotification', {\n                        variant: 'error',\n                        title: singleError.title,\n                        message: singleError.detail,\n                    });\n                });\n            }\n        }\n\n        return Promise.reject(error);\n    });\n\n    return client;\n}\n\n/**\n * Determines the different status codes and creates a matching error via Shopware.State\n * @param {Number} status\n * @param {Array} errors\n * @param {Object} error\n * @param {Object} data\n */\nfunction handleErrorStates({ status, errors, error = null, data }) {\n    // Get $tc for translations and bind the Vue component scope to make it working\n    const viewRoot = Shopware.Application.view.root;\n    const $tc = viewRoot.$tc.bind(viewRoot);\n\n    // Handle sync-api errors\n    if (status === 400 &&\n        (error?.response?.config?.url ?? '').includes('_action/sync')) {\n        if (!data) {\n            return;\n        }\n\n        // Get data for each entity\n        Object.values(data).forEach((item) => {\n            // Get error for each result\n            item.result.forEach((resultItem) => {\n                if (!resultItem.errors.length) {\n                    return;\n                }\n\n                const statusCode = parseInt(resultItem.errors[0].status, 10);\n                handleErrorStates({ status: statusCode, errors: resultItem.errors, data });\n            });\n        });\n    }\n\n    if (status === 403) {\n        const missingPrivilegeErrors = errors.filter(e => e.code === 'FRAMEWORK__MISSING_PRIVILEGE_ERROR');\n        missingPrivilegeErrors.forEach(missingPrivilegeError => {\n            const detail = JSON.parse(missingPrivilegeError.detail);\n            let missingPrivileges = detail.missingPrivileges;\n\n            // check if response is an object and not an array. If yes, then convert it\n            if (!Array.isArray(missingPrivileges) && typeof missingPrivileges === 'object') {\n                missingPrivileges = Object.values(missingPrivileges);\n            }\n\n            const missingPrivilegesMessage = missingPrivileges.reduce((message, privilege) => {\n                return `${message}<br>\"${privilege}\"`;\n            }, '');\n\n            Shopware.State.dispatch('notification/createNotification', {\n                variant: 'error',\n                system: true,\n                autoClose: false,\n                growl: true,\n                title: $tc('global.error-codes.FRAMEWORK__MISSING_PRIVILEGE_ERROR'),\n                message: `${$tc('sw-privileges.error.description')} <br> ${missingPrivilegesMessage}`,\n            });\n        });\n    }\n\n    if (status === 409) {\n        if (errors[0].code === 'FRAMEWORK__DELETE_RESTRICTED') {\n            const parameters = errors[0].meta.parameters;\n\n            const entityName = parameters.entity;\n            let blockingEntities = '';\n\n            blockingEntities = parameters.usages.reduce((message, usageObject) => {\n                const times = usageObject.count;\n                const timesSnippet = $tc('global.default.xTimesIn', times);\n                const blockingEntitiesSnippet = $tc(`global.entities.${usageObject.entityName}`, times[1]);\n                return `${message}<br>${timesSnippet} <b>${blockingEntitiesSnippet}</b>`;\n            }, '');\n\n            Shopware.State.dispatch('notification/createNotification', {\n                variant: 'error',\n                title: $tc('global.default.error'),\n                message: `${$tc(\n                    'global.notification.messageDeleteFailed',\n                    3,\n                    { entityName: $tc(`global.entities.${entityName}`) },\n                )\n                }${blockingEntities}`,\n            });\n        }\n    }\n\n    if (status === 412) {\n        const frameworkLanguageNotFound = errors.find((e) => e.code === 'FRAMEWORK__LANGUAGE_NOT_FOUND');\n\n        if (frameworkLanguageNotFound) {\n            localStorage.removeItem('sw-admin-current-language');\n\n            Shopware.State.dispatch('notification/createNotification', {\n                variant: 'error',\n                system: true,\n                autoClose: false,\n                growl: true,\n                title: frameworkLanguageNotFound.title,\n                message: `${frameworkLanguageNotFound.detail} Please reload the administration.`,\n                actions: [\n                    {\n                        label: 'Reload administration',\n                        method: () => window.location.reload(),\n                    },\n                ],\n            });\n        }\n    }\n}\n\n/**\n * Sets up an interceptor to refresh the token, cache the requests and retry them after the token got refreshed.\n *\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction refreshTokenInterceptor(client) {\n    const tokenHandler = getRefreshTokenHelper();\n\n    client.interceptors.response.use((response) => {\n        return response;\n    }, (error) => {\n        const { config, response: { status } } = error;\n        const originalRequest = config;\n        const resource = originalRequest.url.replace(originalRequest.baseURL, '');\n\n        // eslint-disable-next-line inclusive-language/use-inclusive-words\n        if (tokenHandler.whitelist.includes(resource)) {\n            return Promise.reject(error);\n        }\n\n        if (status === 401) {\n            if (!tokenHandler.isRefreshing) {\n                tokenHandler.fireRefreshTokenRequest().catch(() => {\n                    return Promise.reject(error);\n                });\n            }\n\n            return new Promise((resolve, reject) => {\n                tokenHandler.subscribe((newToken) => {\n                    // replace the expired token and retry\n                    originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                    originalRequest.url = originalRequest.url.replace(originalRequest.baseURL, '');\n                    resolve(Axios(originalRequest));\n                }, (err) => {\n                    if (!Shopware.Application.getApplicationRoot()) {\n                        reject(err);\n                        window.location.reload();\n                        return;\n                    }\n                    Shopware.Service('loginService').logout();\n                    Shopware.Application.getApplicationRoot().$router.push({ name: 'sw.login.index' });\n                    reject(err);\n                });\n            });\n        }\n\n        return Promise.reject(error);\n    });\n\n    return client;\n}\n","import ApiService from '../api.service';\n\nexport default class ExcludedSearchTermService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'reset-excluded-search-term') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'excludedSearchTermService';\n    }\n\n    resetExcludedSearchTerm() {\n        const route = '/_admin/reset-excluded-search-term';\n        const headers = this._getHeader();\n        return this.httpClient.post(route, {}, { headers });\n    }\n\n    _getHeader() {\n        return {\n            ...super.getBasicHeaders(),\n            'sw-language-id': Shopware.Context.api.languageId,\n        };\n    }\n}\n","import { deepCopyObject } from 'src/core/service/utils/object.utils';\nimport utils from 'src/core/service/util.service';\nimport ApiService from '../api.service';\n\nconst lineItemConstants = Object.freeze({\n    types: Object.freeze({\n        PRODUCT: 'product',\n        CREDIT: 'credit',\n        CUSTOM: 'custom',\n        PROMOTION: 'promotion',\n    }),\n\n    priceTypes: Object.freeze({\n        ABSOLUTE: 'absolute',\n        QUANTITY: 'quantity',\n    }),\n});\n\n/**\n * Gateway for the API end point \"cart\"\n * Uses the _proxy endpoint of the admin api to connect to the store-api endpoint cart\n * @class\n * @extends ApiService\n */\nclass CartStoreService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'cart') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'cartStoreService';\n    }\n\n    getLineItemTypes() {\n        return lineItemConstants.types;\n    }\n\n    getLineItemPriceTypes() {\n        return lineItemConstants.priceTypes;\n    }\n\n    mapLineItemTypeToPriceType(itemType) {\n        const lineItemTypes = this.getLineItemTypes();\n        const priceTypes = this.getLineItemPriceTypes();\n\n        const mapTypes = {\n            [lineItemTypes.PRODUCT]: priceTypes.QUANTITY,\n            [lineItemTypes.CUSTOM]: priceTypes.QUANTITY,\n            [lineItemTypes.CREDIT]: priceTypes.ABSOLUTE,\n        };\n\n        return mapTypes[itemType];\n    }\n\n    createCart(salesChannelId, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.get(route, { additionalParams, headers });\n    }\n\n    getCart(salesChannelId, contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.get(route, { additionalParams, headers });\n    }\n\n    cancelCart(salesChannelId, contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.delete(route, { additionalParams, headers });\n    }\n\n    removeLineItems(\n        salesChannelId,\n        contextToken,\n        lineItemKeys,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.delete(route, { additionalParams, headers, data: { ids: lineItemKeys } });\n    }\n\n    getRouteForItem(id, salesChannelId) {\n        return `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n    }\n\n    shouldPriceUpdated(item, isNewProductItem) {\n        const isUnitPriceEdited = item.price.unitPrice !== item.priceDefinition.price;\n        const isTaxRateEdited = (item?.price?.taxRules?.[0]?.taxRate ?? null)\n            !== (item?.priceDefinition?.taxRules?.[0]?.taxRate ?? null);\n        const isCustomItem = item.type === this.getLineItemTypes().CUSTOM;\n\n        const isExistingProductAndUnitPriceIsEdited = !isNewProductItem && isUnitPriceEdited;\n\n        if ((isExistingProductAndUnitPriceIsEdited || isTaxRateEdited) || (isCustomItem && !isUnitPriceEdited)) {\n            return true;\n        }\n        return false;\n    }\n\n    getPayloadForItem(item, salesChannelId, isNewProductItem, id) {\n        let dummyPrice = null;\n        if (this.shouldPriceUpdated(item, isNewProductItem)) {\n            dummyPrice = deepCopyObject(item.priceDefinition);\n            dummyPrice.taxRules = item.priceDefinition.taxRules;\n            dummyPrice.quantity = item.quantity;\n            dummyPrice.type = this.mapLineItemTypeToPriceType(item.type);\n        }\n\n        return {\n            items: [\n                {\n                    id: id,\n                    referencedId: id,\n                    label: item.label,\n                    quantity: item.quantity,\n                    type: item.type,\n                    description: item.description,\n                    priceDefinition: dummyPrice,\n                    stackable: true,\n                    removable: true,\n                    salesChannelId,\n                },\n            ],\n        };\n    }\n\n    saveLineItem(\n        salesChannelId,\n        contextToken,\n        item,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const isNewProductItem = item._isNew === true && item.type === this.getLineItemTypes().PRODUCT;\n        const id = item.identifier || item.id || utils.createId();\n        const route = this.getRouteForItem(id, salesChannelId, isNewProductItem);\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = this.getPayloadForItem(item, salesChannelId, isNewProductItem, id);\n\n        if (item._isNew) {\n            return this.httpClient.post(route, payload, { additionalParams, headers });\n        }\n\n        return this.httpClient.patch(route, payload, { additionalParams, headers });\n    }\n\n    addPromotionCode(\n        salesChannelId,\n        contextToken,\n        code,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = {\n            items: [\n                {\n                    type: this.getLineItemTypes().PROMOTION,\n                    referencedId: code,\n                },\n            ],\n        };\n\n        return this.httpClient.post(route, payload, { additionalParams, headers });\n    }\n\n    modifyShippingCosts(salesChannelId, contextToken, shippingCosts, additionalHeaders, additionalParams = {}) {\n        const route = '_proxy/modify-shipping-costs';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        return this.httpClient.patch(route, { salesChannelId, shippingCosts }, { additionalParams, headers });\n    }\n\n\n    disableAutomaticPromotions(contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = '_proxy/disable-automatic-promotions';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const data = {\n            salesChannelId: additionalParams.salesChannelId,\n        };\n\n        return this.httpClient.patch(route, data, { additionalParams, headers });\n    }\n\n    enableAutomaticPromotions(contextToken, additionalParams = {}, additionalHeaders = {}) {\n        const route = '_proxy/enable-automatic-promotions';\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const data = {\n            salesChannelId: additionalParams.salesChannelId,\n        };\n\n        return this.httpClient.patch(route, data, { additionalParams, headers });\n    }\n\n    addMultipleLineItems(\n        salesChannelId,\n        contextToken,\n        items,\n        additionalParams = {},\n        additionalHeaders = {},\n    ) {\n        const route = `_proxy/store-api/${salesChannelId}/checkout/cart/line-item`;\n        const headers = {\n            ...this.getBasicHeaders(additionalHeaders),\n            'sw-context-token': contextToken,\n        };\n\n        const payload = items.map(item => {\n            if (item.type === this.getLineItemTypes().PROMOTION) {\n                return item;\n            }\n\n            const id = item.identifier || item.id || utils.createId();\n\n            return {\n                id,\n                referencedId: id,\n                label: item.label,\n                quantity: item.quantity,\n                type: item.type,\n                description: item.description,\n                priceDefinition: item.type === this.getLineItemTypes().PRODUCT ? null : item.priceDefinition,\n                stackable: true,\n                removable: true,\n                salesChannelId,\n            };\n        });\n\n        return this.httpClient.post(route, { items: payload }, { additionalParams, headers });\n    }\n}\n\nexport default CartStoreService;\n","import ApiService from '../api.service';\n\nexport class InvalidActionButtonParameterError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidActionButtonParameterError';\n    }\n}\n\nexport default class AppActionButtonService extends ApiService {\n    /**\n     * @param {AxiosInstance} httpClient\n     * @param {LoginService} loginService\n     */\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appActionButtonService';\n    }\n\n    getBasicHeaders() {\n        return {\n            ...super.getBasicHeaders(),\n            'sw-language-id': Shopware.Context.api.languageId,\n        };\n    }\n\n    /**\n     * Fetches available actions for a page\n     *\n     * @param {string} entity\n     * @param {string} view\n     */\n    getActionButtonsPerView(entity, view) {\n        if (!entity) {\n            throw new InvalidActionButtonParameterError(`Parameter \"entity\" must have a valid value. Given: ${entity}`);\n        }\n\n        if (!view) {\n            throw new InvalidActionButtonParameterError(`Parameter \"view\" must have a valid value. Given: ${view}`);\n        }\n\n        return this.httpClient\n            .get(`app-system/action-button/${entity}/${view}`,\n                {\n                    headers: this.getBasicHeaders(),\n                }).then(({ data }) => {\n                return data.actions;\n            });\n    }\n\n    /**\n     * Run an action on the server\n     *\n     * @param {string} id\n     * @param {Object} params\n     */\n    runAction(id, params = {}) {\n        return this.httpClient\n            .post(\n                `app-system/action-button/run/${id}`,\n                params,\n                {\n                    headers: this.getBasicHeaders(),\n                },\n            );\n    }\n}\n","import ApiService from '../api.service';\n\nexport default class AppModulesService extends ApiService {\n    constructor(httpClient, loginService) {\n        super(httpClient, loginService, null, 'application/json');\n        this.name = 'appModulesService';\n    }\n\n    fetchAppModules() {\n        return this.httpClient.get(\n            'app-system/modules',\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then(({ data }) => {\n            return data.modules;\n        });\n    }\n}\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"store\"\n * @class\n * @extends ApiService\n */\nclass StoreApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'store') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'storeService';\n    }\n\n    ping() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/ping`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    login(shopwareId, password) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/login`, { shopwareId, password }, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    checkLogin() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/checklogin`, {}, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    logout() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/logout`, {}, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 Unused method will be removed\n     */\n    getLicenseList() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/licenses`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getUpdateList() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/updates`, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 - Use ExtensionStoreActionService.downloadExtension() instead\n     */\n    downloadPlugin(pluginName, unauthenticated = false, onlyDownload = false) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams({\n            pluginName: pluginName,\n        });\n        if (unauthenticated) {\n            params.unauthenticated = true;\n        }\n\n        if (onlyDownload) {\n            return this.httpClient\n                .get(`/_action/${this.getApiBasePath()}/download`, { params, headers })\n                .then((response) => {\n                    return ApiService.handleResponse(response);\n                });\n        }\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/download`, { params, headers })\n            .then(() => {\n                return this.httpClient\n                    .post('/_action/plugin/update', null, { params, headers });\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @deprecated tag:v6.5.0 - Use ExtensionStoreActionService.downloadExtension() and\n     * ExtensionStoreActionService.updateExtension() instead\n     */\n    downloadAndUpdatePlugin(pluginName, unauthenticated = false) {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams({\n            pluginName: pluginName,\n        });\n        if (unauthenticated) {\n            params.unauthenticated = true;\n        }\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/download`, { params, headers })\n            .then(() => {\n                return this.httpClient\n                    .post('/_action/plugin/update', null, { params, headers });\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getLicenseViolationList() {\n        const headers = this.getBasicHeaders();\n        const params = this.getBasicParams();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}/plugin/search`, null, { params, headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    getBasicParams(additionalParams = {}) {\n        const basicParams = {\n            language: localStorage.getItem('sw-admin-locale'),\n        };\n\n        return Object.assign({}, basicParams, additionalParams);\n    }\n}\n\nexport default StoreApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"integration\"\n * @class\n * @extends ApiService\n */\nclass IntegrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'integration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'integrationService';\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}, user = false) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const endpoint = user ? '/_action/access-key/user' : '/_action/access-key/intergration';\n\n        return this.httpClient\n            .get(endpoint, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default IntegrationApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"snippet\"\n * @class\n * @extends ApiService\n */\nclass SnippetApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'snippet') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'snippetService';\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getByKey(translationKey, page, limit, isCustom = false) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(`/_action/${this.getApiBasePath()}`, { translationKey, page, limit, isCustom }, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * @returns {Promise<T>}\n     */\n    getFilter() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .get(`/_action/${this.getApiBasePath()}/filter`, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get snippets\n     *\n     * @returns {Promise<T>}\n     */\n    getSnippets(localeFactory, code) {\n        const headers = this.getBasicHeaders();\n        const locale = code || localeFactory.getLastKnownLocale();\n\n        return this.httpClient\n            .get(`/_admin/snippets?locale=${locale}`, {\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            }).then((allSnippets) => {\n                const registry = localeFactory.getLocaleRegistry();\n\n                Object.entries(allSnippets).forEach(([localeKey, snippets]) => {\n                    const fnName = (registry.has(localeKey) ? 'extend' : 'register');\n\n                    localeFactory[fnName](localeKey, snippets);\n                });\n            });\n    }\n}\n\nexport default SnippetApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"user\"\n * @class\n * @extends ApiService\n */\nclass UserApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'user') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userService';\n    }\n\n    /**\n     * Get information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getUser(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_info/me', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Update information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    updateUser(additionalParams = {}, additionalHeaders = {}) {\n        const data = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .patch('/_info/me', data,\n                {\n                    headers,\n                })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"mail\"\n * @class\n * @extends ApiService\n */\nclass MailApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'mail-template') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'mailService';\n    }\n\n    sendMailTemplate(\n        recipientMail,\n        recipient,\n        mailTemplate,\n        mailTemplateMedia,\n        salesChannelId,\n        testMode = false,\n        documentIds = [],\n        templateData = null,\n    ) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/send`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                contentHtml: mailTemplate.contentHtml ?? mailTemplate.translated?.contentHtml,\n                contentPlain: mailTemplate.contentPlain ?? mailTemplate.translated?.contentPlain,\n                mailTemplateData: templateData ?? mailTemplate.mailTemplateType.templateData,\n                recipients: { [recipientMail]: recipient },\n                salesChannelId: salesChannelId,\n                mediaIds: mailTemplateMedia.getIds(),\n                subject: mailTemplate.subject ?? mailTemplate.translated?.subject,\n                senderMail: mailTemplate.senderMail,\n                senderName: mailTemplate.senderName ?? mailTemplate.translated?.senderName,\n                documentIds,\n                testMode,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    testMailTemplate(recipient, mailTemplate, mailTemplateMedia, salesChannelId, documentIds = []) {\n        return this.sendMailTemplate(\n            recipient,\n            recipient,\n            mailTemplate,\n            mailTemplateMedia,\n            salesChannelId,\n            true,\n            documentIds,\n        );\n    }\n\n    buildRenderPreview(mailTemplateType, mailTemplate) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/build`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                mailTemplateType: mailTemplateType,\n                mailTemplate: mailTemplate,\n            },\n            {\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MailApiService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * Gateway for the API end point \"recommenations\"\n * @class\n * @extends ApiService\n */\nclass RecommendationsApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'recommendations') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'recommendationsService';\n    }\n\n    /**\n     * Get recommendations\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getRecommendations(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`/_action/store/${this.apiEndpoint}`, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get recommendations-regions\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getRecommendationRegions(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get('/_action/store/recommendation-regions', {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default RecommendationsApiService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point 'user-config'\n * @class\n * @extends ApiService\n */\nclass UserConfigService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = '_info/config-me') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userConfigService';\n    }\n\n    /**\n     * @description Process search user-config based on provide array keys of user-config,\n     * if keys is null, get all config of current logged-in user\n     *\n     * @param {Array|null} keys\n     * [\n     *     key_1,\n     *     key_2,\n     * ]\n     * @returns {Object}\n     * {\n     *     key_1: [value1],\n     *     key_2: [value2],\n     * }\n     */\n    search(keys = null) {\n        const headers = this.getBasicHeaders();\n        const params = Object.assign({}, { keys });\n\n        return this.httpClient\n            .get(this.getApiBasePath(), {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            })\n            .catch((error) => {\n                Shopware.Utils.debug.error(error);\n            });\n    }\n\n    /**\n     * @description Process mass upsert user-config for current logged-in user\n     * @param {Array} upsertData\n     * {\n     *     key_1: [value1],\n     *     key_2: [value2],\n     * }\n     */\n    upsert(upsertData) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient\n            .post(this.getApiBasePath(), upsertData, { headers })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserConfigService;\n","import ApiService from '../api.service';\n\n/**\n * Gateway for the API end point \"check-email-valid\"\n * @class\n * @extends ApiService\n */\nclass CustomerValidationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'check-customer-email-valid') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'customerValidationService';\n    }\n\n    checkCustomerEmail(payload, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(`/_admin/${this.apiEndpoint}`, payload, {\n                params,\n                headers,\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            })\n            .catch((exception) => {\n                throw exception;\n            });\n    }\n}\n\nexport default CustomerValidationApiService;\n","import ApiService from '../api.service';\n\n/**\n * Custom gateway for the \"user/user-recovery\" routes\n * @class\n * @extends ApiService\n */\nclass UserRecoveryApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'user') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'userRecoveryService';\n        this.context = Shopware.Context;\n    }\n\n    createRecovery(email) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery`;\n\n        return this.httpClient.post(\n            apiRoute,\n            {\n                email: email,\n            },\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            ApiService.handleResponse(response);\n        });\n    }\n\n    checkHash(hash) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery/hash`;\n\n        return this.httpClient.get(\n            apiRoute,\n            {\n                params: { hash: hash },\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            ApiService.handleResponse(response);\n        });\n    }\n\n    updateUserPassword(hash, password, passwordConfirm) {\n        const apiRoute = `/_action/${this.getApiBasePath()}/user-recovery/password`;\n\n        return this.httpClient.patch(\n            apiRoute,\n            {\n                hash: hash,\n                password: password,\n                passwordConfirm: passwordConfirm,\n            },\n            {\n                params: {},\n                headers: this.getBasicHeaders(),\n            },\n        ).then((response) => {\n            ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default UserRecoveryApiService;\n"],"sourceRoot":""}